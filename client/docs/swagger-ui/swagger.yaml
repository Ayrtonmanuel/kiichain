consumes:
  - application/json
definitions:
  cosmos.app.v1alpha1.Config:
    description: >-
      Config represents the configuration for a Cosmos SDK ABCI app.

      It is intended that all state machine logic including the version of

      baseapp and tx handlers (and possibly even Tendermint) that an app needs

      can be described in a config object. For compatibility, the framework
      should

      allow a mixture of declarative and imperative app wiring, however, apps

      that strive for the maximum ease of maintainability should be able to
      describe

      their state machine with a config object alone.
    properties: &ref_2
      golang_bindings:
        description: >-
          golang_bindings specifies explicit interface to implementation type
          bindings which

          depinject uses to resolve interface inputs to provider functions.  The
          scope of this

          field's configuration is global (not module specific).
        items: &ref_0
          description: >-
            GolangBinding is an explicit interface type to implementing type
            binding for dependency injection.
          properties:
            implementation:
              title: >-
                implementation is the implementing type which will be supplied
                when an input of type interface is requested
              type: string
            interface_type:
              title: >-
                interface_type is the interface type which will be bound to a
                specific implementation type
              type: string
          type: object
        type: array
      modules:
        description: modules are the module configurations for the app.
        items: &ref_1
          description: ModuleConfig is a module configuration for an app.
          properties:
            config:
              description: >-
                config is the config object for the module. Module config
                messages should

                define a ModuleDescriptor using the
                cosmos.app.v1alpha1.is_module extension.
              properties: &ref_3
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
            golang_bindings:
              description: >-
                golang_bindings specifies explicit interface to implementation
                type bindings which

                depinject uses to resolve interface inputs to provider
                functions.  The scope of this

                field's configuration is module specific.
              items: *ref_0
              type: array
            name:
              description: >-
                name is the unique name of the module within the app. It should
                be a name

                that persists between different versions of a module so that
                modules

                can be smoothly upgraded to new versions.


                For example, for the module cosmos.bank.module.v1.Module, we may
                chose

                to simply name the module "bank" in the app. When we upgrade to

                cosmos.bank.module.v2.Module, the app-specific name "bank" stays
                the same

                and the framework knows that the v2 module should receive all
                the same state

                that the v1 module had. Note: modules should provide info on
                which versions

                they can migrate from in the ModuleDescriptor.can_migration_from
                field.
              type: string
          type: object
        type: array
    type: object
  cosmos.app.v1alpha1.GolangBinding: *ref_0
  cosmos.app.v1alpha1.ModuleConfig: *ref_1
  cosmos.app.v1alpha1.QueryConfigResponse:
    description: QueryConfigRequest is the Query/Config response type.
    properties:
      config:
        description: config is the current app config.
        properties: *ref_2
        type: object
    type: object
  cosmos.auth.v1beta1.AddressBytesToStringResponse: &ref_215
    description: >-
      AddressBytesToStringResponse is the response type for AddressString rpc
      method.


      Since: cosmos-sdk 0.46
    properties:
      address_string:
        type: string
    type: object
  cosmos.auth.v1beta1.AddressStringToBytesResponse: &ref_216
    description: >-
      AddressStringToBytesResponse is the response type for AddressBytes rpc
      method.


      Since: cosmos-sdk 0.46
    properties:
      address_bytes:
        format: byte
        type: string
    type: object
  cosmos.auth.v1beta1.BaseAccount:
    description: >-
      BaseAccount defines a base account type. It contains all the necessary
      fields

      for basic account functionality. Any custom account type should extend
      this

      type for additional functionality (e.g. vesting).
    properties: &ref_4
      account_number:
        format: uint64
        type: string
      address:
        type: string
      pub_key: &ref_5
        properties: *ref_3
        type: object
      sequence:
        format: uint64
        type: string
    type: object
  cosmos.auth.v1beta1.Bech32PrefixResponse: &ref_214
    description: |-
      Bech32PrefixResponse is the response type for Bech32Prefix rpc method.

      Since: cosmos-sdk 0.46
    properties:
      bech32_prefix:
        type: string
    type: object
  cosmos.auth.v1beta1.Params:
    description: Params defines the parameters for the auth module.
    properties: &ref_6
      max_memo_characters:
        format: uint64
        type: string
      sig_verify_cost_ed25519:
        format: uint64
        type: string
      sig_verify_cost_secp256k1:
        format: uint64
        type: string
      tx_sig_limit:
        format: uint64
        type: string
      tx_size_cost_per_byte:
        format: uint64
        type: string
    type: object
  cosmos.auth.v1beta1.QueryAccountAddressByIDResponse: &ref_213
    description: 'Since: cosmos-sdk 0.46.2'
    properties:
      account_address:
        type: string
    title: >-
      QueryAccountAddressByIDResponse is the response type for
      AccountAddressByID rpc method
    type: object
  cosmos.auth.v1beta1.QueryAccountInfoResponse: &ref_210
    description: |-
      QueryAccountInfoResponse is the Query/AccountInfo response type.

      Since: cosmos-sdk 0.47
    properties:
      info:
        description: info is the account info which is represented by BaseAccount.
        properties: *ref_4
        type: object
    type: object
  cosmos.auth.v1beta1.QueryAccountResponse: &ref_212
    description: >-
      QueryAccountResponse is the response type for the Query/Account RPC
      method.
    properties:
      account:
        properties: *ref_3
        type: object
        description: account defines the account of the corresponding address.
    type: object
  cosmos.auth.v1beta1.QueryAccountsResponse: &ref_211
    description: >-
      QueryAccountsResponse is the response type for the Query/Accounts RPC
      method.


      Since: cosmos-sdk 0.43
    properties:
      accounts:
        items: *ref_5
        title: accounts are the existing accounts
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties: &ref_8
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  cosmos.auth.v1beta1.QueryModuleAccountByNameResponse: &ref_218
    description: >-
      QueryModuleAccountByNameResponse is the response type for the
      Query/ModuleAccountByName RPC method.
    properties:
      account: *ref_5
    type: object
  cosmos.auth.v1beta1.QueryModuleAccountsResponse: &ref_217
    description: >-
      QueryModuleAccountsResponse is the response type for the
      Query/ModuleAccounts RPC method.


      Since: cosmos-sdk 0.46
    properties:
      accounts:
        items: *ref_5
        type: array
    type: object
  cosmos.auth.v1beta1.QueryParamsResponse: &ref_219
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties: *ref_6
        type: object
    type: object
  cosmos.authz.v1beta1.Grant: &ref_9
    description: |-
      Grant gives permissions to execute
      the provide method with expiration time.
    properties:
      authorization: *ref_5
      expiration:
        format: date-time
        title: >-
          time when the grant will expire and will be pruned. If null, then the
          grant

          doesn't have a time expiration (other conditions  in `authorization`

          may apply to invalidate the grant)
        type: string
    type: object
  cosmos.authz.v1beta1.GrantAuthorization: &ref_7
    properties:
      authorization: *ref_5
      expiration:
        format: date-time
        type: string
      grantee:
        type: string
      granter:
        type: string
    title: >-
      GrantAuthorization extends a grant with both the addresses of the grantee
      and granter.

      It is used in genesis.proto and query.proto
    type: object
  cosmos.authz.v1beta1.QueryGranteeGrantsResponse: &ref_221
    description: >-
      QueryGranteeGrantsResponse is the response type for the
      Query/GranteeGrants RPC method.
    properties:
      grants:
        description: grants is a list of grants granted to the grantee.
        items: *ref_7
        type: array
      pagination:
        description: pagination defines an pagination for the response.
        properties: *ref_8
        type: object
    type: object
  cosmos.authz.v1beta1.QueryGranterGrantsResponse: &ref_222
    description: >-
      QueryGranterGrantsResponse is the response type for the
      Query/GranterGrants RPC method.
    properties:
      grants:
        description: grants is a list of grants granted by the granter.
        items: *ref_7
        type: array
      pagination:
        description: pagination defines an pagination for the response.
        properties: *ref_8
        type: object
    type: object
  cosmos.authz.v1beta1.QueryGrantsResponse: &ref_220
    description: >-
      QueryGrantsResponse is the response type for the Query/Authorizations RPC
      method.
    properties:
      grants:
        description: authorizations is a list of grants granted for grantee by granter.
        items: *ref_9
        type: array
      pagination:
        description: pagination defines an pagination for the response.
        properties: *ref_8
        type: object
    type: object
  cosmos.bank.v1beta1.DenomOwner: &ref_13
    description: |-
      DenomOwner defines structure representing an account that owns or holds a
      particular denominated token. It contains the account address and account
      balance of the denominated token.

      Since: cosmos-sdk 0.46
    properties:
      address:
        description: address defines the address that owns a particular denomination.
        type: string
      balance:
        description: balance is the balance of the denominated coin for an account.
        properties: &ref_11
          amount:
            type: string
          denom:
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.DenomUnit: &ref_10
    description: |-
      DenomUnit represents a struct that describes a given
      denomination unit of the basic token.
    properties:
      aliases:
        items:
          type: string
        title: aliases is a list of string aliases for the given denom
        type: array
      denom:
        description: denom represents the string name of the given denom unit (e.g uatom).
        type: string
      exponent:
        description: >-
          exponent represents power of 10 exponent that one must

          raise the base_denom to in order to equal the given DenomUnit's denom

          1 denom = 10^exponent base_denom

          (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom'
          with

          exponent = 6, thus: 1 atom = 10^6 uatom).
        format: int64
        type: integer
    type: object
  cosmos.bank.v1beta1.Metadata: &ref_14
    description: |-
      Metadata represents a struct that describes
      a basic token.
    properties: &ref_12
      base:
        description: >-
          base represents the base denom (should be the DenomUnit with exponent
          = 0).
        type: string
      denom_units:
        items: *ref_10
        title: denom_units represents the list of DenomUnit's for a given coin
        type: array
      description:
        type: string
      display:
        description: |-
          display indicates the suggested denom that should be
          displayed in clients.
        type: string
      name:
        description: 'Since: cosmos-sdk 0.43'
        title: 'name defines the name of the token (eg: Cosmos Atom)'
        type: string
      symbol:
        description: >-
          symbol is the token symbol usually shown on exchanges (eg: ATOM). This
          can

          be the same as the display.


          Since: cosmos-sdk 0.43
        type: string
      uri:
        description: >-
          URI to a document (on or off-chain) that contains additional
          information. Optional.


          Since: cosmos-sdk 0.46
        type: string
      uri_hash:
        description: >-
          URIHash is a sha256 hash of a document pointed by URI. It's used to
          verify that

          the document didn't change. Optional.


          Since: cosmos-sdk 0.46
        type: string
    type: object
  cosmos.bank.v1beta1.Params:
    description: Params defines the parameters for the bank module.
    properties: &ref_15
      default_send_enabled:
        type: boolean
      send_enabled:
        description: >-
          Deprecated: Use of SendEnabled in params is deprecated.

          For genesis, use the newly added send_enabled field in the genesis
          object.

          Storage, lookup, and manipulation of this information is now in the
          keeper.


          As of cosmos-sdk 0.47, this only exists for backwards compatibility of
          genesis files.
        items: &ref_16
          description: >-
            SendEnabled maps coin denom to a send_enabled status (whether a
            denom is

            sendable).
          properties:
            denom:
              type: string
            enabled:
              type: boolean
          type: object
        type: array
    type: object
  cosmos.bank.v1beta1.QueryAllBalancesResponse: &ref_223
    description: >-
      QueryAllBalancesResponse is the response type for the Query/AllBalances
      RPC

      method.
    properties:
      balances:
        description: balances is the balances of all the coins.
        items: &ref_17
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties: *ref_11
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties: *ref_8
        type: object
    type: object
  cosmos.bank.v1beta1.QueryBalanceResponse: &ref_224
    description: >-
      QueryBalanceResponse is the response type for the Query/Balance RPC
      method.
    properties:
      balance:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties: *ref_11
        type: object
    type: object
  cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringResponse: &ref_229
    description: >-
      QueryDenomMetadataByQueryStringResponse is the response type for the
      Query/DenomMetadata RPC

      method. Identical with QueryDenomMetadataResponse but receives denom as
      query string in request.
    properties:
      metadata:
        description: >-
          metadata describes and provides all the client information for the
          requested token.
        properties: *ref_12
        type: object
    type: object
  cosmos.bank.v1beta1.QueryDenomMetadataResponse: &ref_228
    description: >-
      QueryDenomMetadataResponse is the response type for the
      Query/DenomMetadata RPC

      method.
    properties:
      metadata:
        description: >-
          metadata describes and provides all the client information for the
          requested token.
        properties: *ref_12
        type: object
    type: object
  cosmos.bank.v1beta1.QueryDenomOwnersByQueryResponse: &ref_226
    description: >-
      QueryDenomOwnersByQueryResponse defines the RPC response of a
      DenomOwnersByQuery RPC query.


      Since: cosmos-sdk 0.50.3
    properties:
      denom_owners:
        items: *ref_13
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties: *ref_8
        type: object
    type: object
  cosmos.bank.v1beta1.QueryDenomOwnersResponse: &ref_225
    description: >-
      QueryDenomOwnersResponse defines the RPC response of a DenomOwners RPC
      query.


      Since: cosmos-sdk 0.46
    properties:
      denom_owners:
        items: *ref_13
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties: *ref_8
        type: object
    type: object
  cosmos.bank.v1beta1.QueryDenomsMetadataResponse: &ref_227
    description: >-
      QueryDenomsMetadataResponse is the response type for the
      Query/DenomsMetadata RPC

      method.
    properties:
      metadatas:
        description: >-
          metadata provides the client information for all the registered
          tokens.
        items: *ref_14
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties: *ref_8
        type: object
    type: object
  cosmos.bank.v1beta1.QueryParamsResponse: &ref_230
    description: >-
      QueryParamsResponse defines the response type for querying x/bank
      parameters.
    properties:
      params:
        description: params provides the parameters of the bank module.
        properties: *ref_15
        type: object
    type: object
  cosmos.bank.v1beta1.QuerySendEnabledResponse: &ref_231
    description: |-
      QuerySendEnabledResponse defines the RPC response of a SendEnable query.

      Since: cosmos-sdk 0.47
    properties:
      pagination:
        description: |-
          pagination defines the pagination in the response. This field is only
          populated if the denoms field in the request is empty.
        properties: *ref_8
        type: object
      send_enabled:
        items: *ref_16
        type: array
    type: object
  cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse: &ref_233
    description: >-
      QuerySpendableBalanceByDenomResponse defines the gRPC response structure
      for

      querying an account's spendable balance for a specific denom.


      Since: cosmos-sdk 0.47
    properties:
      balance:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties: *ref_11
        type: object
    type: object
  cosmos.bank.v1beta1.QuerySpendableBalancesResponse: &ref_232
    description: >-
      QuerySpendableBalancesResponse defines the gRPC response structure for
      querying

      an account's spendable balances.


      Since: cosmos-sdk 0.46
    properties:
      balances:
        description: balances is the spendable balances of all the coins.
        items: *ref_17
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties: *ref_8
        type: object
    type: object
  cosmos.bank.v1beta1.QuerySupplyOfResponse: &ref_235
    description: >-
      QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC
      method.
    properties:
      amount:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties: *ref_11
        type: object
    type: object
  cosmos.bank.v1beta1.QueryTotalSupplyResponse: &ref_234
    properties:
      pagination:
        description: |-
          pagination defines the pagination in the response.

          Since: cosmos-sdk 0.43
        properties: *ref_8
        type: object
      supply:
        items: *ref_17
        title: supply is the supply of the coins
        type: array
    title: >-
      QueryTotalSupplyResponse is the response type for the Query/TotalSupply
      RPC

      method
    type: object
  cosmos.bank.v1beta1.SendEnabled: *ref_16
  cosmos.base.abci.v1beta1.ABCIMessageLog: &ref_21
    description: >-
      ABCIMessageLog defines a structure containing an indexed tx ABCI message
      log.
    properties:
      events:
        description: |-
          Events contains a slice of Event objects that were emitted during some
          execution.
        items: &ref_19
          description: |-
            StringEvent defines en Event object wrapper where all the attributes
            contain key/value pairs that are strings instead of raw bytes.
          properties:
            attributes:
              items: &ref_18
                description: >-
                  Attribute defines an attribute wrapper where the key and value
                  are

                  strings instead of raw bytes.
                properties:
                  key:
                    type: string
                  value:
                    type: string
                type: object
              type: array
            type:
              type: string
          type: object
        type: array
      log:
        type: string
      msg_index:
        format: int64
        type: integer
    type: object
  cosmos.base.abci.v1beta1.Attribute: *ref_18
  cosmos.base.abci.v1beta1.GasInfo:
    description: GasInfo defines tx execution gas context.
    properties: &ref_121
      gas_used:
        description: GasUsed is the amount of gas actually consumed.
        format: uint64
        type: string
      gas_wanted:
        description: GasWanted is the maximum units of work we allow this tx to perform.
        format: uint64
        type: string
    type: object
  cosmos.base.abci.v1beta1.Result:
    description: Result is the union of ResponseFormat and ResponseCheckTx.
    properties: &ref_122
      data:
        description: >-
          Data is any data returned from message or handler execution. It MUST
          be

          length prefixed in order to separate data from multiple message
          executions.

          Deprecated. This field is still populated, but prefer msg_response
          instead

          because it also contains the Msg response typeURL.
        format: byte
        type: string
      events:
        description: >-
          Events contains a slice of Event objects that were emitted during
          message

          or handler execution.
        items: &ref_20
          description: >-
            Event allows application developers to attach additional information
            to

            ResponseFinalizeBlock and ResponseCheckTx.

            Later, transactions may be queried using these events.
          properties:
            attributes:
              items: &ref_181
                description: >-
                  EventAttribute is a single key-value pair, associated with an
                  event.
                properties:
                  index:
                    type: boolean
                  key:
                    type: string
                  value:
                    type: string
                type: object
              type: array
            type:
              type: string
          type: object
        type: array
      log:
        description: Log contains the log information from message or handler execution.
        type: string
      msg_responses:
        description: |-
          msg_responses contains the Msg handler responses type packed in Anys.

          Since: cosmos-sdk 0.46
        items: *ref_5
        type: array
    type: object
  cosmos.base.abci.v1beta1.StringEvent: *ref_19
  cosmos.base.abci.v1beta1.TxResponse: &ref_115
    description: >-
      TxResponse defines a structure containing relevant tx data and metadata.
      The

      tags are stringified and the log is JSON decoded.
    properties: &ref_111
      code:
        description: Response code.
        format: int64
        type: integer
      codespace:
        title: Namespace for the Code
        type: string
      data:
        description: Result bytes, if any.
        type: string
      events:
        description: >-
          Events defines all the events emitted by processing a transaction.
          Note,

          these events include those emitted by processing all the messages and
          those

          emitted from the ante. Whereas Logs contains the events, with

          additional metadata, emitted only by processing the messages.


          Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
        items: *ref_20
        type: array
      gas_used:
        description: Amount of gas consumed by transaction.
        format: int64
        type: string
      gas_wanted:
        description: Amount of gas requested for transaction.
        format: int64
        type: string
      height:
        format: int64
        title: The block height
        type: string
      info:
        description: Additional information. May be non-deterministic.
        type: string
      logs:
        description: >-
          The output of the application's logger (typed). May be
          non-deterministic.
        items: *ref_21
        type: array
      raw_log:
        description: |-
          The output of the application's logger (raw string). May be
          non-deterministic.
        type: string
      timestamp:
        description: >-
          Time of the previous block. For heights > 1, it's the weighted median
          of

          the timestamps of the valid votes in the block.LastCommit. For height
          == 1,

          it's genesis time.
        type: string
      tx:
        properties: *ref_3
        type: object
        description: The request transaction bytes.
      txhash:
        description: The transaction hash.
        type: string
    type: object
  cosmos.base.node.v1beta1.ConfigResponse: &ref_236
    description: ConfigResponse defines the response structure for the Config gRPC query.
    properties:
      halt_height:
        format: uint64
        type: string
      minimum_gas_price:
        type: string
      pruning_interval:
        type: string
      pruning_keep_recent:
        type: string
    type: object
  cosmos.base.node.v1beta1.StatusResponse: &ref_237
    description: StateResponse defines the response structure for the status of a node.
    properties:
      app_hash:
        format: byte
        type: string
      earliest_store_height:
        format: uint64
        type: string
      height:
        format: uint64
        type: string
      timestamp:
        format: date-time
        type: string
      validator_hash:
        format: byte
        type: string
    type: object
  cosmos.base.query.v1beta1.PageRequest:
    description: |-
      message SomeRequest {
               Foo some_parameter = 1;
               PageRequest pagination = 2;
       }
    properties:
      count_total:
        description: >-
          count_total is set to true  to indicate that the result set should
          include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when
          key

          is set.
        type: boolean
      key:
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        format: byte
        type: string
      limit:
        description: >-
          limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.
        format: uint64
        type: string
      offset:
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        format: uint64
        type: string
      reverse:
        description: >-
          reverse is set to true if results are to be returned in the descending
          order.


          Since: cosmos-sdk 0.43
        type: boolean
    title: |-
      PageRequest is to be embedded in gRPC request messages for efficient
      pagination. Ex:
    type: object
  cosmos.base.query.v1beta1.PageResponse: &ref_86
    description: |-
      PageResponse is to be embedded in gRPC response messages where the
      corresponding request message has used PageRequest.

       message SomeResponse {
               repeated Bar results = 1;
               PageResponse page = 2;
       }
    properties: *ref_8
    type: object
  cosmos.base.tendermint.v1beta1.ABCIQueryResponse: &ref_238
    description: >-
      ABCIQueryResponse defines the response structure for the ABCIQuery gRPC
      query.


      Note: This type is a duplicate of the ResponseQuery proto type defined in

      Tendermint.
    properties:
      code:
        format: int64
        type: integer
      codespace:
        type: string
      height:
        format: int64
        type: string
      index:
        format: int64
        type: string
      info:
        type: string
      key:
        format: byte
        type: string
      log:
        type: string
      proof_ops: &ref_37
        description: >-
          ProofOps is Merkle proof defined by the list of ProofOps.


          Note: This type is a duplicate of the ProofOps proto type defined in
          Tendermint.
        properties:
          ops:
            items: &ref_36
              description: >-
                ProofOp defines an operation used for calculating Merkle root.
                The data could

                be arbitrary format, providing necessary data for example
                neighbouring node

                hash.


                Note: This type is a duplicate of the ProofOp proto type defined
                in Tendermint.
              properties:
                data:
                  format: byte
                  type: string
                key:
                  format: byte
                  type: string
                type:
                  type: string
              type: object
            type: array
        type: object
      value:
        format: byte
        type: string
    type: object
  cosmos.base.tendermint.v1beta1.Block:
    description: |-
      Block is tendermint type Block, with the Header proposer address
      field converted to bech32 string.
    properties: &ref_31
      data: &ref_28
        properties:
          txs:
            description: >-
              Txs that will be applied by state @ block.Height+1.

              NOTE: not all txs here are valid.  We're just agreeing on the
              order first.

              This means that block.AppHash does not include these txs.
            items:
              format: byte
              type: string
            type: array
        title: Data contains the set of transactions included in the block
        type: object
      evidence: &ref_29
        properties:
          evidence:
            items: &ref_193
              properties:
                duplicate_vote_evidence: &ref_192
                  description: >-
                    DuplicateVoteEvidence contains evidence of a validator
                    signed two conflicting votes.
                  properties:
                    timestamp:
                      format: date-time
                      type: string
                    total_voting_power:
                      format: int64
                      type: string
                    validator_power:
                      format: int64
                      type: string
                    vote_a: &ref_22
                      description: >-
                        Vote represents a prevote or precommit vote from
                        validators for

                        consensus.
                      properties:
                        block_id: &ref_23
                          properties: &ref_24
                            hash:
                              format: byte
                              type: string
                            part_set_header: &ref_197
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                total:
                                  format: int64
                                  type: integer
                              title: PartsetHeader
                              type: object
                          title: BlockID
                          type: object
                        extension:
                          description: >-
                            Vote extension provided by the application. Only
                            valid for precommit

                            messages.
                          format: byte
                          type: string
                        extension_signature:
                          description: >-
                            Vote extension signature by the validator if they
                            participated in

                            consensus for the associated block.

                            Only valid for precommit messages.
                          format: byte
                          type: string
                        height:
                          format: int64
                          type: string
                        round:
                          format: int32
                          type: integer
                        signature:
                          description: >-
                            Vote signature by the validator if they participated
                            in consensus for the

                            associated block.
                          format: byte
                          type: string
                        timestamp:
                          format: date-time
                          type: string
                        type: &ref_199
                          default: SIGNED_MSG_TYPE_UNKNOWN
                          description: >-
                            SignedMsgType is a type of signed message in the
                            consensus.

                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                          enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          type: string
                        validator_address:
                          format: byte
                          type: string
                        validator_index:
                          format: int32
                          type: integer
                      type: object
                    vote_b: *ref_22
                  type: object
                light_client_attack_evidence: &ref_196
                  description: >-
                    LightClientAttackEvidence contains evidence of a set of
                    validators attempting to mislead a light client.
                  properties:
                    byzantine_validators:
                      items: &ref_25
                        properties:
                          address:
                            format: byte
                            type: string
                          proposer_priority:
                            format: int64
                            type: string
                          pub_key: &ref_182
                            properties:
                              ed25519:
                                format: byte
                                type: string
                              secp256k1:
                                format: byte
                                type: string
                            title: >-
                              PublicKey defines the keys available for use with
                              Validators
                            type: object
                          voting_power:
                            format: int64
                            type: string
                        type: object
                      type: array
                    common_height:
                      format: int64
                      type: string
                    conflicting_block: &ref_195
                      properties:
                        signed_header: &ref_198
                          properties:
                            commit: &ref_27
                              description: >-
                                Commit contains the evidence that a block was
                                committed by a set of validators.
                              properties:
                                block_id: *ref_23
                                height:
                                  format: int64
                                  type: string
                                round:
                                  format: int32
                                  type: integer
                                signatures:
                                  items: &ref_190
                                    description: >-
                                      CommitSig is a part of the Vote included
                                      in a Commit.
                                    properties:
                                      block_id_flag: &ref_188
                                        default: BLOCK_ID_FLAG_UNKNOWN
                                        enum:
                                          - BLOCK_ID_FLAG_UNKNOWN
                                          - BLOCK_ID_FLAG_ABSENT
                                          - BLOCK_ID_FLAG_COMMIT
                                          - BLOCK_ID_FLAG_NIL
                                        title: >-
                                          BlockIdFlag indicates which BlockID the
                                          signature is for
                                        type: string
                                      signature:
                                        format: byte
                                        type: string
                                      timestamp:
                                        format: date-time
                                        type: string
                                      validator_address:
                                        format: byte
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            header: &ref_30
                              description: Header defines the structure of a block header.
                              properties:
                                app_hash:
                                  format: byte
                                  type: string
                                chain_id:
                                  type: string
                                consensus_hash:
                                  format: byte
                                  type: string
                                data_hash:
                                  format: byte
                                  type: string
                                evidence_hash:
                                  format: byte
                                  title: consensus info
                                  type: string
                                height:
                                  format: int64
                                  type: string
                                last_block_id:
                                  properties: *ref_24
                                  title: BlockID
                                  type: object
                                last_commit_hash:
                                  format: byte
                                  title: hashes of block data
                                  type: string
                                last_results_hash:
                                  format: byte
                                  type: string
                                next_validators_hash:
                                  format: byte
                                  type: string
                                proposer_address:
                                  format: byte
                                  type: string
                                time:
                                  format: date-time
                                  type: string
                                validators_hash:
                                  format: byte
                                  title: >-
                                    hashes from the app output from the prev
                                    block
                                  type: string
                                version:
                                  title: basic block info
                                  description: >-
                                    Consensus captures the consensus rules for
                                    processing a block in the blockchain,

                                    including all blockchain data structures and
                                    the rules of the application's

                                    state transition machine.
                                  properties: &ref_26
                                    app:
                                      format: uint64
                                      type: string
                                    block:
                                      format: uint64
                                      type: string
                                  type: object
                              type: object
                          type: object
                        validator_set: &ref_201
                          properties:
                            proposer: *ref_25
                            total_voting_power:
                              format: int64
                              type: string
                            validators:
                              items: *ref_25
                              type: array
                          type: object
                      type: object
                    timestamp:
                      format: date-time
                      type: string
                    total_voting_power:
                      format: int64
                      type: string
                  type: object
              type: object
            type: array
        type: object
      header: &ref_34
        description: Header defines the structure of a Tendermint block header.
        properties:
          app_hash:
            format: byte
            type: string
          chain_id:
            type: string
          consensus_hash:
            format: byte
            type: string
          data_hash:
            format: byte
            type: string
          evidence_hash:
            format: byte
            title: consensus info
            type: string
          height:
            format: int64
            type: string
          last_block_id:
            properties: *ref_24
            title: BlockID
            type: object
          last_commit_hash:
            format: byte
            title: hashes of block data
            type: string
          last_results_hash:
            format: byte
            type: string
          next_validators_hash:
            format: byte
            type: string
          proposer_address:
            description: >-
              proposer_address is the original block proposer address, formatted
              as a Bech32 string.

              In Tendermint, this type is `bytes`, but in the SDK, we convert it
              to a Bech32 string

              for better UX.
            type: string
          time:
            format: date-time
            type: string
          validators_hash:
            format: byte
            title: hashes from the app output from the prev block
            type: string
          version:
            title: basic block info
            description: >-
              Consensus captures the consensus rules for processing a block in
              the blockchain,

              including all blockchain data structures and the rules of the
              application's

              state transition machine.
            properties: *ref_26
            type: object
        type: object
      last_commit: *ref_27
    type: object
  cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse: &ref_240
    description: >-
      GetBlockByHeightResponse is the response type for the
      Query/GetBlockByHeight RPC method.
    properties:
      block:
        title: 'Deprecated: please use `sdk_block` instead'
        properties: &ref_32
          data: *ref_28
          evidence: *ref_29
          header: *ref_30
          last_commit: *ref_27
        type: object
      block_id: *ref_23
      sdk_block:
        title: 'Since: cosmos-sdk 0.47'
        description: |-
          Block is tendermint type Block, with the Header proposer address
          field converted to bech32 string.
        properties: *ref_31
        type: object
    type: object
  cosmos.base.tendermint.v1beta1.GetLatestBlockResponse: &ref_239
    description: >-
      GetLatestBlockResponse is the response type for the Query/GetLatestBlock
      RPC method.
    properties:
      block:
        title: 'Deprecated: please use `sdk_block` instead'
        properties: *ref_32
        type: object
      block_id: *ref_23
      sdk_block:
        title: 'Since: cosmos-sdk 0.47'
        description: |-
          Block is tendermint type Block, with the Header proposer address
          field converted to bech32 string.
        properties: *ref_31
        type: object
    type: object
  cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse: &ref_243
    description: >-
      GetLatestValidatorSetResponse is the response type for the
      Query/GetValidatorSetByHeight RPC method.
    properties:
      block_height:
        format: int64
        type: string
      pagination:
        description: pagination defines an pagination for the response.
        properties: *ref_8
        type: object
      validators:
        items: &ref_33
          description: Validator is the type for the validator-set.
          properties:
            address:
              type: string
            proposer_priority:
              format: int64
              type: string
            pub_key: *ref_5
            voting_power:
              format: int64
              type: string
          type: object
        type: array
    type: object
  cosmos.base.tendermint.v1beta1.GetNodeInfoResponse: &ref_241
    description: >-
      GetNodeInfoResponse is the response type for the Query/GetNodeInfo RPC
      method.
    properties:
      application_version: &ref_38
        description: VersionInfo is the type for the GetNodeInfoResponse message.
        properties:
          app_name:
            type: string
          build_deps:
            items: &ref_35
              properties:
                path:
                  title: module path
                  type: string
                sum:
                  title: checksum
                  type: string
                version:
                  title: module version
                  type: string
              title: Module is the type for VersionInfo
              type: object
            type: array
          build_tags:
            type: string
          cosmos_sdk_version:
            title: 'Since: cosmos-sdk 0.43'
            type: string
          git_commit:
            type: string
          go_version:
            type: string
          name:
            type: string
          version:
            type: string
        type: object
      default_node_info: &ref_183
        properties:
          channels:
            format: byte
            type: string
          default_node_id:
            type: string
          listen_addr:
            type: string
          moniker:
            type: string
          network:
            type: string
          other: &ref_184
            properties:
              rpc_address:
                type: string
              tx_index:
                type: string
            type: object
          protocol_version: &ref_185
            properties:
              app:
                format: uint64
                type: string
              block:
                format: uint64
                type: string
              p2p:
                format: uint64
                type: string
            type: object
          version:
            type: string
        type: object
    type: object
  cosmos.base.tendermint.v1beta1.GetSyncingResponse: &ref_242
    description: >-
      GetSyncingResponse is the response type for the Query/GetSyncing RPC
      method.
    properties:
      syncing:
        type: boolean
    type: object
  cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse: &ref_244
    description: >-
      GetValidatorSetByHeightResponse is the response type for the
      Query/GetValidatorSetByHeight RPC method.
    properties:
      block_height:
        format: int64
        type: string
      pagination:
        description: pagination defines an pagination for the response.
        properties: *ref_8
        type: object
      validators:
        items: *ref_33
        type: array
    type: object
  cosmos.base.tendermint.v1beta1.Header: *ref_34
  cosmos.base.tendermint.v1beta1.Module: *ref_35
  cosmos.base.tendermint.v1beta1.ProofOp: *ref_36
  cosmos.base.tendermint.v1beta1.ProofOps: *ref_37
  cosmos.base.tendermint.v1beta1.Validator: *ref_33
  cosmos.base.tendermint.v1beta1.VersionInfo: *ref_38
  cosmos.base.v1beta1.Coin: *ref_17
  cosmos.base.v1beta1.DecCoin: &ref_39
    description: |-
      DecCoin defines a token with a denomination and a decimal amount.

      NOTE: The amount field is an Dec which implements the custom method
      signatures required by gogoproto.
    properties:
      amount:
        type: string
      denom:
        type: string
    type: object
  cosmos.consensus.v1.QueryParamsResponse: &ref_245
    description: >-
      QueryParamsResponse defines the response type for querying x/consensus
      parameters.
    properties:
      params:
        description: >-
          params are the tendermint consensus params stored in the consensus
          module.

          Please note that `params.version` is not populated in this response,
          it is

          tracked separately in the x/upgrade module.
        properties: &ref_191
          abci: &ref_186
            description: >-
              ABCIParams configure functionality specific to the Application
              Blockchain Interface.
            properties:
              vote_extensions_enable_height:
                description: >-
                  vote_extensions_enable_height configures the first height
                  during which

                  vote extensions will be enabled. During this specified height,
                  and for all

                  subsequent heights, precommit messages that do not contain
                  valid extension data

                  will be considered invalid. Prior to this height, vote
                  extensions will not

                  be used or accepted by validators on the network.


                  Once enabled, vote extensions will be created by the
                  application in ExtendVote,

                  passed to the application for validation in
                  VerifyVoteExtension and given

                  to the application to use when proposing a block during
                  PrepareProposal.
                format: int64
                type: string
            type: object
          block: &ref_189
            description: BlockParams contains limits on the block size.
            properties:
              max_bytes:
                format: int64
                title: |-
                  Max block size, in bytes.
                  Note: must be greater than 0
                type: string
              max_gas:
                format: int64
                title: |-
                  Max gas per block.
                  Note: must be greater or equal to -1
                type: string
            type: object
          evidence: &ref_194
            description: EvidenceParams determine how we handle evidence of malfeasance.
            properties:
              max_age_duration:
                description: >-
                  Max age of evidence, in time.


                  It should correspond with an app's "unbonding period" or other
                  similar

                  mechanism for handling [Nothing-At-Stake

                  attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
                type: string
              max_age_num_blocks:
                description: >-
                  Max age of evidence, in blocks.


                  The basic formula for calculating this is: MaxAgeDuration /
                  {average block

                  time}.
                format: int64
                type: string
              max_bytes:
                format: int64
                title: >-
                  This sets the maximum size of total evidence in bytes that can
                  be committed in a single block.

                  and should fall comfortably under the max block bytes.

                  Default is 1048576 or 1MB
                type: string
            type: object
          validator: &ref_200
            description: |-
              ValidatorParams restrict the public key types validators can use.
              NOTE: uses ABCI pubkey naming, not Amino names.
            properties:
              pub_key_types:
                items:
                  type: string
                type: array
            type: object
          version: &ref_202
            description: VersionParams contains the ABCI application version.
            properties:
              app:
                format: uint64
                type: string
            type: object
        type: object
    type: object
  cosmos.crypto.multisig.v1beta1.CompactBitArray:
    description: |-
      CompactBitArray is an implementation of a space efficient bit array.
      This is used to ensure that the encoded data takes up a minimal amount of
      space after proto encoding.
      This is not thread safe, and is not intended for concurrent usage.
    properties: &ref_107
      elems:
        format: byte
        type: string
      extra_bits_stored:
        format: int64
        type: integer
    type: object
  cosmos.distribution.v1beta1.DelegationDelegatorReward: &ref_40
    description: |-
      DelegationDelegatorReward represents the properties
      of a delegator's delegation reward.
    properties:
      reward:
        items: *ref_39
        type: array
      validator_address:
        type: string
    type: object
  cosmos.distribution.v1beta1.Params:
    description: Params defines the set of params for the distribution module.
    properties: &ref_41
      base_proposer_reward:
        description: >-
          Deprecated: The base_proposer_reward field is deprecated and is no
          longer used

          in the x/distribution module's reward mechanism.
        type: string
      bonus_proposer_reward:
        description: >-
          Deprecated: The bonus_proposer_reward field is deprecated and is no
          longer used

          in the x/distribution module's reward mechanism.
        type: string
      community_tax:
        type: string
      withdraw_addr_enabled:
        type: boolean
    type: object
  cosmos.distribution.v1beta1.QueryCommunityPoolResponse: &ref_246
    description: >-
      QueryCommunityPoolResponse is the response type for the
      Query/CommunityPool

      RPC method.
    properties:
      pool:
        description: pool defines community pool's coins.
        items: *ref_39
        type: array
    type: object
  cosmos.distribution.v1beta1.QueryDelegationRewardsResponse: &ref_248
    description: |-
      QueryDelegationRewardsResponse is the response type for the
      Query/DelegationRewards RPC method.
    properties:
      rewards:
        description: rewards defines the rewards accrued by a delegation.
        items: *ref_39
        type: array
    type: object
  cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse: &ref_247
    description: |-
      QueryDelegationTotalRewardsResponse is the response type for the
      Query/DelegationTotalRewards RPC method.
    properties:
      rewards:
        description: rewards defines all the rewards accrued by a delegator.
        items: *ref_40
        type: array
      total:
        description: total defines the sum of all the rewards.
        items: *ref_39
        type: array
    type: object
  cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse: &ref_249
    description: |-
      QueryDelegatorValidatorsResponse is the response type for the
      Query/DelegatorValidators RPC method.
    properties:
      validators:
        description: validators defines the validators a delegator is delegating for.
        items:
          type: string
        type: array
    type: object
  cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse: &ref_250
    description: |-
      QueryDelegatorWithdrawAddressResponse is the response type for the
      Query/DelegatorWithdrawAddress RPC method.
    properties:
      withdraw_address:
        description: withdraw_address defines the delegator address to query for.
        type: string
    type: object
  cosmos.distribution.v1beta1.QueryParamsResponse: &ref_251
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties: *ref_41
        type: object
    type: object
  cosmos.distribution.v1beta1.QueryValidatorCommissionResponse: &ref_253
    properties:
      commission:
        description: commission defines the commission the validator received.
        properties: &ref_42
          commission:
            items: *ref_39
            type: array
        type: object
    title: |-
      QueryValidatorCommissionResponse is the response type for the
      Query/ValidatorCommission RPC method
    type: object
  cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse: &ref_252
    description: >-
      QueryValidatorDistributionInfoResponse is the response type for the
      Query/ValidatorDistributionInfo RPC method.
    properties:
      commission:
        description: commission defines the commission the validator received.
        items: *ref_39
        type: array
      operator_address:
        description: operator_address defines the validator operator address.
        type: string
      self_bond_rewards:
        description: self_bond_rewards defines the self delegations rewards.
        items: *ref_39
        type: array
    type: object
  cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse: &ref_254
    description: |-
      QueryValidatorOutstandingRewardsResponse is the response type for the
      Query/ValidatorOutstandingRewards RPC method.
    properties:
      rewards: &ref_43
        description: >-
          ValidatorOutstandingRewards represents outstanding (un-withdrawn)
          rewards

          for a validator inexpensive to track, allows simple sanity checks.
        properties:
          rewards:
            items: *ref_39
            type: array
        type: object
    type: object
  cosmos.distribution.v1beta1.QueryValidatorSlashesResponse: &ref_255
    description: |-
      QueryValidatorSlashesResponse is the response type for the
      Query/ValidatorSlashes RPC method.
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        properties: *ref_8
        type: object
      slashes:
        description: slashes defines the slashes the validator received.
        items: &ref_44
          description: |-
            ValidatorSlashEvent represents a validator slash event.
            Height is implicit within the store key.
            This is needed to calculate appropriate amount of staking tokens
            for delegations which are withdrawn after a slash has occurred.
          properties:
            fraction:
              type: string
            validator_period:
              format: uint64
              type: string
          type: object
        type: array
    type: object
  cosmos.distribution.v1beta1.ValidatorAccumulatedCommission:
    description: |-
      ValidatorAccumulatedCommission represents accumulated commission
      for a validator kept as a running counter, can be withdrawn at any time.
    properties: *ref_42
    type: object
  cosmos.distribution.v1beta1.ValidatorOutstandingRewards: *ref_43
  cosmos.distribution.v1beta1.ValidatorSlashEvent: *ref_44
  cosmos.evidence.v1beta1.QueryAllEvidenceResponse: &ref_256
    description: >-
      QueryAllEvidenceResponse is the response type for the Query/AllEvidence
      RPC

      method.
    properties:
      evidence:
        description: evidence returns all evidences.
        items: *ref_5
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties: *ref_8
        type: object
    type: object
  cosmos.evidence.v1beta1.QueryEvidenceResponse: &ref_257
    description: >-
      QueryEvidenceResponse is the response type for the Query/Evidence RPC
      method.
    properties:
      evidence:
        properties: *ref_3
        type: object
        description: evidence returns the requested evidence.
    type: object
  cosmos.evm.erc20.v1.Owner:
    default: OWNER_UNSPECIFIED
    description: |-
      Owner enumerates the ownership of a ERC20 contract.

       - OWNER_UNSPECIFIED: OWNER_UNSPECIFIED defines an invalid/undefined owner.
       - OWNER_MODULE: OWNER_MODULE - erc20 is owned by the erc20 module account.
       - OWNER_EXTERNAL: OWNER_EXTERNAL - erc20 is owned by an external account.
    enum: &ref_46
      - OWNER_UNSPECIFIED
      - OWNER_MODULE
      - OWNER_EXTERNAL
    type: string
  cosmos.evm.erc20.v1.Params:
    properties: &ref_45
      dynamic_precompiles:
        items:
          type: string
        title: |-
          dynamic_precompiles defines the slice of hex addresses of the
          active precompiles that are used to interact with Bank coins as ERC20s
        type: array
      enable_erc20:
        description: >-
          enable_erc20 is the parameter to enable the conversion of Cosmos coins
          <-->

          ERC20 tokens.
        type: boolean
      native_precompiles:
        items:
          type: string
        title: >-
          native_precompiles defines the slice of hex addresses of the

          active precompiles that are used to interact with native staking coins
          as

          ERC20s
        type: array
    title: Params defines the erc20 module params
    type: object
  cosmos.evm.erc20.v1.QueryParamsResponse: &ref_258
    description: |-
      QueryParamsResponse is the response type for the Query/Params RPC
      method.
    properties:
      params:
        title: params are the erc20 module parameters
        properties: *ref_45
        type: object
    type: object
  cosmos.evm.erc20.v1.QueryTokenPairResponse: &ref_260
    description: |-
      QueryTokenPairResponse is the response type for the Query/TokenPair RPC
      method.
    properties:
      token_pair:
        title: >-
          token_pairs returns the info about a registered token pair for the
          erc20

          module
        description: >-
          TokenPair defines an instance that records a pairing consisting of a
          native

          Cosmos Coin and an ERC20 token address.
        properties: &ref_47
          contract_owner:
            title: >-
              contract_owner is the an ENUM specifying the type of ERC20 owner
              (0

              invalid, 1 ModuleAccount, 2 external address)
            default: OWNER_UNSPECIFIED
            description: |-
              Owner enumerates the ownership of a ERC20 contract.

               - OWNER_UNSPECIFIED: OWNER_UNSPECIFIED defines an invalid/undefined owner.
               - OWNER_MODULE: OWNER_MODULE - erc20 is owned by the erc20 module account.
               - OWNER_EXTERNAL: OWNER_EXTERNAL - erc20 is owned by an external account.
            enum: *ref_46
            type: string
          denom:
            title: denom defines the cosmos base denomination to be mapped to
            type: string
          enabled:
            title: enabled defines the token mapping enable status
            type: boolean
          erc20_address:
            title: erc20_address is the hex address of ERC20 contract token
            type: string
        type: object
    type: object
  cosmos.evm.erc20.v1.QueryTokenPairsResponse: &ref_259
    description: |-
      QueryTokenPairsResponse is the response type for the Query/TokenPairs RPC
      method.
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        properties: *ref_8
        type: object
      token_pairs:
        items: &ref_48
          description: >-
            TokenPair defines an instance that records a pairing consisting of a
            native

            Cosmos Coin and an ERC20 token address.
          properties: *ref_47
          type: object
        title: token_pairs is a slice of registered token pairs for the erc20 module
        type: array
    type: object
  cosmos.evm.erc20.v1.TokenPair: *ref_48
  cosmos.evm.feemarket.v1.Params:
    properties: &ref_49
      base_fee:
        description: base_fee for EIP-1559 blocks.
        type: string
      base_fee_change_denominator:
        description: |-
          base_fee_change_denominator bounds the amount the base fee can change
          between blocks.
        format: int64
        type: integer
      elasticity_multiplier:
        description: >-
          elasticity_multiplier bounds the maximum gas limit an EIP-1559 block
          may

          have.
        format: int64
        type: integer
      enable_height:
        description: >-
          enable_height defines at which block height the base fee calculation
          is

          enabled.
        format: int64
        type: string
      min_gas_multiplier:
        title: |-
          min_gas_multiplier bounds the minimum gas used to be charged
          to senders based on gas limit
        type: string
      min_gas_price:
        title: |-
          min_gas_price defines the minimum gas price value for cosmos and eth
          transactions
        type: string
      no_base_fee:
        title: >-
          no_base_fee forces the EIP-1559 base fee to 0 (needed for 0 price
          calls)
        type: boolean
    title: Params defines the EVM module parameters
    type: object
  cosmos.evm.feemarket.v1.QueryBaseFeeResponse: &ref_261
    description: QueryBaseFeeResponse returns the EIP1559 base fee.
    properties:
      base_fee:
        title: base_fee is the EIP1559 base fee
        type: string
    type: object
  cosmos.evm.feemarket.v1.QueryBlockGasResponse: &ref_262
    description: QueryBlockGasResponse returns block gas used for a given height.
    properties:
      gas:
        format: int64
        title: gas is the returned block gas
        type: string
    type: object
  cosmos.evm.feemarket.v1.QueryParamsResponse: &ref_263
    description: >-
      QueryParamsResponse defines the response type for querying x/vm
      parameters.
    properties:
      params:
        description: params define the evm module parameters.
        properties: *ref_49
        title: Params defines the EVM module parameters
        type: object
    type: object
  cosmos.evm.vm.v1.AccessControl:
    properties: &ref_53
      call:
        title: call defines the permission policy for calling contracts
        properties: &ref_50
          access_control_list:
            items:
              type: string
            title: >-
              access_control_list defines defines different things depending on
              the

              AccessType:

              - ACCESS_TYPE_PERMISSIONLESS: list of addresses that are blocked
              from

              performing the operation

              - ACCESS_TYPE_RESTRICTED: ignored

              - ACCESS_TYPE_PERMISSIONED: list of addresses that are allowed to
              perform

              the operation
            type: array
          access_type:
            title: >-
              access_type defines which type of permission is required for the
              operation
            default: ACCESS_TYPE_PERMISSIONLESS
            description: >-
              - ACCESS_TYPE_PERMISSIONLESS: ACCESS_TYPE_PERMISSIONLESS does not
              restrict the operation to anyone
               - ACCESS_TYPE_RESTRICTED: ACCESS_TYPE_RESTRICTED restrict the operation to anyone
               - ACCESS_TYPE_PERMISSIONED: ACCESS_TYPE_PERMISSIONED only allows the operation for specific addresses
            enum: &ref_51
              - ACCESS_TYPE_PERMISSIONLESS
              - ACCESS_TYPE_RESTRICTED
              - ACCESS_TYPE_PERMISSIONED
            type: string
        type: object
      create:
        title: create defines the permission policy for creating contracts
        properties: *ref_50
        type: object
    title: |-
      AccessControl defines the permission policy of the EVM
      for creating and calling contracts
    type: object
  cosmos.evm.vm.v1.AccessControlType:
    properties: *ref_50
    title: AccessControlType defines the permission type for policies
    type: object
  cosmos.evm.vm.v1.AccessType:
    default: ACCESS_TYPE_PERMISSIONLESS
    description: >-
      - ACCESS_TYPE_PERMISSIONLESS: ACCESS_TYPE_PERMISSIONLESS does not restrict
      the operation to anyone
       - ACCESS_TYPE_RESTRICTED: ACCESS_TYPE_RESTRICTED restrict the operation to anyone
       - ACCESS_TYPE_PERMISSIONED: ACCESS_TYPE_PERMISSIONED only allows the operation for specific addresses
    enum: *ref_51
    title: AccessType defines the types of permissions for the operations
    type: string
  cosmos.evm.vm.v1.ChainConfig:
    description: >-
      ChainConfig defines the Ethereum ChainConfig parameters using *sdk.Int
      values

      instead of *big.Int.
    properties: &ref_54
      arrow_glacier_block:
        title: >-
          arrow_glacier_block: Eip-4345 (bomb delay) switch block (nil = no
          fork, 0 =

          already activated)
        type: string
      berlin_block:
        title: >-
          berlin_block: Berlin switch block (nil = no fork, 0 = already on
          berlin)
        type: string
      byzantium_block:
        title: |-
          byzantium_block: Byzantium switch block (nil no fork, 0 = already on
          byzantium)
        type: string
      cancun_block:
        title: cancun_block switch block (nil = no fork, 0 = already on cancun)
        type: string
      chain_id:
        format: uint64
        title: chain_id is the id of the chain (EIP-155)
        type: string
      constantinople_block:
        title: >-
          constantinople_block: Constantinople switch block (nil no fork, 0 =
          already

          activated)
        type: string
      dao_fork_block:
        title: >-
          dao_fork_block corresponds to TheDAO hard-fork switch block (nil no
          fork)
        type: string
      dao_fork_support:
        title: |-
          dao_fork_support defines whether the nodes supports or opposes the DAO
          hard-fork
        type: boolean
      decimals:
        format: uint64
        title: >-
          decimals is the real decimal precision of the denomination used on the
          EVM
        type: string
      denom:
        title: denom is the denomination used on the EVM
        type: string
      eip150_block:
        title: >-
          eip150_block: EIP150 implements the Gas price changes

          (https://github.com/ethereum/EIPs/issues/150) EIP150 HF block (nil no
          fork)
        type: string
      eip150_hash:
        title: >-
          eip150_hash: EIP150 HF hash (needed for header only clients as only
          gas

          pricing changed)
        type: string
      eip155_block:
        title: 'eip155_block: EIP155Block HF block'
        type: string
      eip158_block:
        title: 'eip158_block: EIP158 HF block'
        type: string
      gray_glacier_block:
        title: >-
          gray_glacier_block: EIP-5133 (bomb delay) switch block (nil = no fork,
          0 =

          already activated)
        type: string
      homestead_block:
        title: homestead_block switch (nil no fork, 0 = already homestead)
        type: string
      istanbul_block:
        title: |-
          istanbul_block: Istanbul switch block (nil no fork, 0 = already on
          istanbul)
        type: string
      london_block:
        title: >-
          london_block: London switch block (nil = no fork, 0 = already on
          london)
        type: string
      merge_netsplit_block:
        title: |-
          merge_netsplit_block: Virtual fork after The Merge to use as a network
          splitter
        type: string
      muir_glacier_block:
        title: >-
          muir_glacier_block: Eip-2384 (bomb delay) switch block (nil no fork, 0
          =

          already activated)
        type: string
      petersburg_block:
        title: 'petersburg_block: Petersburg switch block (nil same as Constantinople)'
        type: string
      shanghai_block:
        title: shanghai_block switch block (nil = no fork, 0 = already on shanghai)
        type: string
    type: object
  cosmos.evm.vm.v1.EstimateGasResponse: &ref_270
    properties:
      gas:
        format: uint64
        title: gas returns the estimated gas
        type: string
      ret:
        format: byte
        title: >-
          ret is the returned data from evm function (result or data supplied
          with

          revert opcode)
        type: string
      vm_error:
        title: vm_error is the error returned by vm execution
        type: string
    title: EstimateGasResponse defines EstimateGas response
    type: object
  cosmos.evm.vm.v1.Log: &ref_52
    description: >-
      Log represents an protobuf compatible Ethereum Log that defines a contract

      log event. These events are generated by the LOG opcode and stored/indexed
      by

      the node.


      NOTE: address, topics and data are consensus fields. The rest of the
      fields

      are derived, i.e. filled in by the nodes, but not secured by consensus.
    properties:
      address:
        title: address of the contract that generated the event
        type: string
      block_hash:
        title: block_hash of the block in which the transaction was included
        type: string
      block_number:
        format: uint64
        title: block_number of the block in which the transaction was included
        type: string
      data:
        format: byte
        title: data which is supplied by the contract, usually ABI-encoded
        type: string
      index:
        format: uint64
        title: index of the log in the block
        type: string
      removed:
        description: >-
          removed is true if this log was reverted due to a chain

          reorganisation. You must pay attention to this field if you receive
          logs

          through a filter query.
        type: boolean
      topics:
        description: topics is a list of topics provided by the contract.
        items:
          type: string
        type: array
      tx_hash:
        title: tx_hash is the transaction hash
        type: string
      tx_index:
        format: uint64
        title: tx_index of the transaction in the block
        type: string
    type: object
  cosmos.evm.vm.v1.MsgEthereumTx:
    description: MsgEthereumTx encapsulates an Ethereum transaction as an SDK message.
    properties:
      data:
        properties: *ref_3
        type: object
        title: data is inner transaction data of the Ethereum transaction
      from:
        title: >-
          from is the ethereum signer address in hex format. This address value
          is

          checked against the address derived from the signature (V, R, S) using
          the

          secp256k1 elliptic curve
        type: string
      hash:
        title: hash of the transaction in hex format
        type: string
      size:
        format: double
        title: size is the encoded storage size of the transaction (DEPRECATED)
        type: number
    type: object
  cosmos.evm.vm.v1.MsgEthereumTxResponse: &ref_271
    description: MsgEthereumTxResponse defines the Msg/EthereumTx response type.
    properties:
      gas_used:
        format: uint64
        title: gas_used specifies how much gas was consumed by the transaction
        type: string
      hash:
        title: >-
          hash of the ethereum transaction in hex format. This hash differs from
          the

          Tendermint sha256 hash of the transaction bytes. See

          https://github.com/tendermint/tendermint/issues/6539 for reference
        type: string
      logs:
        description: |-
          logs contains the transaction hash and the proto-compatible ethereum
          logs.
        items: *ref_52
        type: array
      ret:
        format: byte
        title: >-
          ret is the returned data from evm function (result or data supplied
          with

          revert opcode)
        type: string
      vm_error:
        title: vm_error is the error returned by vm execution
        type: string
    type: object
  cosmos.evm.vm.v1.Params:
    properties: &ref_55
      access_control:
        title: access_control defines the permission policy of the EVM
        properties: *ref_53
        type: object
      active_static_precompiles:
        items:
          type: string
        title: |-
          active_static_precompiles defines the slice of hex addresses of the
          precompiled contracts that are active
        type: array
      allow_unprotected_txs:
        description: |-
          allow_unprotected_txs defines if replay-protected (i.e non EIP155
          signed) transactions can be executed on the state machine.
        type: boolean
      chain_config:
        title: chain_config defines the EVM chain configuration parameters
        description: >-
          ChainConfig defines the Ethereum ChainConfig parameters using *sdk.Int
          values

          instead of *big.Int.
        properties: *ref_54
        type: object
      evm_channels:
        items:
          type: string
        title: >-
          evm_channels is the list of channel identifiers from EVM compatible
          chains
        type: array
      evm_denom:
        description: |-
          evm_denom represents the token denomination used to run the EVM state
          transitions.
        type: string
      extra_eips:
        items:
          type: string
        title: extra_eips defines the additional EIPs for the vm.Config
        type: array
    title: Params defines the EVM module parameters
    type: object
  cosmos.evm.vm.v1.QueryAccountResponse: &ref_264
    description: >-
      QueryAccountResponse is the response type for the Query/Account RPC
      method.
    properties:
      balance:
        description: balance is the balance of the EVM denomination.
        type: string
      code_hash:
        description: code_hash is the hex-formatted code bytes from the EOA.
        type: string
      nonce:
        description: nonce is the account's sequence number.
        format: uint64
        type: string
    type: object
  cosmos.evm.vm.v1.QueryBalanceResponse: &ref_265
    description: >-
      QueryBalanceResponse is the response type for the Query/Balance RPC
      method.
    properties:
      balance:
        description: balance is the balance of the EVM denomination.
        type: string
    type: object
  cosmos.evm.vm.v1.QueryBaseFeeResponse: &ref_266
    description: QueryBaseFeeResponse returns the EIP1559 base fee.
    properties:
      base_fee:
        title: base_fee is the EIP1559 base fee
        type: string
    type: object
  cosmos.evm.vm.v1.QueryCodeResponse: &ref_267
    description: |-
      QueryCodeResponse is the response type for the Query/Code RPC
      method.
    properties:
      code:
        description: code represents the code bytes from an ethereum address.
        format: byte
        type: string
    type: object
  cosmos.evm.vm.v1.QueryConfigResponse: &ref_268
    description: QueryConfigResponse returns the EVM config.
    properties:
      config:
        title: config is the evm configuration
        description: >-
          ChainConfig defines the Ethereum ChainConfig parameters using *sdk.Int
          values

          instead of *big.Int.
        properties: *ref_54
        type: object
    type: object
  cosmos.evm.vm.v1.QueryCosmosAccountResponse: &ref_269
    description: >-
      QueryCosmosAccountResponse is the response type for the
      Query/CosmosAccount

      RPC method.
    properties:
      account_number:
        format: uint64
        title: account_number is the account number
        type: string
      cosmos_address:
        description: cosmos_address is the cosmos address of the account.
        type: string
      sequence:
        description: sequence is the account's sequence number.
        format: uint64
        type: string
    type: object
  cosmos.evm.vm.v1.QueryGlobalMinGasPriceResponse: &ref_272
    properties:
      min_gas_price:
        title: min_gas_price is the feemarket's min_gas_price
        type: string
    title: QueryGlobalMinGasPriceResponse returns the GlobalMinGasPrice
    type: object
  cosmos.evm.vm.v1.QueryParamsResponse: &ref_273
    description: >-
      QueryParamsResponse defines the response type for querying x/vm
      parameters.
    properties:
      params:
        description: params define the evm module parameters.
        properties: *ref_55
        title: Params defines the EVM module parameters
        type: object
    type: object
  cosmos.evm.vm.v1.QueryStorageResponse: &ref_274
    description: |-
      QueryStorageResponse is the response type for the Query/Storage RPC
      method.
    properties:
      value:
        description: >-
          value defines the storage state value hash associated with the given
          key.
        type: string
    type: object
  cosmos.evm.vm.v1.QueryTraceBlockResponse: &ref_275
    properties:
      data:
        format: byte
        title: data is the response serialized in bytes
        type: string
    title: QueryTraceBlockResponse defines TraceBlock response
    type: object
  cosmos.evm.vm.v1.QueryTraceTxResponse: &ref_276
    properties:
      data:
        format: byte
        title: data is the response serialized in bytes
        type: string
    title: QueryTraceTxResponse defines TraceTx response
    type: object
  cosmos.evm.vm.v1.QueryValidatorAccountResponse: &ref_277
    description: |-
      QueryValidatorAccountResponse is the response type for the
      Query/ValidatorAccount RPC method.
    properties:
      account_address:
        description: account_address is the cosmos address of the account in bech32 format.
        type: string
      account_number:
        format: uint64
        title: account_number is the account number
        type: string
      sequence:
        description: sequence is the account's sequence number.
        format: uint64
        type: string
    type: object
  cosmos.evm.vm.v1.TraceConfig:
    description: TraceConfig holds extra parameters to trace functions.
    properties:
      debug:
        title: debug can be used to print output during capture end
        type: boolean
      disable_stack:
        title: disable_stack switches stack capture
        type: boolean
      disable_storage:
        title: disable_storage switches storage capture
        type: boolean
      enable_memory:
        title: enable_memory switches memory capture
        type: boolean
      enable_return_data:
        title: enable_return_data switches the capture of return data
        type: boolean
      limit:
        format: int32
        title: limit defines the maximum length of output, but zero means unlimited
        type: integer
      overrides:
        title: overrides can be used to execute a trace using future fork rules
        description: >-
          ChainConfig defines the Ethereum ChainConfig parameters using *sdk.Int
          values

          instead of *big.Int.
        properties: *ref_54
        type: object
      reexec:
        format: uint64
        title: reexec defines the number of blocks the tracer is willing to go back
        type: string
      timeout:
        title: >-
          timeout overrides the default timeout of 5 seconds for
          JavaScript-based

          tracing calls
        type: string
      tracer:
        title: tracer is a custom javascript tracer
        type: string
      tracer_json_config:
        title: tracer_json_config configures the tracer using a JSON string
        type: string
    type: object
  cosmos.feegrant.v1beta1.Grant: &ref_57
    properties: &ref_56
      allowance:
        properties: *ref_3
        type: object
        description: allowance can be any of basic, periodic, allowed fee allowance.
      grantee:
        description: >-
          grantee is the address of the user being granted an allowance of
          another user's funds.
        type: string
      granter:
        description: >-
          granter is the address of the user granting an allowance of their
          funds.
        type: string
    title: Grant is stored in the KVStore to record a grant with full context
    type: object
  cosmos.feegrant.v1beta1.QueryAllowanceResponse: &ref_278
    description: >-
      QueryAllowanceResponse is the response type for the Query/Allowance RPC
      method.
    properties:
      allowance:
        description: allowance is a allowance granted for grantee by granter.
        properties: *ref_56
        title: Grant is stored in the KVStore to record a grant with full context
        type: object
    type: object
  cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse: &ref_280
    description: >-
      QueryAllowancesByGranterResponse is the response type for the
      Query/AllowancesByGranter RPC method.


      Since: cosmos-sdk 0.46
    properties:
      allowances:
        description: allowances that have been issued by the granter.
        items: *ref_57
        type: array
      pagination:
        description: pagination defines an pagination for the response.
        properties: *ref_8
        type: object
    type: object
  cosmos.feegrant.v1beta1.QueryAllowancesResponse: &ref_279
    description: >-
      QueryAllowancesResponse is the response type for the Query/Allowances RPC
      method.
    properties:
      allowances:
        description: allowances are allowance's granted for grantee by granter.
        items: *ref_57
        type: array
      pagination:
        description: pagination defines an pagination for the response.
        properties: *ref_8
        type: object
    type: object
  cosmos.gov.v1.Deposit: &ref_60
    description: |-
      Deposit defines an amount deposited by an account address to an active
      proposal.
    properties: &ref_59
      amount:
        description: amount to be deposited by depositor.
        items: *ref_17
        type: array
      depositor:
        description: depositor defines the deposit addresses from the proposals.
        type: string
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
    type: object
  cosmos.gov.v1.DepositParams:
    description: DepositParams defines the params for deposits on governance proposals.
    properties: &ref_61
      max_deposit_period:
        description: >-
          Maximum period for Atom holders to deposit on a proposal. Initial
          value: 2

          months.
        type: string
      min_deposit:
        description: Minimum deposit for a proposal to enter voting period.
        items: *ref_17
        type: array
    type: object
  cosmos.gov.v1.Params:
    description: |-
      Params defines the parameters for the x/gov module.

      Since: cosmos-sdk 0.47
    properties: &ref_62
      burn_proposal_deposit_prevote:
        title: burn deposits if the proposal does not enter voting period
        type: boolean
      burn_vote_quorum:
        title: burn deposits if a proposal does not meet quorum
        type: boolean
      burn_vote_veto:
        title: burn deposits if quorum with vote type no_veto is met
        type: boolean
      expedited_min_deposit:
        description: Minimum expedited deposit for a proposal to enter voting period.
        items: *ref_17
        type: array
      expedited_threshold:
        description: >-
          Minimum proportion of Yes votes for proposal to pass. Default value:
          0.67.


          Since: cosmos-sdk 0.50
        type: string
      expedited_voting_period:
        description: |-
          Duration of the voting period of an expedited proposal.

          Since: cosmos-sdk 0.50
        type: string
      max_deposit_period:
        description: >-
          Maximum period for Atom holders to deposit on a proposal. Initial
          value: 2

          months.
        type: string
      min_deposit:
        description: Minimum deposit for a proposal to enter voting period.
        items: *ref_17
        type: array
      min_deposit_ratio:
        description: >-
          The ratio representing the proportion of the deposit value minimum
          that must be met when making a deposit.

          Default value: 0.01. Meaning that for a chain with a min_deposit of
          100stake, a deposit of 1stake would be

          required.


          Since: cosmos-sdk 0.50
        type: string
      min_initial_deposit_ratio:
        description: >-
          The ratio representing the proportion of the deposit value that must
          be paid at proposal submission.
        type: string
      proposal_cancel_dest:
        description: >-
          The address which will receive (proposal_cancel_ratio * deposit)
          proposal deposits.

          If empty, the (proposal_cancel_ratio * deposit) proposal deposits will
          be burned.


          Since: cosmos-sdk 0.50
        type: string
      proposal_cancel_ratio:
        description: >-
          The cancel ratio which will not be returned back to the depositors
          when a proposal is cancelled.


          Since: cosmos-sdk 0.50
        type: string
      quorum:
        description: |-
          Minimum percentage of total stake needed to vote for a result to be
           considered valid.
        type: string
      threshold:
        description: >-
          Minimum proportion of Yes votes for proposal to pass. Default value:
          0.5.
        type: string
      veto_threshold:
        description: |-
          Minimum value of Veto votes to Total votes ratio for proposal to be
           vetoed. Default value: 1/3.
        type: string
      voting_period:
        description: Duration of the voting period.
        type: string
    type: object
  cosmos.gov.v1.Proposal: &ref_64
    description: Proposal defines the core field members of a governance proposal.
    properties: &ref_63
      deposit_end_time:
        description: deposit_end_time is the end time for deposition.
        format: date-time
        type: string
      expedited:
        description: 'Since: cosmos-sdk 0.50'
        title: expedited defines if the proposal is expedited
        type: boolean
      failed_reason:
        description: 'Since: cosmos-sdk 0.50'
        title: failed_reason defines the reason why the proposal failed
        type: string
      final_tally_result:
        description: |-
          final_tally_result is the final tally result of the proposal. When
          querying a proposal via gRPC, this field is not populated until the
          proposal's voting period has ended.
        properties: &ref_65
          abstain_count:
            description: abstain_count is the number of abstain votes on a proposal.
            type: string
          no_count:
            description: no_count is the number of no votes on a proposal.
            type: string
          no_with_veto_count:
            description: >-
              no_with_veto_count is the number of no with veto votes on a
              proposal.
            type: string
          yes_count:
            description: yes_count is the number of yes votes on a proposal.
            type: string
        type: object
      id:
        description: id defines the unique id of the proposal.
        format: uint64
        type: string
      messages:
        description: >-
          messages are the arbitrary messages to be executed if the proposal
          passes.
        items: *ref_5
        type: array
      metadata:
        title: |-
          metadata is any arbitrary metadata attached to the proposal.
          the recommended format of the metadata is to be found here:
          https://docs.cosmos.network/v0.47/modules/gov#proposal-3
        type: string
      proposer:
        description: 'Since: cosmos-sdk 0.47'
        title: proposer is the address of the proposal sumbitter
        type: string
      status:
        description: status defines the proposal status.
        default: PROPOSAL_STATUS_UNSPECIFIED
        enum: &ref_58
          - PROPOSAL_STATUS_UNSPECIFIED
          - PROPOSAL_STATUS_DEPOSIT_PERIOD
          - PROPOSAL_STATUS_VOTING_PERIOD
          - PROPOSAL_STATUS_PASSED
          - PROPOSAL_STATUS_REJECTED
          - PROPOSAL_STATUS_FAILED
        type: string
      submit_time:
        description: submit_time is the time of proposal submission.
        format: date-time
        type: string
      summary:
        description: 'Since: cosmos-sdk 0.47'
        title: summary is a short summary of the proposal
        type: string
      title:
        description: 'Since: cosmos-sdk 0.47'
        title: title is the title of the proposal
        type: string
      total_deposit:
        description: total_deposit is the total deposit on the proposal.
        items: *ref_17
        type: array
      voting_end_time:
        description: voting_end_time is the end time of voting on a proposal.
        format: date-time
        type: string
      voting_start_time:
        description: voting_start_time is the starting time to vote on a proposal.
        format: date-time
        type: string
    type: object
  cosmos.gov.v1.ProposalStatus:
    default: PROPOSAL_STATUS_UNSPECIFIED
    description: |-
      ProposalStatus enumerates the valid statuses of a proposal.

       - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
       - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
      period.
       - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
      period.
       - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
      passed.
       - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
      been rejected.
       - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
      failed.
    enum: *ref_58
    type: string
  cosmos.gov.v1.QueryConstitutionResponse: &ref_281
    properties:
      constitution:
        type: string
    title: >-
      QueryConstitutionResponse is the response type for the Query/Constitution
      RPC method
    type: object
  cosmos.gov.v1.QueryDepositResponse: &ref_286
    description: >-
      QueryDepositResponse is the response type for the Query/Deposit RPC
      method.
    properties:
      deposit:
        description: deposit defines the requested deposit.
        properties: *ref_59
        type: object
    type: object
  cosmos.gov.v1.QueryDepositsResponse: &ref_285
    description: >-
      QueryDepositsResponse is the response type for the Query/Deposits RPC
      method.
    properties:
      deposits:
        description: deposits defines the requested deposits.
        items: *ref_60
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties: *ref_8
        type: object
    type: object
  cosmos.gov.v1.QueryParamsResponse: &ref_282
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    properties:
      deposit_params:
        description: |-
          Deprecated: Prefer to use `params` instead.
          deposit_params defines the parameters related to deposit.
        properties: *ref_61
        type: object
      params:
        description: |-
          params defines all the paramaters of x/gov module.

          Since: cosmos-sdk 0.47
        properties: *ref_62
        type: object
      tally_params:
        description: |-
          Deprecated: Prefer to use `params` instead.
          tally_params defines the parameters related to tally.
        properties: &ref_67
          quorum:
            description: >-
              Minimum percentage of total stake needed to vote for a result to
              be

              considered valid.
            type: string
          threshold:
            description: >-
              Minimum proportion of Yes votes for proposal to pass. Default
              value: 0.5.
            type: string
          veto_threshold:
            description: >-
              Minimum value of Veto votes to Total votes ratio for proposal to
              be

              vetoed. Default value: 1/3.
            type: string
        type: object
      voting_params:
        description: |-
          Deprecated: Prefer to use `params` instead.
          voting_params defines the parameters related to voting.
        properties: &ref_70
          voting_period:
            description: Duration of the voting period.
            type: string
        type: object
    type: object
  cosmos.gov.v1.QueryProposalResponse: &ref_284
    description: >-
      QueryProposalResponse is the response type for the Query/Proposal RPC
      method.
    properties:
      proposal:
        description: proposal is the requested governance proposal.
        properties: *ref_63
        type: object
    type: object
  cosmos.gov.v1.QueryProposalsResponse: &ref_283
    description: |-
      QueryProposalsResponse is the response type for the Query/Proposals RPC
      method.
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        properties: *ref_8
        type: object
      proposals:
        description: proposals defines all the requested governance proposals.
        items: *ref_64
        type: array
    type: object
  cosmos.gov.v1.QueryTallyResultResponse: &ref_287
    description: >-
      QueryTallyResultResponse is the response type for the Query/Tally RPC
      method.
    properties:
      tally:
        description: tally defines the requested tally.
        properties: *ref_65
        type: object
    type: object
  cosmos.gov.v1.QueryVoteResponse: &ref_289
    description: QueryVoteResponse is the response type for the Query/Vote RPC method.
    properties:
      vote:
        description: vote defines the queried vote.
        properties: &ref_66
          metadata:
            title: >-
              metadata is any arbitrary metadata attached to the vote.

              the recommended format of the metadata is to be found here:
              https://docs.cosmos.network/v0.47/modules/gov#vote-5
            type: string
          options:
            description: options is the weighted vote options.
            items: &ref_71
              description: WeightedVoteOption defines a unit of vote for vote split.
              properties:
                option:
                  description: >-
                    option defines the valid vote options, it must not contain
                    duplicate vote options.
                  default: VOTE_OPTION_UNSPECIFIED
                  enum: &ref_69
                    - VOTE_OPTION_UNSPECIFIED
                    - VOTE_OPTION_YES
                    - VOTE_OPTION_ABSTAIN
                    - VOTE_OPTION_NO
                    - VOTE_OPTION_NO_WITH_VETO
                  type: string
                weight:
                  description: weight is the vote weight associated with the vote option.
                  type: string
              type: object
            type: array
          proposal_id:
            description: proposal_id defines the unique id of the proposal.
            format: uint64
            type: string
          voter:
            description: voter is the voter address of the proposal.
            type: string
        type: object
    type: object
  cosmos.gov.v1.QueryVotesResponse: &ref_288
    description: QueryVotesResponse is the response type for the Query/Votes RPC method.
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        properties: *ref_8
        type: object
      votes:
        description: votes defines the queried votes.
        items: &ref_68
          description: |-
            Vote defines a vote on a governance proposal.
            A Vote consists of a proposal ID, the voter, and the vote option.
          properties: *ref_66
          type: object
        type: array
    type: object
  cosmos.gov.v1.TallyParams:
    description: TallyParams defines the params for tallying votes on governance proposals.
    properties: *ref_67
    type: object
  cosmos.gov.v1.TallyResult:
    description: TallyResult defines a standard tally for a governance proposal.
    properties: *ref_65
    type: object
  cosmos.gov.v1.Vote: *ref_68
  cosmos.gov.v1.VoteOption:
    default: VOTE_OPTION_UNSPECIFIED
    description: >-
      VoteOption enumerates the valid vote options for a given governance
      proposal.

       - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
       - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
       - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
       - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
       - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
    enum: *ref_69
    type: string
  cosmos.gov.v1.VotingParams:
    description: VotingParams defines the params for voting on governance proposals.
    properties: *ref_70
    type: object
  cosmos.gov.v1.WeightedVoteOption: *ref_71
  cosmos.gov.v1beta1.Deposit: &ref_74
    description: |-
      Deposit defines an amount deposited by an account address to an active
      proposal.
    properties: &ref_73
      amount:
        description: amount to be deposited by depositor.
        items: *ref_17
        type: array
      depositor:
        description: depositor defines the deposit addresses from the proposals.
        type: string
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
    type: object
  cosmos.gov.v1beta1.DepositParams:
    description: DepositParams defines the params for deposits on governance proposals.
    properties: &ref_75
      max_deposit_period:
        description: >-
          Maximum period for Atom holders to deposit on a proposal. Initial
          value: 2

          months.
        type: string
      min_deposit:
        description: Minimum deposit for a proposal to enter voting period.
        items: *ref_17
        type: array
    type: object
  cosmos.gov.v1beta1.Proposal: &ref_76
    description: Proposal defines the core field members of a governance proposal.
    properties:
      content:
        properties: *ref_3
        type: object
        description: content is the proposal's content.
      deposit_end_time:
        description: deposit_end_time is the end time for deposition.
        format: date-time
        type: string
      final_tally_result:
        description: |-
          final_tally_result is the final tally result of the proposal. When
          querying a proposal via gRPC, this field is not populated until the
          proposal's voting period has ended.
        properties: &ref_77
          abstain:
            description: abstain is the number of abstain votes on a proposal.
            type: string
          'no':
            description: no is the number of no votes on a proposal.
            type: string
          no_with_veto:
            description: no_with_veto is the number of no with veto votes on a proposal.
            type: string
          'yes':
            description: yes is the number of yes votes on a proposal.
            type: string
        type: object
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
      status:
        description: status defines the proposal status.
        default: PROPOSAL_STATUS_UNSPECIFIED
        enum: &ref_72
          - PROPOSAL_STATUS_UNSPECIFIED
          - PROPOSAL_STATUS_DEPOSIT_PERIOD
          - PROPOSAL_STATUS_VOTING_PERIOD
          - PROPOSAL_STATUS_PASSED
          - PROPOSAL_STATUS_REJECTED
          - PROPOSAL_STATUS_FAILED
        type: string
      submit_time:
        description: submit_time is the time of proposal submission.
        format: date-time
        type: string
      total_deposit:
        description: total_deposit is the total deposit on the proposal.
        items: *ref_17
        type: array
      voting_end_time:
        description: voting_end_time is the end time of voting on a proposal.
        format: date-time
        type: string
      voting_start_time:
        description: voting_start_time is the starting time to vote on a proposal.
        format: date-time
        type: string
    type: object
  cosmos.gov.v1beta1.ProposalStatus:
    default: PROPOSAL_STATUS_UNSPECIFIED
    description: |-
      ProposalStatus enumerates the valid statuses of a proposal.

       - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
       - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
      period.
       - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
      period.
       - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
      passed.
       - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
      been rejected.
       - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
      failed.
    enum: *ref_72
    type: string
  cosmos.gov.v1beta1.QueryDepositResponse: &ref_294
    description: >-
      QueryDepositResponse is the response type for the Query/Deposit RPC
      method.
    properties:
      deposit:
        description: deposit defines the requested deposit.
        properties: *ref_73
        type: object
    type: object
  cosmos.gov.v1beta1.QueryDepositsResponse: &ref_293
    description: >-
      QueryDepositsResponse is the response type for the Query/Deposits RPC
      method.
    properties:
      deposits:
        description: deposits defines the requested deposits.
        items: *ref_74
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties: *ref_8
        type: object
    type: object
  cosmos.gov.v1beta1.QueryParamsResponse: &ref_290
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    properties:
      deposit_params:
        description: deposit_params defines the parameters related to deposit.
        properties: *ref_75
        type: object
      tally_params:
        description: tally_params defines the parameters related to tally.
        properties: &ref_80
          quorum:
            description: >-
              Minimum percentage of total stake needed to vote for a result to
              be

              considered valid.
            format: byte
            type: string
          threshold:
            description: >-
              Minimum proportion of Yes votes for proposal to pass. Default
              value: 0.5.
            format: byte
            type: string
          veto_threshold:
            description: >-
              Minimum value of Veto votes to Total votes ratio for proposal to
              be

              vetoed. Default value: 1/3.
            format: byte
            type: string
        type: object
      voting_params:
        description: voting_params defines the parameters related to voting.
        properties: &ref_82
          voting_period:
            description: Duration of the voting period.
            type: string
        type: object
    type: object
  cosmos.gov.v1beta1.QueryProposalResponse: &ref_292
    description: >-
      QueryProposalResponse is the response type for the Query/Proposal RPC
      method.
    properties:
      proposal: *ref_76
    type: object
  cosmos.gov.v1beta1.QueryProposalsResponse: &ref_291
    description: |-
      QueryProposalsResponse is the response type for the Query/Proposals RPC
      method.
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        properties: *ref_8
        type: object
      proposals:
        description: proposals defines all the requested governance proposals.
        items: *ref_76
        type: array
    type: object
  cosmos.gov.v1beta1.QueryTallyResultResponse: &ref_295
    description: >-
      QueryTallyResultResponse is the response type for the Query/Tally RPC
      method.
    properties:
      tally:
        description: tally defines the requested tally.
        properties: *ref_77
        type: object
    type: object
  cosmos.gov.v1beta1.QueryVoteResponse: &ref_297
    description: QueryVoteResponse is the response type for the Query/Vote RPC method.
    properties:
      vote:
        description: vote defines the queried vote.
        properties: &ref_79
          option:
            description: >-
              Deprecated: Prefer to use `options` instead. This field is set in
              queries

              if and only if `len(options) == 1` and that option has weight 1.
              In all

              other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
            default: VOTE_OPTION_UNSPECIFIED
            enum: &ref_78
              - VOTE_OPTION_UNSPECIFIED
              - VOTE_OPTION_YES
              - VOTE_OPTION_ABSTAIN
              - VOTE_OPTION_NO
              - VOTE_OPTION_NO_WITH_VETO
            type: string
          options:
            description: |-
              options is the weighted vote options.

              Since: cosmos-sdk 0.43
            items: &ref_83
              description: |-
                WeightedVoteOption defines a unit of vote for vote split.

                Since: cosmos-sdk 0.43
              properties:
                option:
                  description: >-
                    option defines the valid vote options, it must not contain
                    duplicate vote options.
                  default: VOTE_OPTION_UNSPECIFIED
                  enum: *ref_78
                  type: string
                weight:
                  description: weight is the vote weight associated with the vote option.
                  type: string
              type: object
            type: array
          proposal_id:
            description: proposal_id defines the unique id of the proposal.
            format: uint64
            type: string
          voter:
            description: voter is the voter address of the proposal.
            type: string
        type: object
    type: object
  cosmos.gov.v1beta1.QueryVotesResponse: &ref_296
    description: QueryVotesResponse is the response type for the Query/Votes RPC method.
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        properties: *ref_8
        type: object
      votes:
        description: votes defines the queried votes.
        items: &ref_81
          description: |-
            Vote defines a vote on a governance proposal.
            A Vote consists of a proposal ID, the voter, and the vote option.
          properties: *ref_79
          type: object
        type: array
    type: object
  cosmos.gov.v1beta1.TallyParams:
    description: TallyParams defines the params for tallying votes on governance proposals.
    properties: *ref_80
    type: object
  cosmos.gov.v1beta1.TallyResult:
    description: TallyResult defines a standard tally for a governance proposal.
    properties: *ref_77
    type: object
  cosmos.gov.v1beta1.Vote: *ref_81
  cosmos.gov.v1beta1.VoteOption:
    default: VOTE_OPTION_UNSPECIFIED
    description: >-
      VoteOption enumerates the valid vote options for a given governance
      proposal.

       - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
       - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
       - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
       - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
       - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
    enum: *ref_78
    type: string
  cosmos.gov.v1beta1.VotingParams:
    description: VotingParams defines the params for voting on governance proposals.
    properties: *ref_82
    type: object
  cosmos.gov.v1beta1.WeightedVoteOption: *ref_83
  cosmos.slashing.v1beta1.Params: &ref_84
    description: Params represents the parameters used for by the slashing module.
    properties:
      downtime_jail_duration:
        type: string
      min_signed_per_window:
        format: byte
        type: string
      signed_blocks_window:
        format: int64
        type: string
      slash_fraction_double_sign:
        format: byte
        type: string
      slash_fraction_downtime:
        format: byte
        type: string
    type: object
  cosmos.slashing.v1beta1.QueryParamsResponse: &ref_298
    properties:
      params: *ref_84
    title: QueryParamsResponse is the response type for the Query/Params RPC method
    type: object
  cosmos.slashing.v1beta1.QuerySigningInfoResponse: &ref_300
    properties:
      val_signing_info:
        title: val_signing_info is the signing info of requested val cons address
        description: >-
          ValidatorSigningInfo defines a validator's signing info for monitoring
          their

          liveness activity.
        properties: &ref_85
          address:
            type: string
          index_offset:
            description: >-
              Index which is incremented every time a validator is bonded in a
              block and

              _may_ have signed a pre-commit or not. This in conjunction with
              the

              signed_blocks_window param determines the index in the missed
              block bitmap.
            format: int64
            type: string
          jailed_until:
            description: >-
              Timestamp until which the validator is jailed due to liveness
              downtime.
            format: date-time
            type: string
          missed_blocks_counter:
            description: >-
              A counter of missed (unsigned) blocks. It is used to avoid
              unnecessary

              reads in the missed block bitmap.
            format: int64
            type: string
          start_height:
            format: int64
            title: Height at which validator was first a candidate OR was un-jailed
            type: string
          tombstoned:
            description: >-
              Whether or not a validator has been tombstoned (killed out of
              validator

              set). It is set once the validator commits an equivocation or for
              any other

              configured misbehavior.
            type: boolean
        type: object
    title: >-
      QuerySigningInfoResponse is the response type for the Query/SigningInfo
      RPC

      method
    type: object
  cosmos.slashing.v1beta1.QuerySigningInfosResponse: &ref_299
    properties:
      info:
        items: &ref_87
          description: >-
            ValidatorSigningInfo defines a validator's signing info for
            monitoring their

            liveness activity.
          properties: *ref_85
          type: object
        title: info is the signing info of all validators
        type: array
      pagination: *ref_86
    title: >-
      QuerySigningInfosResponse is the response type for the Query/SigningInfos
      RPC

      method
    type: object
  cosmos.slashing.v1beta1.ValidatorSigningInfo: *ref_87
  cosmos.staking.v1beta1.BondStatus:
    default: BOND_STATUS_UNSPECIFIED
    description: |-
      BondStatus is the status of a validator.

       - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
       - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
       - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
       - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
    enum: &ref_92
      - BOND_STATUS_UNSPECIFIED
      - BOND_STATUS_UNBONDED
      - BOND_STATUS_UNBONDING
      - BOND_STATUS_BONDED
    type: string
  cosmos.staking.v1beta1.Commission:
    description: Commission defines commission parameters for a given validator.
    properties: &ref_90
      commission_rates:
        description: >-
          commission_rates defines the initial commission rates to be used for
          creating a validator.
        properties: &ref_88
          max_change_rate:
            description: >-
              max_change_rate defines the maximum daily increase of the
              validator commission, as a fraction.
            type: string
          max_rate:
            description: >-
              max_rate defines the maximum commission rate which validator can
              ever charge, as a fraction.
            type: string
          rate:
            description: rate is the commission rate charged to delegators, as a fraction.
            type: string
        type: object
      update_time:
        description: update_time is the last time the commission rate was changed.
        format: date-time
        type: string
    type: object
  cosmos.staking.v1beta1.CommissionRates:
    description: >-
      CommissionRates defines the initial commission rates to be used for
      creating

      a validator.
    properties: *ref_88
    type: object
  cosmos.staking.v1beta1.Delegation: &ref_89
    description: |-
      Delegation represents the bond with tokens held by an account. It is
      owned by one delegator, and is associated with the voting power of one
      validator.
    properties:
      delegator_address:
        description: delegator_address is the encoded address of the delegator.
        type: string
      shares:
        description: shares define the delegation shares received.
        type: string
      validator_address:
        description: validator_address is the encoded address of the validator.
        type: string
    type: object
  cosmos.staking.v1beta1.DelegationResponse: &ref_94
    description: |-
      DelegationResponse is equivalent to Delegation except that it contains a
      balance in addition to shares which is more suitable for client responses.
    properties: &ref_93
      balance: *ref_17
      delegation: *ref_89
    type: object
  cosmos.staking.v1beta1.Description:
    description: Description defines a validator description.
    properties: &ref_91
      details:
        description: details define other optional details.
        type: string
      identity:
        description: >-
          identity defines an optional identity signature (ex. UPort or
          Keybase).
        type: string
      moniker:
        description: moniker defines a human-readable name for the validator.
        type: string
      security_contact:
        description: security_contact defines an optional email for security contact.
        type: string
      website:
        description: website defines an optional website link.
        type: string
    type: object
  cosmos.staking.v1beta1.HistoricalInfo:
    description: >-
      HistoricalInfo contains header and validator information for a given
      block.

      It is stored as part of staking module's state, which persists the `n`
      most

      recent HistoricalInfo

      (`n` is set by the staking module's `historical_entries` parameter).
    properties: &ref_97
      header: *ref_30
      valset:
        items: &ref_96
          description: >-
            Validator defines a validator, together with the total amount of the

            Validator's bond shares and their exchange rate to coins. Slashing
            results in

            a decrease in the exchange rate, allowing correct calculation of
            future

            undelegations without iterating over delegators. When coins are
            delegated to

            this validator, the validator is credited with a delegation whose
            number of

            bond shares is based on the amount of coins delegated divided by the
            current

            exchange rate. Voting power can be calculated as total bonded shares

            multiplied by exchange rate.
          properties: &ref_95
            commission:
              description: commission defines the commission parameters.
              properties: *ref_90
              type: object
            consensus_pubkey:
              properties: *ref_3
              type: object
              description: >-
                consensus_pubkey is the consensus public key of the validator,
                as a Protobuf Any.
            delegator_shares:
              description: >-
                delegator_shares defines total shares issued to a validator's
                delegators.
              type: string
            description:
              description: description defines the description terms for the validator.
              properties: *ref_91
              type: object
            jailed:
              description: >-
                jailed defined whether the validator has been jailed from bonded
                status or not.
              type: boolean
            min_self_delegation:
              description: >-
                min_self_delegation is the validator's self declared minimum
                self delegation.


                Since: cosmos-sdk 0.46
              type: string
            operator_address:
              description: >-
                operator_address defines the address of the validator's
                operator; bech encoded in JSON.
              type: string
            status:
              description: status is the validator status (bonded/unbonding/unbonded).
              default: BOND_STATUS_UNSPECIFIED
              enum: *ref_92
              type: string
            tokens:
              description: tokens define the delegated tokens (incl. self-delegation).
              type: string
            unbonding_height:
              description: >-
                unbonding_height defines, if unbonding, the height at which this
                validator has begun unbonding.
              format: int64
              type: string
            unbonding_ids:
              items:
                format: uint64
                type: string
              title: >-
                list of unbonding ids, each uniquely identifing an unbonding of
                this validator
              type: array
            unbonding_on_hold_ref_count:
              format: int64
              title: >-
                strictly positive if this validator's unbonding has been stopped
                by external modules
              type: string
            unbonding_time:
              description: >-
                unbonding_time defines, if unbonding, the min time for the
                validator to complete unbonding.
              format: date-time
              type: string
          type: object
        type: array
    type: object
  cosmos.staking.v1beta1.Params:
    description: Params defines the parameters for the x/staking module.
    properties: &ref_98
      bond_denom:
        description: bond_denom defines the bondable coin denomination.
        type: string
      historical_entries:
        description: historical_entries is the number of historical entries to persist.
        format: int64
        type: integer
      max_entries:
        description: >-
          max_entries is the max entries for either unbonding delegation or
          redelegation (per pair/trio).
        format: int64
        type: integer
      max_validators:
        description: max_validators is the maximum number of validators.
        format: int64
        type: integer
      min_commission_rate:
        title: >-
          min_commission_rate is the chain-wide minimum commission rate that a
          validator can charge their delegators
        type: string
      unbonding_time:
        description: unbonding_time is the time duration of unbonding.
        type: string
    type: object
  cosmos.staking.v1beta1.Pool:
    description: |-
      Pool is used for tracking bonded and not-bonded token supply of the bond
      denomination.
    properties: &ref_99
      bonded_tokens:
        type: string
      not_bonded_tokens:
        type: string
    type: object
  cosmos.staking.v1beta1.QueryDelegationResponse: &ref_312
    description: >-
      QueryDelegationResponse is response type for the Query/Delegation RPC
      method.
    properties:
      delegation_response:
        description: delegation_responses defines the delegation info of a delegation.
        properties: *ref_93
        type: object
    type: object
  cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse: &ref_301
    description: |-
      QueryDelegatorDelegationsResponse is response type for the
      Query/DelegatorDelegations RPC method.
    properties:
      delegation_responses:
        description: delegation_responses defines all the delegations' info of a delegator.
        items: *ref_94
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
    type: object
  cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse: &ref_303
    description: |-
      QueryUnbondingDelegatorDelegationsResponse is response type for the
      Query/UnbondingDelegatorDelegations RPC method.
    properties:
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
      unbonding_responses:
        items: &ref_102
          description: >-
            UnbondingDelegation stores all of a single delegator's unbonding
            bonds

            for a single validator in an time-ordered list.
          properties: &ref_101
            delegator_address:
              description: delegator_address is the encoded address of the delegator.
              type: string
            entries:
              description: entries are the unbonding delegation entries.
              items: &ref_106
                description: >-
                  UnbondingDelegationEntry defines an unbonding object with
                  relevant metadata.
                properties:
                  balance:
                    description: balance defines the tokens to receive at completion.
                    type: string
                  completion_time:
                    description: completion_time is the unix time for unbonding completion.
                    format: date-time
                    type: string
                  creation_height:
                    description: >-
                      creation_height is the height which the unbonding took
                      place.
                    format: int64
                    type: string
                  initial_balance:
                    description: >-
                      initial_balance defines the tokens initially scheduled to
                      receive at completion.
                    type: string
                  unbonding_id:
                    format: uint64
                    title: Incrementing id that uniquely identifies this entry
                    type: string
                  unbonding_on_hold_ref_count:
                    format: int64
                    title: >-
                      Strictly positive if this entry's unbonding has been
                      stopped by external modules
                    type: string
                type: object
              type: array
            validator_address:
              description: validator_address is the encoded address of the validator.
              type: string
          type: object
        type: array
    type: object
  cosmos.staking.v1beta1.QueryDelegatorValidatorResponse: &ref_305
    description: |-
      QueryDelegatorValidatorResponse response type for the
      Query/DelegatorValidator RPC method.
    properties:
      validator:
        description: >-
          Validator defines a validator, together with the total amount of the

          Validator's bond shares and their exchange rate to coins. Slashing
          results in

          a decrease in the exchange rate, allowing correct calculation of
          future

          undelegations without iterating over delegators. When coins are
          delegated to

          this validator, the validator is credited with a delegation whose
          number of

          bond shares is based on the amount of coins delegated divided by the
          current

          exchange rate. Voting power can be calculated as total bonded shares

          multiplied by exchange rate.
        properties: *ref_95
        type: object
    type: object
  cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse: &ref_304
    description: |-
      QueryDelegatorValidatorsResponse is response type for the
      Query/DelegatorValidators RPC method.
    properties:
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
      validators:
        description: validators defines the validators' info of a delegator.
        items: *ref_96
        type: array
    type: object
  cosmos.staking.v1beta1.QueryHistoricalInfoResponse: &ref_306
    description: >-
      QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo
      RPC

      method.
    properties:
      hist:
        description: hist defines the historical info at the given height.
        properties: *ref_97
        type: object
    type: object
  cosmos.staking.v1beta1.QueryParamsResponse: &ref_307
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    properties:
      params:
        description: params holds all the parameters of this module.
        properties: *ref_98
        type: object
    type: object
  cosmos.staking.v1beta1.QueryPoolResponse: &ref_308
    description: QueryPoolResponse is response type for the Query/Pool RPC method.
    properties:
      pool:
        description: pool defines the pool info.
        properties: *ref_99
        type: object
    type: object
  cosmos.staking.v1beta1.QueryRedelegationsResponse: &ref_302
    description: >-
      QueryRedelegationsResponse is response type for the Query/Redelegations
      RPC

      method.
    properties:
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
      redelegation_responses:
        items: &ref_105
          description: >-
            RedelegationResponse is equivalent to a Redelegation except that its
            entries

            contain a balance in addition to shares which is more suitable for
            client

            responses.
          properties:
            entries:
              items: &ref_104
                description: >-
                  RedelegationEntryResponse is equivalent to a RedelegationEntry
                  except that it

                  contains a balance in addition to shares which is more
                  suitable for client

                  responses.
                properties:
                  balance:
                    type: string
                  redelegation_entry: &ref_100
                    description: >-
                      RedelegationEntry defines a redelegation object with
                      relevant metadata.
                    properties:
                      completion_time:
                        description: >-
                          completion_time defines the unix time for redelegation
                          completion.
                        format: date-time
                        type: string
                      creation_height:
                        description: >-
                          creation_height  defines the height which the
                          redelegation took place.
                        format: int64
                        type: string
                      initial_balance:
                        description: >-
                          initial_balance defines the initial balance when
                          redelegation started.
                        type: string
                      shares_dst:
                        description: >-
                          shares_dst is the amount of destination-validator
                          shares created by redelegation.
                        type: string
                      unbonding_id:
                        format: uint64
                        title: Incrementing id that uniquely identifies this entry
                        type: string
                      unbonding_on_hold_ref_count:
                        format: int64
                        title: >-
                          Strictly positive if this entry's unbonding has been
                          stopped by external modules
                        type: string
                    type: object
                type: object
              type: array
            redelegation: &ref_103
              description: >-
                Redelegation contains the list of a particular delegator's
                redelegating bonds

                from a particular source validator to a particular destination
                validator.
              properties:
                delegator_address:
                  description: >-
                    delegator_address is the bech32-encoded address of the
                    delegator.
                  type: string
                entries:
                  description: entries are the redelegation entries.
                  items: *ref_100
                  type: array
                validator_dst_address:
                  description: >-
                    validator_dst_address is the validator redelegation
                    destination operator address.
                  type: string
                validator_src_address:
                  description: >-
                    validator_src_address is the validator redelegation source
                    operator address.
                  type: string
              type: object
          type: object
        type: array
    type: object
  cosmos.staking.v1beta1.QueryUnbondingDelegationResponse: &ref_313
    description: |-
      QueryDelegationResponse is response type for the Query/UnbondingDelegation
      RPC method.
    properties:
      unbond:
        description: |-
          UnbondingDelegation stores all of a single delegator's unbonding bonds
          for a single validator in an time-ordered list.
        properties: *ref_101
        type: object
    type: object
  cosmos.staking.v1beta1.QueryValidatorDelegationsResponse: &ref_311
    properties:
      delegation_responses:
        items: *ref_94
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
    title: |-
      QueryValidatorDelegationsResponse is response type for the
      Query/ValidatorDelegations RPC method
    type: object
  cosmos.staking.v1beta1.QueryValidatorResponse: &ref_310
    properties:
      validator:
        description: >-
          Validator defines a validator, together with the total amount of the

          Validator's bond shares and their exchange rate to coins. Slashing
          results in

          a decrease in the exchange rate, allowing correct calculation of
          future

          undelegations without iterating over delegators. When coins are
          delegated to

          this validator, the validator is credited with a delegation whose
          number of

          bond shares is based on the amount of coins delegated divided by the
          current

          exchange rate. Voting power can be calculated as total bonded shares

          multiplied by exchange rate.
        properties: *ref_95
        type: object
    title: QueryValidatorResponse is response type for the Query/Validator RPC method
    type: object
  cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse: &ref_314
    description: |-
      QueryValidatorUnbondingDelegationsResponse is response type for the
      Query/ValidatorUnbondingDelegations RPC method.
    properties:
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
      unbonding_responses:
        items: *ref_102
        type: array
    type: object
  cosmos.staking.v1beta1.QueryValidatorsResponse: &ref_309
    properties:
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
      validators:
        description: validators contains all the queried validators.
        items: *ref_96
        type: array
    title: >-
      QueryValidatorsResponse is response type for the Query/Validators RPC
      method
    type: object
  cosmos.staking.v1beta1.Redelegation: *ref_103
  cosmos.staking.v1beta1.RedelegationEntry: *ref_100
  cosmos.staking.v1beta1.RedelegationEntryResponse: *ref_104
  cosmos.staking.v1beta1.RedelegationResponse: *ref_105
  cosmos.staking.v1beta1.UnbondingDelegation: *ref_102
  cosmos.staking.v1beta1.UnbondingDelegationEntry: *ref_106
  cosmos.staking.v1beta1.Validator: *ref_96
  cosmos.tx.signing.v1beta1.SignMode:
    default: SIGN_MODE_UNSPECIFIED
    description: |-
      SignMode represents a signing mode with its own security guarantees.

      This enum should be considered a registry of all known sign modes
      in the Cosmos ecosystem. Apps are not expected to support all known
      sign modes. Apps that would like to support custom  sign modes are
      encouraged to open a small PR against this file to add a new case
      to this SignMode enum describing their sign mode so that different
      apps have a consistent version of this enum.

       - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
      rejected.
       - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
      verified with raw bytes from Tx.
       - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
      human-readable textual representation on top of the binary representation
      from SIGN_MODE_DIRECT.

      Since: cosmos-sdk 0.50
       - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
      SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
      require signers signing over other signers' `signer_info`.

      Since: cosmos-sdk 0.46
       - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
      Amino JSON and will be removed in the future.
       - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
      SDK. Ref: https://eips.ethereum.org/EIPS/eip-191

      Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
      but is not implemented on the SDK by default. To enable EIP-191, you need
      to pass a custom `TxConfig` that has an implementation of
      `SignModeHandler` for EIP-191. The SDK may decide to fully support
      EIP-191 in the future.

      Since: cosmos-sdk 0.45.2
    enum: &ref_109
      - SIGN_MODE_UNSPECIFIED
      - SIGN_MODE_DIRECT
      - SIGN_MODE_TEXTUAL
      - SIGN_MODE_DIRECT_AUX
      - SIGN_MODE_LEGACY_AMINO_JSON
      - SIGN_MODE_EIP_191
    type: string
  cosmos.tx.v1beta1.AuthInfo:
    description: |-
      AuthInfo describes the fee and signer modes that are used to sign a
      transaction.
    properties: &ref_113
      fee:
        description: >-
          Fee is the fee and gas limit for the transaction. The first signer is
          the

          primary signer and the one which pays the fee. The fee can be
          calculated

          based on the cost of evaluating the body and doing signature
          verification

          of the signers. This can be estimated via simulation.
        properties: &ref_112
          amount:
            items: *ref_17
            title: amount is the amount of coins to be paid as a fee
            type: array
          gas_limit:
            format: uint64
            title: >-
              gas_limit is the maximum gas that can be used in transaction
              processing

              before an out of gas error occurs
            type: string
          granter:
            title: >-
              if set, the fee payer (either the first signer or the value of the
              payer field) requests that a fee grant be used

              to pay fees instead of the fee payer's own balance. If an
              appropriate fee grant does not exist or the chain does

              not support fee grants, this will fail
            type: string
          payer:
            description: >-
              if unset, the first signer is responsible for paying the fees. If
              set, the specified account must pay the fees.

              the payer must be a tx signer (and thus have signed this field in
              AuthInfo).

              setting this field does *not* change the ordering of required
              signers for the transaction.
            type: string
        type: object
      signer_infos:
        description: >-
          signer_infos defines the signing modes for the required signers. The
          number

          and order of elements must match the required signers from TxBody's

          messages. The first element is the primary signer and the one which
          pays

          the fee.
        items: &ref_120
          description: >-
            SignerInfo describes the public key and signing mode of a single
            top-level

            signer.
          properties:
            mode_info:
              title: >-
                mode_info describes the signing mode of the signer and is a
                nested

                structure to support nested multisig pubkey's
              description: >-
                ModeInfo describes the signing mode of a single or nested
                multisig signer.
              properties: &ref_108
                multi:
                  title: multi represents a nested multisig signer
                  properties: &ref_118
                    bitarray:
                      title: >-
                        bitarray specifies which keys within the multisig are
                        signing
                      description: >-
                        CompactBitArray is an implementation of a space
                        efficient bit array.

                        This is used to ensure that the encoded data takes up a
                        minimal amount of

                        space after proto encoding.

                        This is not thread safe, and is not intended for
                        concurrent usage.
                      properties: *ref_107
                      type: object
                    mode_infos:
                      items: &ref_117
                        description: >-
                          ModeInfo describes the signing mode of a single or
                          nested multisig signer.
                        properties: *ref_108
                        type: object
                      title: >-
                        mode_infos is the corresponding modes of the signers of
                        the multisig

                        which could include nested multisig public keys
                      type: array
                  type: object
                single:
                  title: single represents a single signer
                  properties: &ref_119
                    mode:
                      title: mode is the signing mode of the single signer
                      default: SIGN_MODE_UNSPECIFIED
                      description: >-
                        SignMode represents a signing mode with its own security
                        guarantees.


                        This enum should be considered a registry of all known
                        sign modes

                        in the Cosmos ecosystem. Apps are not expected to
                        support all known

                        sign modes. Apps that would like to support custom  sign
                        modes are

                        encouraged to open a small PR against this file to add a
                        new case

                        to this SignMode enum describing their sign mode so that
                        different

                        apps have a consistent version of this enum.

                         - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                        rejected.
                         - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                        verified with raw bytes from Tx.
                         - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                        human-readable textual representation on top of the
                        binary representation

                        from SIGN_MODE_DIRECT.


                        Since: cosmos-sdk 0.50
                         - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                        SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this
                        sign mode does not

                        require signers signing over other signers'
                        `signer_info`.


                        Since: cosmos-sdk 0.46
                         - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                        Amino JSON and will be removed in the future.
                         - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                        SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                        Currently, SIGN_MODE_EIP_191 is registered as a SignMode
                        enum variant,

                        but is not implemented on the SDK by default. To enable
                        EIP-191, you need

                        to pass a custom `TxConfig` that has an implementation
                        of

                        `SignModeHandler` for EIP-191. The SDK may decide to
                        fully support

                        EIP-191 in the future.


                        Since: cosmos-sdk 0.45.2
                      enum: *ref_109
                      type: string
                  type: object
              type: object
            public_key:
              properties: *ref_3
              type: object
              description: >-
                public_key is the public key of the signer. It is optional for
                accounts

                that already exist in state. If unset, the verifier can use the
                required \

                signer address for this position and lookup the public key.
            sequence:
              description: >-
                sequence is the sequence of the account, which describes the

                number of committed transactions signed by a given address. It
                is used to

                prevent replay attacks.
              format: uint64
              type: string
          type: object
        type: array
      tip:
        description: >-
          Tip is the optional tip used for transactions fees paid in another
          denom.


          This field is ignored if the chain didn't enable tips, i.e. didn't add
          the

          `TipDecorator` in its posthandler.


          Since: cosmos-sdk 0.46
        properties: &ref_123
          amount:
            items: *ref_17
            title: amount is the amount of the tip
            type: array
          tipper:
            title: tipper is the address of the account paying for the tip
            type: string
        type: object
    type: object
  cosmos.tx.v1beta1.BroadcastMode: &ref_110
    default: BROADCAST_MODE_UNSPECIFIED
    description: |-
      BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC
      method.

       - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
       - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
      BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
       - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits
      for a CheckTx execution response only.
       - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client
      returns immediately.
    enum:
      - BROADCAST_MODE_UNSPECIFIED
      - BROADCAST_MODE_BLOCK
      - BROADCAST_MODE_SYNC
      - BROADCAST_MODE_ASYNC
    type: string
  cosmos.tx.v1beta1.BroadcastTxRequest: &ref_326
    description: |-
      BroadcastTxRequest is the request type for the Service.BroadcastTxRequest
      RPC method.
    properties:
      mode: *ref_110
      tx_bytes:
        description: tx_bytes is the raw transaction.
        format: byte
        type: string
    type: object
  cosmos.tx.v1beta1.BroadcastTxResponse: &ref_327
    description: |-
      BroadcastTxResponse is the response type for the
      Service.BroadcastTx method.
    properties:
      tx_response:
        description: tx_response is the queried TxResponses.
        properties: *ref_111
        type: object
    type: object
  cosmos.tx.v1beta1.Fee:
    description: >-
      Fee includes the amount of coins paid in fees and the maximum

      gas to be used by the transaction. The ratio yields an effective
      "gasprice",

      which must be above some miminum to be accepted into the mempool.
    properties: *ref_112
    type: object
  cosmos.tx.v1beta1.GetBlockWithTxsResponse: &ref_328
    description: >-
      GetBlockWithTxsResponse is the response type for the
      Service.GetBlockWithTxs

      method.


      Since: cosmos-sdk 0.45.2
    properties:
      block: &ref_187
        properties: *ref_32
        type: object
      block_id: *ref_23
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
      txs:
        description: txs are the transactions in the block.
        items: &ref_116
          description: Tx is the standard type used for broadcasting transactions.
          properties: &ref_114
            auth_info:
              title: >-
                auth_info is the authorization related content of the
                transaction,

                specifically signers, signer modes and fee
              description: >-
                AuthInfo describes the fee and signer modes that are used to
                sign a

                transaction.
              properties: *ref_113
              type: object
            body:
              title: body is the processable content of the transaction
              description: TxBody is the body of a transaction that all signers sign over.
              properties: &ref_124
                extension_options:
                  items: *ref_5
                  title: >-
                    extension_options are arbitrary options that can be added by
                    chains

                    when the default options are not sufficient. If any of these
                    are present

                    and can't be handled, the transaction will be rejected
                  type: array
                memo:
                  description: >-
                    memo is any arbitrary note/comment to be added to the
                    transaction.

                    WARNING: in clients, any publicly exposed text should not be
                    called memo,

                    but should be called `note` instead (see
                    https://github.com/cosmos/cosmos-sdk/issues/9122).
                  type: string
                messages:
                  description: >-
                    messages is a list of messages to be executed. The required
                    signers of

                    those messages define the number and order of elements in
                    AuthInfo's

                    signer_infos and Tx's signatures. Each required signer
                    address is added to

                    the list only the first time it occurs.

                    By convention, the first required signer (usually from the
                    first message)

                    is referred to as the primary signer and pays the fee for
                    the whole

                    transaction.
                  items: *ref_5
                  type: array
                non_critical_extension_options:
                  items: *ref_5
                  title: >-
                    extension_options are arbitrary options that can be added by
                    chains

                    when the default options are not sufficient. If any of these
                    are present

                    and can't be handled, they will be ignored
                  type: array
                timeout_height:
                  format: uint64
                  title: >-
                    timeout is the block height after which this transaction
                    will not

                    be processed by the chain
                  type: string
              type: object
            signatures:
              description: >-
                signatures is a list of signatures that matches the length and
                order of

                AuthInfo's signer_infos to allow connecting signature meta
                information like

                public key and signing mode by position.
              items:
                format: byte
                type: string
              type: array
          type: object
        type: array
    type: object
  cosmos.tx.v1beta1.GetTxResponse: &ref_329
    description: GetTxResponse is the response type for the Service.GetTx method.
    properties:
      tx:
        description: Tx is the standard type used for broadcasting transactions.
        properties: *ref_114
        type: object
      tx_response:
        description: tx_response is the queried TxResponses.
        properties: *ref_111
        type: object
    type: object
  cosmos.tx.v1beta1.GetTxsEventResponse: &ref_325
    description: |-
      GetTxsEventResponse is the response type for the Service.TxsByEvents
      RPC method.
    properties:
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
      total:
        format: uint64
        title: total is total number of results available
        type: string
      tx_responses:
        description: tx_responses is the list of queried TxResponses.
        items: *ref_115
        type: array
      txs:
        description: txs is the list of queried transactions.
        items: *ref_116
        type: array
    type: object
  cosmos.tx.v1beta1.ModeInfo: *ref_117
  cosmos.tx.v1beta1.ModeInfo.Multi:
    properties: *ref_118
    title: Multi is the mode info for a multisig public key
    type: object
  cosmos.tx.v1beta1.ModeInfo.Single:
    properties: *ref_119
    title: |-
      Single is the mode info for a single signer. It is structured as a message
      to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the
      future
    type: object
  cosmos.tx.v1beta1.OrderBy:
    default: ORDER_BY_UNSPECIFIED
    description: >-
      - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting
      order. OrderBy defaults

      to ASC in this case.
       - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
       - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
    enum:
      - ORDER_BY_UNSPECIFIED
      - ORDER_BY_ASC
      - ORDER_BY_DESC
    title: OrderBy defines the sorting order
    type: string
  cosmos.tx.v1beta1.SignerInfo: *ref_120
  cosmos.tx.v1beta1.SimulateRequest: &ref_323
    description: |-
      SimulateRequest is the request type for the Service.Simulate
      RPC method.
    properties:
      tx:
        description: Tx is the standard type used for broadcasting transactions.
        properties: *ref_114
        type: object
      tx_bytes:
        description: |-
          tx_bytes is the raw transaction.

          Since: cosmos-sdk 0.43
        format: byte
        type: string
    type: object
  cosmos.tx.v1beta1.SimulateResponse: &ref_324
    description: |-
      SimulateResponse is the response type for the
      Service.SimulateRPC method.
    properties:
      gas_info:
        description: gas_info is the information about gas used in the simulation.
        properties: *ref_121
        type: object
      result:
        description: result is the result of the simulation.
        properties: *ref_122
        type: object
    type: object
  cosmos.tx.v1beta1.Tip:
    description: |-
      Tip is the tip used for meta-transactions.

      Since: cosmos-sdk 0.46
    properties: *ref_123
    type: object
  cosmos.tx.v1beta1.Tx: *ref_116
  cosmos.tx.v1beta1.TxBody:
    description: TxBody is the body of a transaction that all signers sign over.
    properties: *ref_124
    type: object
  cosmos.tx.v1beta1.TxDecodeAminoRequest: &ref_317
    description: |-
      TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino
      RPC method.

      Since: cosmos-sdk 0.47
    properties:
      amino_binary:
        format: byte
        type: string
    type: object
  cosmos.tx.v1beta1.TxDecodeAminoResponse: &ref_318
    description: |-
      TxDecodeAminoResponse is the response type for the Service.TxDecodeAmino
      RPC method.

      Since: cosmos-sdk 0.47
    properties:
      amino_json:
        type: string
    type: object
  cosmos.tx.v1beta1.TxDecodeRequest: &ref_315
    description: |-
      TxDecodeRequest is the request type for the Service.TxDecode
      RPC method.

      Since: cosmos-sdk 0.47
    properties:
      tx_bytes:
        description: tx_bytes is the raw transaction.
        format: byte
        type: string
    type: object
  cosmos.tx.v1beta1.TxDecodeResponse: &ref_316
    description: |-
      TxDecodeResponse is the response type for the
      Service.TxDecode method.

      Since: cosmos-sdk 0.47
    properties:
      tx:
        description: Tx is the standard type used for broadcasting transactions.
        properties: *ref_114
        type: object
    type: object
  cosmos.tx.v1beta1.TxEncodeAminoRequest: &ref_321
    description: |-
      TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino
      RPC method.

      Since: cosmos-sdk 0.47
    properties:
      amino_json:
        type: string
    type: object
  cosmos.tx.v1beta1.TxEncodeAminoResponse: &ref_322
    description: |-
      TxEncodeAminoResponse is the response type for the Service.TxEncodeAmino
      RPC method.

      Since: cosmos-sdk 0.47
    properties:
      amino_binary:
        format: byte
        type: string
    type: object
  cosmos.tx.v1beta1.TxEncodeRequest: &ref_319
    description: |-
      TxEncodeRequest is the request type for the Service.TxEncode
      RPC method.

      Since: cosmos-sdk 0.47
    properties:
      tx:
        description: Tx is the standard type used for broadcasting transactions.
        properties: *ref_114
        type: object
    type: object
  cosmos.tx.v1beta1.TxEncodeResponse: &ref_320
    description: |-
      TxEncodeResponse is the response type for the
      Service.TxEncode method.

      Since: cosmos-sdk 0.47
    properties:
      tx_bytes:
        description: tx_bytes is the encoded transaction bytes.
        format: byte
        type: string
    type: object
  cosmos.upgrade.v1beta1.ModuleVersion: &ref_126
    description: |-
      ModuleVersion specifies a module and its consensus version.

      Since: cosmos-sdk 0.43
    properties:
      name:
        title: name of the app module
        type: string
      version:
        format: uint64
        title: consensus version of the app module
        type: string
    type: object
  cosmos.upgrade.v1beta1.Plan:
    description: >-
      Plan specifies information about a planned upgrade and when it should
      occur.
    properties: &ref_125
      height:
        description: The height at which the upgrade must be performed.
        format: int64
        type: string
      info:
        title: |-
          Any application specific upgrade info to be included on-chain
          such as a git commit that validators could automatically upgrade to
        type: string
      name:
        description: >-
          Sets the name for the upgrade. This name will be used by the upgraded

          version of the software to apply any special "on-upgrade" commands
          during

          the first BeginBlock method after the upgrade is applied. It is also
          used

          to detect whether a software version can handle a given upgrade. If no

          upgrade handler with this name has been set in the software, it will
          be

          assumed that the software is out-of-date when the upgrade Time or
          Height is

          reached and the software will exit.
        type: string
      time:
        description: >-
          Deprecated: Time based upgrades have been deprecated. Time based
          upgrade logic

          has been removed from the SDK.

          If this field is not empty, an error will be thrown.
        format: date-time
        type: string
      upgraded_client_state:
        properties: *ref_3
        type: object
        description: >-
          Deprecated: UpgradedClientState field has been deprecated. IBC upgrade
          logic has been

          moved to the IBC module in the sub module 02-client.

          If this field is not empty, an error will be thrown.
    type: object
  cosmos.upgrade.v1beta1.QueryAppliedPlanResponse: &ref_330
    description: >-
      QueryAppliedPlanResponse is the response type for the Query/AppliedPlan
      RPC

      method.
    properties:
      height:
        description: height is the block height at which the plan was applied.
        format: int64
        type: string
    type: object
  cosmos.upgrade.v1beta1.QueryAuthorityResponse: &ref_331
    description: 'Since: cosmos-sdk 0.46'
    properties:
      address:
        type: string
    title: QueryAuthorityResponse is the response type for Query/Authority
    type: object
  cosmos.upgrade.v1beta1.QueryCurrentPlanResponse: &ref_332
    description: >-
      QueryCurrentPlanResponse is the response type for the Query/CurrentPlan
      RPC

      method.
    properties:
      plan:
        description: plan is the current upgrade plan.
        properties: *ref_125
        type: object
    type: object
  cosmos.upgrade.v1beta1.QueryModuleVersionsResponse: &ref_333
    description: >-
      QueryModuleVersionsResponse is the response type for the
      Query/ModuleVersions

      RPC method.


      Since: cosmos-sdk 0.43
    properties:
      module_versions:
        description: >-
          module_versions is a list of module names with their consensus
          versions.
        items: *ref_126
        type: array
    type: object
  cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse: &ref_334
    description: >-
      QueryUpgradedConsensusStateResponse is the response type for the
      Query/UpgradedConsensusState

      RPC method.
    properties:
      upgraded_consensus_state:
        format: byte
        title: 'Since: cosmos-sdk 0.43'
        type: string
    type: object
  cosmwasm.wasm.v1.AbsoluteTxPosition:
    description: |-
      AbsoluteTxPosition is a unique transaction position that allows for global
      ordering of transactions.
    properties: &ref_129
      block_height:
        format: uint64
        title: BlockHeight is the block the contract was created at
        type: string
      tx_index:
        format: uint64
        title: >-
          TxIndex is a monotonic counter within the block (actual transaction
          index,

          or gas consumed)
        type: string
    type: object
  cosmwasm.wasm.v1.AccessConfig: &ref_128
    description: AccessConfig access control type.
    properties:
      addresses:
        items:
          type: string
        type: array
      permission: &ref_127
        default: ACCESS_TYPE_UNSPECIFIED
        description: >-
          - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty
          value
           - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
           - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
           - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
        enum:
          - ACCESS_TYPE_UNSPECIFIED
          - ACCESS_TYPE_NOBODY
          - ACCESS_TYPE_EVERYBODY
          - ACCESS_TYPE_ANY_OF_ADDRESSES
        title: AccessType permission types
        type: string
    type: object
  cosmwasm.wasm.v1.AccessType: *ref_127
  cosmwasm.wasm.v1.CodeInfoResponse: &ref_132
    properties:
      code_id:
        format: uint64
        type: string
      creator:
        type: string
      data_hash:
        format: byte
        type: string
      instantiate_permission: *ref_128
    title: CodeInfoResponse contains code meta data from CodeInfo
    type: object
  cosmwasm.wasm.v1.ContractCodeHistoryEntry: &ref_133
    description: ContractCodeHistoryEntry metadata to a contract.
    properties:
      code_id:
        format: uint64
        title: CodeID is the reference to the stored WASM code
        type: string
      msg:
        format: byte
        type: string
      operation: &ref_130
        default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
        description: >-
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
          ContractCodeHistoryOperationTypeUnspecified placeholder for empty
          value
           - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
           - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
           - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
        enum:
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
        title: ContractCodeHistoryOperationType actions that caused a code change
        type: string
      updated:
        description: Updated Tx position when the operation was executed.
        properties: *ref_129
        type: object
    type: object
  cosmwasm.wasm.v1.ContractCodeHistoryOperationType: *ref_130
  cosmwasm.wasm.v1.ContractInfo: &ref_134
    properties:
      admin:
        title: Admin is an optional address that can execute migrations
        type: string
      code_id:
        format: uint64
        title: CodeID is the reference to the stored Wasm code
        type: string
      created:
        description: Created Tx position when the contract was instantiated.
        properties: *ref_129
        type: object
      creator:
        title: Creator address who initially instantiated the contract
        type: string
      extension:
        properties: *ref_3
        type: object
        description: |-
          Extension is an extension point to store custom metadata within the
          persistence model.
      ibc_port_id:
        type: string
      label:
        description: Label is optional metadata to be stored with a contract instance.
        type: string
    title: ContractInfo stores a WASM contract instance
    type: object
  cosmwasm.wasm.v1.Model: &ref_131
    properties:
      key:
        format: byte
        title: hex-encode key to read it better (this is often ascii)
        type: string
      value:
        format: byte
        title: base64-encode raw value
        type: string
    title: Model is a struct that holds a KV pair
    type: object
  cosmwasm.wasm.v1.Params:
    description: Params defines the set of wasm parameters.
    properties: &ref_135
      code_upload_access: *ref_128
      instantiate_default_permission: *ref_127
    type: object
  cosmwasm.wasm.v1.QueryAllContractStateResponse: &ref_345
    properties:
      models:
        items: *ref_131
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
    title: |-
      QueryAllContractStateResponse is the response type for the
      Query/AllContractState RPC method
    type: object
  cosmwasm.wasm.v1.QueryBuildAddressResponse: &ref_340
    description: >-
      QueryBuildAddressResponse is the response type for the Query/BuildAddress
      RPC

      method.
    properties:
      address:
        title: Address is the contract address
        type: string
    type: object
  cosmwasm.wasm.v1.QueryCodeResponse: &ref_336
    properties:
      code_info: *ref_132
      data:
        format: byte
        type: string
    title: QueryCodeResponse is the response type for the Query/Code RPC method
    type: object
  cosmwasm.wasm.v1.QueryCodesResponse: &ref_335
    properties:
      code_infos:
        items: *ref_132
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
    title: QueryCodesResponse is the response type for the Query/Codes RPC method
    type: object
  cosmwasm.wasm.v1.QueryContractHistoryResponse: &ref_342
    properties:
      entries:
        items: *ref_133
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
    title: |-
      QueryContractHistoryResponse is the response type for the
      Query/ContractHistory RPC method
    type: object
  cosmwasm.wasm.v1.QueryContractInfoResponse: &ref_341
    properties:
      address:
        title: address is the address of the contract
        type: string
      contract_info: *ref_134
    title: >-
      QueryContractInfoResponse is the response type for the Query/ContractInfo
      RPC

      method
    type: object
  cosmwasm.wasm.v1.QueryContractsByCodeResponse: &ref_337
    properties:
      contracts:
        items:
          type: string
        title: contracts are a set of contract addresses
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
    title: |-
      QueryContractsByCodeResponse is the response type for the
      Query/ContractsByCode RPC method
    type: object
  cosmwasm.wasm.v1.QueryContractsByCreatorResponse: &ref_346
    description: |-
      QueryContractsByCreatorResponse is the response type for the
      Query/ContractsByCreator RPC method.
    properties:
      contract_addresses:
        items:
          type: string
        title: ContractAddresses result set
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
    type: object
  cosmwasm.wasm.v1.QueryParamsResponse: &ref_338
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties: *ref_135
        type: object
    type: object
  cosmwasm.wasm.v1.QueryPinnedCodesResponse: &ref_339
    properties:
      code_ids:
        items:
          format: uint64
          type: string
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
    title: |-
      QueryPinnedCodesResponse is the response type for the
      Query/PinnedCodes RPC method
    type: object
  cosmwasm.wasm.v1.QueryRawContractStateResponse: &ref_343
    properties:
      data:
        format: byte
        title: Data contains the raw store data
        type: string
    title: |-
      QueryRawContractStateResponse is the response type for the
      Query/RawContractState RPC method
    type: object
  cosmwasm.wasm.v1.QuerySmartContractStateResponse: &ref_344
    properties:
      data:
        format: byte
        title: Data contains the json data returned from the smart contract
        type: string
    title: |-
      QuerySmartContractStateResponse is the response type for the
      Query/SmartContractState RPC method
    type: object
  google.protobuf.Any: *ref_5
  grpc.gateway.runtime.Error: &ref_204
    properties:
      code:
        format: int32
        type: integer
      details:
        items: *ref_5
        type: array
      error:
        type: string
      message:
        type: string
    type: object
  ibc.applications.fee.v1.Fee:
    properties: &ref_136
      ack_fee:
        items: *ref_17
        title: the packet acknowledgement fee
        type: array
      recv_fee:
        items: *ref_17
        title: the packet receive fee
        type: array
      timeout_fee:
        items: *ref_17
        title: the packet timeout fee
        type: array
    title: Fee defines the ICS29 receive, acknowledgement and timeout fees
    type: object
  ibc.applications.fee.v1.FeeEnabledChannel: &ref_138
    properties:
      channel_id:
        title: unique channel identifier
        type: string
      port_id:
        title: unique port identifier
        type: string
    title: >-
      FeeEnabledChannel contains the PortID & ChannelID for a fee enabled
      channel
    type: object
  ibc.applications.fee.v1.IdentifiedPacketFees: &ref_140
    properties: &ref_139
      packet_fees:
        items: &ref_137
          properties:
            fee:
              title: >-
                fee encapsulates the recv, ack and timeout fees associated with
                an IBC packet
              properties: *ref_136
              type: object
            refund_address:
              title: the refund address for unspent fees
              type: string
            relayers:
              items:
                type: string
              title: optional list of relayers permitted to receive fees
              type: array
          title: >-
            PacketFee contains ICS29 relayer fees, refund address and optional
            list of permitted relayers
          type: object
        title: list of packet fees
        type: array
      packet_id:
        title: >-
          unique packet identifier comprised of the channel ID, port ID and
          sequence
        properties: &ref_149
          channel_id:
            title: channel unique identifier
            type: string
          port_id:
            title: channel port identifier
            type: string
          sequence:
            format: uint64
            title: packet sequence
            type: string
        type: object
    title: >-
      IdentifiedPacketFees contains a list of type PacketFee and associated
      PacketId
    type: object
  ibc.applications.fee.v1.PacketFee: *ref_137
  ibc.applications.fee.v1.QueryCounterpartyPayeeResponse: &ref_349
    properties:
      counterparty_payee:
        title: the counterparty payee address used to compensate forward relaying
        type: string
    title: >-
      QueryCounterpartyPayeeResponse defines the response type for the
      CounterpartyPayee rpc
    type: object
  ibc.applications.fee.v1.QueryFeeEnabledChannelResponse: &ref_347
    properties:
      fee_enabled:
        title: boolean flag representing the fee enabled channel status
        type: boolean
    title: >-
      QueryFeeEnabledChannelResponse defines the response type for the
      FeeEnabledChannel rpc
    type: object
  ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse: &ref_355
    properties:
      fee_enabled_channels:
        items: *ref_138
        title: list of fee enabled channels
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
    title: >-
      QueryFeeEnabledChannelsResponse defines the response type for the
      FeeEnabledChannels rpc
    type: object
  ibc.applications.fee.v1.QueryIncentivizedPacketResponse: &ref_351
    properties:
      incentivized_packet:
        title: the identified fees for the incentivized packet
        properties: *ref_139
        type: object
    title: >-
      QueryIncentivizedPacketsResponse defines the response type for the
      IncentivizedPacket rpc
    type: object
  ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse: &ref_348
    properties:
      incentivized_packets:
        items: *ref_140
        title: Map of all incentivized_packets
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
    title: >-
      QueryIncentivizedPacketsResponse defines the response type for the
      incentivized packets RPC
    type: object
  ibc.applications.fee.v1.QueryIncentivizedPacketsResponse: &ref_356
    properties:
      incentivized_packets:
        items: *ref_140
        title: list of identified fees for incentivized packets
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
    title: >-
      QueryIncentivizedPacketsResponse defines the response type for the
      IncentivizedPackets rpc
    type: object
  ibc.applications.fee.v1.QueryPayeeResponse: &ref_350
    properties:
      payee_address:
        title: the payee address to which packet fees are paid out
        type: string
    title: QueryPayeeResponse defines the response type for the Payee rpc
    type: object
  ibc.applications.fee.v1.QueryTotalAckFeesResponse: &ref_352
    properties:
      ack_fees:
        items: *ref_17
        title: the total packet acknowledgement fees
        type: array
    title: >-
      QueryTotalAckFeesResponse defines the response type for the TotalAckFees
      rpc
    type: object
  ibc.applications.fee.v1.QueryTotalRecvFeesResponse: &ref_353
    properties:
      recv_fees:
        items: *ref_17
        title: the total packet receive fees
        type: array
    title: >-
      QueryTotalRecvFeesResponse defines the response type for the TotalRecvFees
      rpc
    type: object
  ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse: &ref_354
    properties:
      timeout_fees:
        items: *ref_17
        title: the total packet timeout fees
        type: array
    title: >-
      QueryTotalTimeoutFeesResponse defines the response type for the
      TotalTimeoutFees rpc
    type: object
  ibc.applications.interchain_accounts.controller.v1.Params:
    description: |-
      Params defines the set of on-chain interchain accounts parameters.
      The following parameters may be used to disable the controller submodule.
    properties: &ref_141
      controller_enabled:
        description: controller_enabled enables or disables the controller submodule.
        type: boolean
    type: object
  ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse: &ref_357
    description: >-
      QueryInterchainAccountResponse the response type for the
      Query/InterchainAccount RPC method.
    properties:
      address:
        type: string
    type: object
  ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse: &ref_358
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties: *ref_141
        type: object
    type: object
  ibc.applications.interchain_accounts.host.v1.Params:
    description: |-
      Params defines the set of on-chain interchain accounts parameters.
      The following parameters may be used to disable the host submodule.
    properties: &ref_142
      allow_messages:
        description: >-
          allow_messages defines a list of sdk message typeURLs allowed to be
          executed on a host chain.
        items:
          type: string
        type: array
      host_enabled:
        description: host_enabled enables or disables the host submodule.
        type: boolean
    type: object
  ibc.applications.interchain_accounts.host.v1.QueryParamsResponse: &ref_359
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties: *ref_142
        type: object
    type: object
  ibc.applications.transfer.v1.DenomTrace: &ref_144
    description: >-
      DenomTrace contains the base denomination for ICS20 fungible tokens and
      the

      source tracing information path.
    properties: &ref_143
      base_denom:
        description: base denomination of the relayed fungible token.
        type: string
      path:
        description: >-
          path defines the chain of port/channel identifiers used for tracing
          the

          source of the fungible token.
        type: string
    type: object
  ibc.applications.transfer.v1.Params:
    description: >-
      Params defines the set of IBC transfer parameters.

      NOTE: To prevent a single token from being transferred, set the

      TransfersEnabled parameter to true and then set the bank module's
      SendEnabled

      parameter for the denomination to false.
    properties: &ref_145
      receive_enabled:
        description: >-
          receive_enabled enables or disables all cross-chain token transfers to
          this

          chain.
        type: boolean
      send_enabled:
        description: >-
          send_enabled enables or disables all cross-chain token transfers from
          this

          chain.
        type: boolean
    type: object
  ibc.applications.transfer.v1.QueryDenomHashResponse: &ref_361
    description: |-
      QueryDenomHashResponse is the response type for the Query/DenomHash RPC
      method.
    properties:
      hash:
        description: hash (in hex format) of the denomination trace information.
        type: string
    type: object
  ibc.applications.transfer.v1.QueryDenomTraceResponse: &ref_363
    description: |-
      QueryDenomTraceResponse is the response type for the Query/DenomTrace RPC
      method.
    properties:
      denom_trace:
        description: denom_trace returns the requested denomination trace information.
        properties: *ref_143
        type: object
    type: object
  ibc.applications.transfer.v1.QueryDenomTracesResponse: &ref_362
    description: >-
      QueryConnectionsResponse is the response type for the Query/DenomTraces
      RPC

      method.
    properties:
      denom_traces:
        description: denom_traces returns all denominations trace information.
        items: *ref_144
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
    type: object
  ibc.applications.transfer.v1.QueryEscrowAddressResponse: &ref_360
    description: >-
      QueryEscrowAddressResponse is the response type of the EscrowAddress RPC
      method.
    properties:
      escrow_address:
        title: the escrow account address
        type: string
    type: object
  ibc.applications.transfer.v1.QueryParamsResponse: &ref_365
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties: *ref_145
        type: object
    type: object
  ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse: &ref_364
    description: >-
      QueryTotalEscrowForDenomResponse is the response type for
      TotalEscrowForDenom RPC method.
    properties:
      amount: *ref_17
    type: object
  ibc.core.channel.v1.Channel:
    description: |-
      Channel defines pipeline for exactly-once packet delivery between specific
      modules on separate blockchains, which has at least one end capable of
      sending packets and one end capable of receiving packets.
    properties: &ref_152
      connection_hops:
        items:
          type: string
        title: |-
          list of connection identifiers, in order, along which packets sent on
          this channel will travel
        type: array
      counterparty:
        title: counterparty channel end
        properties: &ref_146
          channel_id:
            title: channel end on the counterparty chain
            type: string
          port_id:
            description: >-
              port on the counterparty chain which owns the other end of the
              channel.
            type: string
        type: object
      ordering:
        title: whether the channel is ordered or unordered
        default: ORDER_NONE_UNSPECIFIED
        description: |-
          - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
           - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
          which they were sent.
           - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
        enum: &ref_147
          - ORDER_NONE_UNSPECIFIED
          - ORDER_UNORDERED
          - ORDER_ORDERED
        type: string
      state:
        title: current state of the channel end
        default: STATE_UNINITIALIZED_UNSPECIFIED
        description: |-
          State defines if a channel is in one of the following states:
          CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or UNINITIALIZED.

           - STATE_UNINITIALIZED_UNSPECIFIED: Default State
           - STATE_INIT: A channel has just started the opening handshake.
           - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
           - STATE_OPEN: A channel has completed the handshake. Open channels are
          ready to send and receive packets.
           - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
          packets.
           - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
           - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
        enum: &ref_148
          - STATE_UNINITIALIZED_UNSPECIFIED
          - STATE_INIT
          - STATE_TRYOPEN
          - STATE_OPEN
          - STATE_CLOSED
          - STATE_FLUSHING
          - STATE_FLUSHCOMPLETE
        type: string
      upgrade_sequence:
        format: uint64
        title: >-
          upgrade sequence indicates the latest upgrade attempt performed by
          this channel

          the value of 0 indicates the channel has never been upgraded
        type: string
      version:
        title: opaque channel version, which is agreed upon during the handshake
        type: string
    type: object
  ibc.core.channel.v1.Counterparty:
    properties: *ref_146
    title: Counterparty defines a channel end counterparty
    type: object
  ibc.core.channel.v1.ErrorReceipt: &ref_155
    description: >-
      ErrorReceipt defines a type which encapsulates the upgrade sequence and
      error associated with the

      upgrade handshake failure. When a channel upgrade handshake is aborted
      both chains are expected to increment to the

      next sequence.
    properties:
      message:
        title: the error message detailing the cause of failure
        type: string
      sequence:
        format: uint64
        title: the channel upgrade sequence
        type: string
    type: object
  ibc.core.channel.v1.IdentifiedChannel: &ref_153
    description: |-
      IdentifiedChannel defines a channel with additional port and channel
      identifier fields.
    properties:
      channel_id:
        title: channel identifier
        type: string
      connection_hops:
        items:
          type: string
        title: |-
          list of connection identifiers, in order, along which packets sent on
          this channel will travel
        type: array
      counterparty:
        title: counterparty channel end
        properties: *ref_146
        type: object
      ordering:
        title: whether the channel is ordered or unordered
        default: ORDER_NONE_UNSPECIFIED
        description: |-
          - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
           - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
          which they were sent.
           - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
        enum: *ref_147
        type: string
      port_id:
        title: port identifier
        type: string
      state:
        title: current state of the channel end
        default: STATE_UNINITIALIZED_UNSPECIFIED
        description: |-
          State defines if a channel is in one of the following states:
          CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or UNINITIALIZED.

           - STATE_UNINITIALIZED_UNSPECIFIED: Default State
           - STATE_INIT: A channel has just started the opening handshake.
           - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
           - STATE_OPEN: A channel has completed the handshake. Open channels are
          ready to send and receive packets.
           - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
          packets.
           - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
           - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
        enum: *ref_148
        type: string
      upgrade_sequence:
        format: uint64
        title: >-
          upgrade sequence indicates the latest upgrade attempt performed by
          this channel

          the value of 0 indicates the channel has never been upgraded
        type: string
      version:
        title: opaque channel version, which is agreed upon during the handshake
        type: string
    type: object
  ibc.core.channel.v1.Order: &ref_156
    default: ORDER_NONE_UNSPECIFIED
    description: |-
      - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
       - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
      which they were sent.
       - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
    enum: *ref_147
    title: Order defines if a channel is ORDERED or UNORDERED
    type: string
  ibc.core.channel.v1.PacketId:
    properties: *ref_149
    title: |-
      PacketId is an identifer for a unique Packet
      Source chains refer to packets by source port/channel
      Destination chains refer to packets by destination port/channel
    type: object
  ibc.core.channel.v1.PacketState: &ref_154
    description: |-
      PacketState defines the generic type necessary to retrieve and store
      packet commitments, acknowledgements, and receipts.
      Caller is responsible for knowing the context necessary to interpret this
      state as a commitment, acknowledgement, or a receipt.
    properties:
      channel_id:
        description: channel unique identifier.
        type: string
      data:
        description: embedded data that represents packet state.
        format: byte
        type: string
      port_id:
        description: channel port identifier.
        type: string
      sequence:
        description: packet sequence.
        format: uint64
        type: string
    type: object
  ibc.core.channel.v1.Params:
    description: Params defines the set of IBC channel parameters.
    properties: &ref_151
      upgrade_timeout:
        description: the relative timeout after which channel upgrades will time out.
        properties: &ref_157
          height:
            title: block height after which the packet or upgrade times out
            description: >-
              Normally the RevisionHeight is incremented at each height while
              keeping

              RevisionNumber the same. However some consensus algorithms may
              choose to

              reset the height in certain conditions e.g. hard forks,
              state-machine

              breaking changes In these cases, the RevisionNumber is incremented
              so that

              height continues to be monitonically increasing even as the
              RevisionHeight

              gets reset
            properties: &ref_150
              revision_height:
                format: uint64
                title: the height within the given revision
                type: string
              revision_number:
                format: uint64
                title: the revision that the client is currently on
                type: string
            type: object
          timestamp:
            format: uint64
            title: >-
              block timestamp (in nanoseconds) after which the packet or upgrade
              times out
            type: string
        type: object
    type: object
  ibc.core.channel.v1.QueryChannelClientStateResponse: &ref_368
    properties:
      identified_client_state:
        title: client state associated with the channel
        description: |-
          IdentifiedClientState defines a client state with an additional client
          identifier field.
        properties: &ref_161
          client_id:
            title: client identifier
            type: string
          client_state:
            properties: *ref_3
            type: object
            title: client state
        type: object
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        title: height at which the proof was retrieved
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
    title: |-
      QueryChannelClientStateResponse is the Response type for the
      Query/QueryChannelClientState RPC method
    type: object
  ibc.core.channel.v1.QueryChannelConsensusStateResponse: &ref_369
    properties:
      client_id:
        title: client ID associated with the consensus state
        type: string
      consensus_state:
        properties: *ref_3
        type: object
        title: consensus state associated with the channel
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        title: height at which the proof was retrieved
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
    title: |-
      QueryChannelClientStateResponse is the Response type for the
      Query/QueryChannelClientState RPC method
    type: object
  ibc.core.channel.v1.QueryChannelParamsResponse: &ref_382
    description: >-
      QueryChannelParamsResponse is the response type for the
      Query/ChannelParams RPC method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties: *ref_151
        type: object
    type: object
  ibc.core.channel.v1.QueryChannelResponse: &ref_367
    description: >-
      QueryChannelResponse is the response type for the Query/Channel RPC
      method.

      Besides the Channel end, it includes a proof and the height from which the

      proof was retrieved.
    properties:
      channel:
        title: channel associated with the request identifiers
        description: >-
          Channel defines pipeline for exactly-once packet delivery between
          specific

          modules on separate blockchains, which has at least one end capable of

          sending packets and one end capable of receiving packets.
        properties: *ref_152
        type: object
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        title: height at which the proof was retrieved
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
    type: object
  ibc.core.channel.v1.QueryChannelsResponse: &ref_366
    description: >-
      QueryChannelsResponse is the response type for the Query/Channels RPC
      method.
    properties:
      channels:
        description: list of stored channels of the chain.
        items: *ref_153
        type: array
      height:
        title: query block height
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
        title: pagination response
    type: object
  ibc.core.channel.v1.QueryConnectionChannelsResponse: &ref_381
    properties:
      channels:
        description: list of channels associated with a connection.
        items: *ref_153
        type: array
      height:
        title: query block height
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
        title: pagination response
    title: |-
      QueryConnectionChannelsResponse is the Response type for the
      Query/QueryConnectionChannels RPC method
    type: object
  ibc.core.channel.v1.QueryNextSequenceReceiveResponse: &ref_370
    properties:
      next_sequence_receive:
        format: uint64
        title: next sequence receive number
        type: string
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        title: height at which the proof was retrieved
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
    title: |-
      QuerySequenceResponse is the response type for the
      Query/QueryNextSequenceReceiveResponse RPC method
    type: object
  ibc.core.channel.v1.QueryNextSequenceSendResponse: &ref_371
    properties:
      next_sequence_send:
        format: uint64
        title: next sequence send number
        type: string
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        title: height at which the proof was retrieved
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
    title: |-
      QueryNextSequenceSendResponse is the request type for the
      Query/QueryNextSequenceSend RPC method
    type: object
  ibc.core.channel.v1.QueryPacketAcknowledgementResponse: &ref_373
    properties:
      acknowledgement:
        format: byte
        title: packet associated with the request fields
        type: string
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        title: height at which the proof was retrieved
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
    title: |-
      QueryPacketAcknowledgementResponse defines the client query response for a
      packet which also includes a proof and the height from which the
      proof was retrieved
    type: object
  ibc.core.channel.v1.QueryPacketAcknowledgementsResponse: &ref_372
    properties:
      acknowledgements:
        items: *ref_154
        type: array
      height:
        title: query block height
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
        title: pagination response
    title: |-
      QueryPacketAcknowledgemetsResponse is the request type for the
      Query/QueryPacketAcknowledgements RPC method
    type: object
  ibc.core.channel.v1.QueryPacketCommitmentResponse: &ref_377
    properties:
      commitment:
        format: byte
        title: packet associated with the request fields
        type: string
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        title: height at which the proof was retrieved
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
    title: >-
      QueryPacketCommitmentResponse defines the client query response for a
      packet

      which also includes a proof and the height from which the proof was

      retrieved
    type: object
  ibc.core.channel.v1.QueryPacketCommitmentsResponse: &ref_374
    properties:
      commitments:
        items: *ref_154
        type: array
      height:
        title: query block height
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
        title: pagination response
    title: |-
      QueryPacketCommitmentsResponse is the request type for the
      Query/QueryPacketCommitments RPC method
    type: object
  ibc.core.channel.v1.QueryPacketReceiptResponse: &ref_378
    properties:
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        title: height at which the proof was retrieved
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
      received:
        title: success flag for if receipt exists
        type: boolean
    title: >-
      QueryPacketReceiptResponse defines the client query response for a packet

      receipt which also includes a proof, and the height from which the proof
      was

      retrieved
    type: object
  ibc.core.channel.v1.QueryUnreceivedAcksResponse: &ref_375
    properties:
      height:
        title: query block height
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
      sequences:
        items:
          format: uint64
          type: string
        title: list of unreceived acknowledgement sequences
        type: array
    title: |-
      QueryUnreceivedAcksResponse is the response type for the
      Query/UnreceivedAcks RPC method
    type: object
  ibc.core.channel.v1.QueryUnreceivedPacketsResponse: &ref_376
    properties:
      height:
        title: query block height
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
      sequences:
        items:
          format: uint64
          type: string
        title: list of unreceived packet sequences
        type: array
    title: |-
      QueryUnreceivedPacketsResponse is the response type for the
      Query/UnreceivedPacketCommitments RPC method
    type: object
  ibc.core.channel.v1.QueryUpgradeErrorResponse: &ref_380
    properties:
      error_receipt: *ref_155
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        title: height at which the proof was retrieved
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
    title: >-
      QueryUpgradeErrorResponse is the response type for the
      Query/QueryUpgradeError RPC method
    type: object
  ibc.core.channel.v1.QueryUpgradeResponse: &ref_379
    properties:
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        title: height at which the proof was retrieved
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
      upgrade: &ref_159
        description: >-
          Upgrade is a verifiable type which contains the relevant information

          for an attempted upgrade. It provides the proposed changes to the
          channel

          end, the timeout for this upgrade attempt and the next packet sequence

          which allows the counterparty to efficiently know the highest sequence
          it has received.

          The next sequence send is used for pruning and upgrading from
          unordered to ordered channels.
        properties:
          fields: &ref_160
            description: |-
              UpgradeFields are the fields in a channel end which may be changed
              during a channel upgrade.
            properties:
              connection_hops:
                items:
                  type: string
                type: array
              ordering: *ref_156
              version:
                type: string
            type: object
          next_sequence_send:
            format: uint64
            type: string
          timeout: &ref_158
            description: >-
              Timeout defines an execution deadline structure for 04-channel
              handlers.

              This includes packet lifecycle handlers as well as the upgrade
              handshake handlers.

              A valid Timeout contains either one or both of a timestamp and
              block height (sequence).
            properties: *ref_157
            type: object
        type: object
    title: >-
      QueryUpgradeResponse is the response type for the QueryUpgradeResponse RPC
      method
    type: object
  ibc.core.channel.v1.State:
    default: STATE_UNINITIALIZED_UNSPECIFIED
    description: |-
      State defines if a channel is in one of the following states:
      CLOSED, INIT, TRYOPEN, OPEN, FLUSHING, FLUSHCOMPLETE or UNINITIALIZED.

       - STATE_UNINITIALIZED_UNSPECIFIED: Default State
       - STATE_INIT: A channel has just started the opening handshake.
       - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
       - STATE_OPEN: A channel has completed the handshake. Open channels are
      ready to send and receive packets.
       - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
      packets.
       - STATE_FLUSHING: A channel has just accepted the upgrade handshake attempt and is flushing in-flight packets.
       - STATE_FLUSHCOMPLETE: A channel has just completed flushing any in-flight packets.
    enum: *ref_148
    type: string
  ibc.core.channel.v1.Timeout: *ref_158
  ibc.core.channel.v1.Upgrade: *ref_159
  ibc.core.channel.v1.UpgradeFields: *ref_160
  ibc.core.client.v1.ConsensusStateWithHeight: &ref_165
    description: >-
      ConsensusStateWithHeight defines a consensus state with an additional
      height

      field.
    properties:
      consensus_state:
        properties: *ref_3
        type: object
        title: consensus state
      height:
        title: consensus state height
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
    type: object
  ibc.core.client.v1.Height: &ref_164
    description: |-
      Normally the RevisionHeight is incremented at each height while keeping
      RevisionNumber the same. However some consensus algorithms may choose to
      reset the height in certain conditions e.g. hard forks, state-machine
      breaking changes In these cases, the RevisionNumber is incremented so that
      height continues to be monitonically increasing even as the RevisionHeight
      gets reset
    properties: *ref_150
    title: >-
      Height is a monotonically increasing data type

      that can be compared against another Height for the purposes of updating
      and

      freezing clients
    type: object
  ibc.core.client.v1.IdentifiedClientState: &ref_163
    description: |-
      IdentifiedClientState defines a client state with an additional client
      identifier field.
    properties: *ref_161
    type: object
  ibc.core.client.v1.Params:
    description: Params defines the set of IBC light client parameters.
    properties: &ref_162
      allowed_clients:
        description: >-
          allowed_clients defines the list of allowed client state types which
          can be created

          and interacted with. If a client type is removed from the allowed
          clients list, usage

          of this client will be disabled until it is added again to the list.
        items:
          type: string
        type: array
    type: object
  ibc.core.client.v1.QueryClientParamsResponse: &ref_389
    description: >-
      QueryClientParamsResponse is the response type for the Query/ClientParams
      RPC

      method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties: *ref_162
        type: object
    type: object
  ibc.core.client.v1.QueryClientStateResponse: &ref_384
    description: >-
      QueryClientStateResponse is the response type for the Query/ClientState
      RPC

      method. Besides the client state, it includes a proof and the height from

      which the proof was retrieved.
    properties:
      client_state:
        properties: *ref_3
        type: object
        title: client state associated with the request identifier
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        title: height at which the proof was retrieved
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        type: object
    type: object
  ibc.core.client.v1.QueryClientStatesResponse: &ref_383
    description: >-
      QueryClientStatesResponse is the response type for the Query/ClientStates
      RPC

      method.
    properties:
      client_states:
        description: list of stored ClientStates of the chain.
        items: *ref_163
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
        title: pagination response
    type: object
  ibc.core.client.v1.QueryClientStatusResponse: &ref_385
    description: >-
      QueryClientStatusResponse is the response type for the Query/ClientStatus
      RPC

      method. It returns the current status of the IBC client.
    properties:
      status:
        type: string
    type: object
  ibc.core.client.v1.QueryConsensusStateHeightsResponse: &ref_387
    properties:
      consensus_state_heights:
        items: *ref_164
        title: consensus state heights
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
        title: pagination response
    title: |-
      QueryConsensusStateHeightsResponse is the response type for the
      Query/ConsensusStateHeights RPC method
    type: object
  ibc.core.client.v1.QueryConsensusStateResponse: &ref_388
    properties:
      consensus_state:
        properties: *ref_3
        type: object
        title: >-
          consensus state associated with the client identifier at the given
          height
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        title: >-
          Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of
          updating and

          freezing clients
        type: object
    title: >-
      QueryConsensusStateResponse is the response type for the
      Query/ConsensusState

      RPC method
    type: object
  ibc.core.client.v1.QueryConsensusStatesResponse: &ref_386
    properties:
      consensus_states:
        items: *ref_165
        title: consensus states associated with the identifier
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
        title: pagination response
    title: |-
      QueryConsensusStatesResponse is the response type for the
      Query/ConsensusStates RPC method
    type: object
  ibc.core.client.v1.QueryUpgradedClientStateResponse: &ref_390
    description: |-
      QueryUpgradedClientStateResponse is the response type for the
      Query/UpgradedClientState RPC method.
    properties:
      upgraded_client_state:
        properties: *ref_3
        type: object
        title: client state associated with the request identifier
    type: object
  ibc.core.client.v1.QueryUpgradedConsensusStateResponse: &ref_391
    description: |-
      QueryUpgradedConsensusStateResponse is the response type for the
      Query/UpgradedConsensusState RPC method.
    properties:
      upgraded_consensus_state:
        properties: *ref_3
        type: object
        title: Consensus state associated with the request identifier
    type: object
  ibc.core.client.v1.QueryVerifyMembershipRequest: &ref_392
    properties:
      block_delay:
        format: uint64
        title: optional block delay
        type: string
      client_id:
        description: client unique identifier.
        type: string
      merkle_path:
        description: the commitment key path.
        properties: &ref_166
          key_path:
            items:
              type: string
            type: array
        title: >-
          MerklePath is the path used to verify commitment proofs, which can be
          an

          arbitrary structured object (defined by a commitment type).

          MerklePath is represented from root-to-leaf
        type: object
      proof:
        description: the proof to be verified by the client.
        format: byte
        type: string
      proof_height:
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        title: >-
          Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of
          updating and

          freezing clients
        type: object
      time_delay:
        format: uint64
        title: optional time delay
        type: string
      value:
        description: the value which is proven.
        format: byte
        type: string
    title: >-
      QueryVerifyMembershipRequest is the request type for the
      Query/VerifyMembership RPC method
    type: object
  ibc.core.client.v1.QueryVerifyMembershipResponse: &ref_393
    properties:
      success:
        description: boolean indicating success or failure of proof verification.
        type: boolean
    title: >-
      QueryVerifyMembershipResponse is the response type for the
      Query/VerifyMembership RPC method
    type: object
  ibc.core.commitment.v1.MerklePath:
    properties: *ref_166
    title: |-
      MerklePath is the path used to verify commitment proofs, which can be an
      arbitrary structured object (defined by a commitment type).
      MerklePath is represented from root-to-leaf
    type: object
  ibc.core.commitment.v1.MerklePrefix:
    properties: &ref_167
      key_prefix:
        format: byte
        type: string
    title: |-
      MerklePrefix is merkle path prefixed to the key.
      The constructed key from the Path and the key will be append(Path.KeyPath,
      append(Path.KeyPrefix, key...))
    type: object
  ibc.core.connection.v1.ConnectionEnd:
    description: |-
      ConnectionEnd defines a stateful object on a chain connected to another
      separate one.
      NOTE: there must only be 2 defined ConnectionEnds to establish
      a connection between two chains.
    properties: &ref_172
      client_id:
        description: client associated with this connection.
        type: string
      counterparty:
        description: counterparty chain associated with this connection.
        properties: &ref_168
          client_id:
            description: >-
              identifies the client on the counterparty chain associated with a
              given

              connection.
            type: string
          connection_id:
            description: >-
              identifies the connection end on the counterparty chain associated
              with a

              given connection.
            type: string
          prefix:
            description: commitment merkle prefix of the counterparty chain.
            properties: *ref_167
            title: >-
              MerklePrefix is merkle path prefixed to the key.

              The constructed key from the Path and the key will be
              append(Path.KeyPath,

              append(Path.KeyPrefix, key...))
            type: object
        type: object
      delay_period:
        description: >-
          delay period that must pass before a consensus state can be used for

          packet-verification NOTE: delay period logic is only implemented by
          some

          clients.
        format: uint64
        type: string
      state:
        description: current state of the connection end.
        default: STATE_UNINITIALIZED_UNSPECIFIED
        enum: &ref_169
          - STATE_UNINITIALIZED_UNSPECIFIED
          - STATE_INIT
          - STATE_TRYOPEN
          - STATE_OPEN
        type: string
      versions:
        description: >-
          IBC version which can be utilised to determine encodings or protocols
          for

          channels or packets utilising this connection.
        items: &ref_170
          description: >-
            Version defines the versioning scheme used to negotiate the IBC
            verison in

            the connection handshake.
          properties:
            features:
              items:
                type: string
              title: list of features compatible with the specified identifier
              type: array
            identifier:
              title: unique version identifier
              type: string
          type: object
        type: array
    type: object
  ibc.core.connection.v1.Counterparty:
    description: >-
      Counterparty defines the counterparty chain associated with a connection
      end.
    properties: *ref_168
    type: object
  ibc.core.connection.v1.IdentifiedConnection: &ref_173
    description: |-
      IdentifiedConnection defines a connection with additional connection
      identifier field.
    properties:
      client_id:
        description: client associated with this connection.
        type: string
      counterparty:
        description: counterparty chain associated with this connection.
        properties: *ref_168
        type: object
      delay_period:
        description: delay period associated with this connection.
        format: uint64
        type: string
      id:
        description: connection identifier.
        type: string
      state:
        description: current state of the connection end.
        default: STATE_UNINITIALIZED_UNSPECIFIED
        enum: *ref_169
        type: string
      versions:
        items: *ref_170
        title: >-
          IBC version which can be utilised to determine encodings or protocols
          for

          channels or packets utilising this connection
        type: array
    type: object
  ibc.core.connection.v1.Params:
    description: Params defines the set of Connection parameters.
    properties: &ref_171
      max_expected_time_per_block:
        description: >-
          maximum expected time per block (in nanoseconds), used to enforce
          block delay. This parameter should reflect the

          largest amount of time that the chain might reasonably take to produce
          the next block under normal operating

          conditions. A safe choice is 3-5x the expected time per block.
        format: uint64
        type: string
    type: object
  ibc.core.connection.v1.QueryClientConnectionsResponse: &ref_394
    properties:
      connection_paths:
        description: slice of all the connection paths associated with a client.
        items:
          type: string
        type: array
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        title: >-
          Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of
          updating and

          freezing clients
        type: object
    title: |-
      QueryClientConnectionsResponse is the response type for the
      Query/ClientConnections RPC method
    type: object
  ibc.core.connection.v1.QueryConnectionClientStateResponse: &ref_397
    properties:
      identified_client_state:
        description: |-
          IdentifiedClientState defines a client state with an additional client
          identifier field.
        properties: *ref_161
        type: object
        title: client state associated with the channel
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        title: >-
          Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of
          updating and

          freezing clients
        type: object
    title: |-
      QueryConnectionClientStateResponse is the response type for the
      Query/ConnectionClientState RPC method
    type: object
  ibc.core.connection.v1.QueryConnectionConsensusStateResponse: &ref_398
    properties:
      client_id:
        title: client ID associated with the consensus state
        type: string
      consensus_state:
        properties: *ref_3
        type: object
        title: consensus state associated with the channel
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        title: >-
          Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of
          updating and

          freezing clients
        type: object
    title: |-
      QueryConnectionConsensusStateResponse is the response type for the
      Query/ConnectionConsensusState RPC method
    type: object
  ibc.core.connection.v1.QueryConnectionParamsResponse: &ref_399
    description: >-
      QueryConnectionParamsResponse is the response type for the
      Query/ConnectionParams RPC method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties: *ref_171
        type: object
    type: object
  ibc.core.connection.v1.QueryConnectionResponse: &ref_396
    description: >-
      QueryConnectionResponse is the response type for the Query/Connection RPC

      method. Besides the connection end, it includes a proof and the height
      from

      which the proof was retrieved.
    properties:
      connection:
        title: connection associated with the request identifier
        description: >-
          ConnectionEnd defines a stateful object on a chain connected to
          another

          separate one.

          NOTE: there must only be 2 defined ConnectionEnds to establish

          a connection between two chains.
        properties: *ref_172
        type: object
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        title: >-
          Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of
          updating and

          freezing clients
        type: object
    type: object
  ibc.core.connection.v1.QueryConnectionsResponse: &ref_395
    description: >-
      QueryConnectionsResponse is the response type for the Query/Connections
      RPC

      method.
    properties:
      connections:
        description: list of stored connections of the chain.
        items: *ref_173
        type: array
      height:
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
        properties: *ref_150
        title: >-
          Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of
          updating and

          freezing clients
        type: object
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties: *ref_8
        type: object
        title: pagination response
    type: object
  ibc.core.connection.v1.State:
    default: STATE_UNINITIALIZED_UNSPECIFIED
    description: |-
      State defines if a connection is in one of the following states:
      INIT, TRYOPEN, OPEN or UNINITIALIZED.

       - STATE_UNINITIALIZED_UNSPECIFIED: Default State
       - STATE_INIT: A connection end has just started the opening handshake.
       - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty
      chain.
       - STATE_OPEN: A connection end has completed the handshake.
    enum: *ref_169
    type: string
  ibc.core.connection.v1.Version: *ref_170
  kiichain.tokenfactory.v1beta1.DenomAuthorityMetadata: &ref_174
    description: |-
      DenomAuthorityMetadata specifies metadata for addresses that have specific
      capabilities over a token factory denom. Right now there is only one Admin
      permission, but is planned to be extended to the future.
    properties:
      admin:
        title: Can be empty for no admin, or a valid kii address
        type: string
    type: object
  kiichain.tokenfactory.v1beta1.Params:
    description: Params defines the parameters for the tokenfactory module.
    properties: &ref_175
      denom_creation_fee:
        items: *ref_17
        type: array
      denom_creation_gas_consume:
        format: uint64
        title: >-
          if denom_creation_fee is an empty array, then this field is used to
          add

          more gas consumption to the base cost.

          https://github.com/CosmWasm/token-factory/issues/11
        type: string
    type: object
  kiichain.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse: &ref_400
    description: |-
      QueryDenomAuthorityMetadataResponse defines the response structure for the
      DenomAuthorityMetadata gRPC query.
    properties:
      authority_metadata: *ref_174
    type: object
  kiichain.tokenfactory.v1beta1.QueryDenomsFromAdminResponse: &ref_401
    description: |-
      QueryDenomsFromAdminRequest defines the response structure for the
      DenomsFromAdmin gRPC query.
    properties:
      denoms:
        items:
          type: string
        type: array
    type: object
  kiichain.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse: &ref_402
    description: |-
      QueryDenomsFromCreatorRequest defines the response structure for the
      DenomsFromCreator gRPC query.
    properties:
      denoms:
        items:
          type: string
        type: array
    type: object
  kiichain.tokenfactory.v1beta1.QueryParamsResponse: &ref_403
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties: *ref_175
        type: object
    type: object
  ratelimit.v1.Flow: &ref_176
    properties:
      channel_value:
        title: |-
          ChannelValue stores the total supply of the denom at the start of
          the rate limit. This is used as the denominator when checking
          the rate limit threshold
          The ChannelValue is fixed for the duration of the rate limit window
        type: string
      inflow:
        title: |-
          Inflow defines the total amount of inbound transfers for the given
          rate limit in the current window
        type: string
      outflow:
        title: |-
          Outflow defines the total amount of outbound transfers for the given
          rate limit in the current window
        type: string
    type: object
  ratelimit.v1.Path: &ref_177
    properties:
      channel_id:
        type: string
      denom:
        type: string
    title: Path holds the denom and channelID that define the rate limited route
    type: object
  ratelimit.v1.QueryAllBlacklistedDenomsResponse: &ref_203
    properties:
      denoms:
        items:
          type: string
        type: array
    type: object
  ratelimit.v1.QueryAllRateLimitsResponse: &ref_206
    properties:
      rate_limits:
        items: &ref_178
          properties:
            flow: *ref_176
            path: *ref_177
            quota: &ref_179
              properties:
                duration_hours:
                  format: uint64
                  title: >-
                    DurationHours specifies the number of hours before the rate
                    limit

                    is reset (e.g. 24 indicates that the rate limit is reset
                    each day)
                  type: string
                max_percent_recv:
                  title: >-
                    MaxPercentSend defines the threshold for inflows

                    The threshold is defined as a percentage (e.g. 10 indicates
                    10%)
                  type: string
                max_percent_send:
                  title: >-
                    MaxPercentSend defines the threshold for outflows

                    The threshold is defined as a percentage (e.g. 10 indicates
                    10%)
                  type: string
              title: Quota defines the rate limit thresholds for transfer packets
              type: object
          title: |-
            RateLimit stores all the context about a given rate limit, including
            the relevant denom and channel, rate limit thresholds, and current
            progress towards the limits
          type: object
        type: array
    type: object
  ratelimit.v1.QueryAllWhitelistedAddressesResponse: &ref_209
    properties:
      address_pairs:
        items: &ref_180
          properties:
            receiver:
              type: string
            sender:
              type: string
          title: |-
            WhitelistedAddressPair represents a sender-receiver combo that is
            not subject to rate limit restrictions
          type: object
        type: array
    type: object
  ratelimit.v1.QueryRateLimitResponse: &ref_205
    properties:
      rate_limit: *ref_178
    type: object
  ratelimit.v1.QueryRateLimitsByChainIdResponse: &ref_207
    properties:
      rate_limits:
        items: *ref_178
        type: array
    type: object
  ratelimit.v1.QueryRateLimitsByChannelIdResponse: &ref_208
    properties:
      rate_limits:
        items: *ref_178
        type: array
    type: object
  ratelimit.v1.Quota: *ref_179
  ratelimit.v1.RateLimit: *ref_178
  ratelimit.v1.WhitelistedAddressPair: *ref_180
  tendermint.abci.Event: *ref_20
  tendermint.abci.EventAttribute: *ref_181
  tendermint.crypto.PublicKey: *ref_182
  tendermint.p2p.DefaultNodeInfo: *ref_183
  tendermint.p2p.DefaultNodeInfoOther: *ref_184
  tendermint.p2p.ProtocolVersion: *ref_185
  tendermint.types.ABCIParams: *ref_186
  tendermint.types.Block: *ref_187
  tendermint.types.BlockID: *ref_23
  tendermint.types.BlockIDFlag: *ref_188
  tendermint.types.BlockParams: *ref_189
  tendermint.types.Commit: *ref_27
  tendermint.types.CommitSig: *ref_190
  tendermint.types.ConsensusParams:
    description: |-
      ConsensusParams contains consensus critical parameters that determine the
      validity of blocks.
    properties: *ref_191
    type: object
  tendermint.types.Data: *ref_28
  tendermint.types.DuplicateVoteEvidence: *ref_192
  tendermint.types.Evidence: *ref_193
  tendermint.types.EvidenceList: *ref_29
  tendermint.types.EvidenceParams: *ref_194
  tendermint.types.Header: *ref_30
  tendermint.types.LightBlock: *ref_195
  tendermint.types.LightClientAttackEvidence: *ref_196
  tendermint.types.PartSetHeader: *ref_197
  tendermint.types.SignedHeader: *ref_198
  tendermint.types.SignedMsgType: *ref_199
  tendermint.types.Validator: *ref_25
  tendermint.types.ValidatorParams: *ref_200
  tendermint.types.ValidatorSet: *ref_201
  tendermint.types.VersionParams: *ref_202
  tendermint.types.Vote: *ref_22
  tendermint.version.Consensus:
    description: >-
      Consensus captures the consensus rules for processing a block in the
      blockchain,

      including all blockchain data structures and the rules of the
      application's

      state transition machine.
    properties: *ref_26
    type: object
info:
  description: Kiichain REST API
  title: Kiichain - HTTP API Console
  version: v1
paths:
  /Stride-Labs/ibc-rate-limiting/ratelimit/blacklisted_denoms:
    get:
      operationId: AllBlacklistedDenoms
      responses:
        '200':
          description: A successful response.
          schema: *ref_203
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Queries all blacklisted denoms
      tags:
        - Query
  /Stride-Labs/ibc-rate-limiting/ratelimit/ratelimit/{channel_id}/by_denom:
    get:
      operationId: RateLimit
      parameters:
        - in: path
          name: channel_id
          required: true
          type: string
        - in: query
          name: denom
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_205
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        Queries a specific rate limit by channel ID and denom
        Ex:
         - /ratelimit/{channel_id}/by_denom?denom={denom}
      tags:
        - Query
  /Stride-Labs/ibc-rate-limiting/ratelimit/ratelimits:
    get:
      operationId: AllRateLimits
      responses:
        '200':
          description: A successful response.
          schema: *ref_206
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Queries all rate limits
      tags:
        - Query
  /Stride-Labs/ibc-rate-limiting/ratelimit/ratelimits/{chain_id}:
    get:
      operationId: RateLimitsByChainId
      parameters:
        - in: path
          name: chain_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_207
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Queries all the rate limits for a given chain
      tags:
        - Query
  /Stride-Labs/ibc-rate-limiting/ratelimit/ratelimits/{channel_id}:
    get:
      operationId: RateLimitsByChannelId
      parameters:
        - in: path
          name: channel_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_208
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Queries all the rate limits for a given channel ID
      tags:
        - Query
  /Stride-Labs/ibc-rate-limiting/ratelimit/whitelisted_addresses:
    get:
      operationId: AllWhitelistedAddresses
      responses:
        '200':
          description: A successful response.
          schema: *ref_209
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Queries all whitelisted address pairs
      tags:
        - Query
  /cosmos/auth/v1beta1/account_info/{address}:
    get:
      description: 'Since: cosmos-sdk 0.47'
      operationId: AccountInfo
      parameters:
        - description: address is the account address string.
          in: path
          name: address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_210
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: AccountInfo queries account info which is common to all account types.
      tags:
        - Query
  /cosmos/auth/v1beta1/accounts:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.


        Since: cosmos-sdk 0.43
      operationId: Accounts
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_211
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Accounts returns all the existing accounts.
      tags:
        - Query
  /cosmos/auth/v1beta1/accounts/{address}:
    get:
      operationId: Account
      parameters:
        - description: address defines the address to query for.
          in: path
          name: address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_212
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Account returns account details based on address.
      tags:
        - Query
  /cosmos/auth/v1beta1/address_by_id/{id}:
    get:
      description: 'Since: cosmos-sdk 0.46.2'
      operationId: AccountAddressByID
      parameters:
        - description: |-
            Deprecated, use account_id instead

            id is the account number of the address to be queried. This field
            should have been an uint64 (like all account numbers), and will be
            updated to uint64 in a future version of the auth query.
          format: int64
          in: path
          name: id
          required: true
          type: string
        - description: |-
            account_id is the account number of the address to be queried.

            Since: cosmos-sdk 0.47
          format: uint64
          in: query
          name: account_id
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_213
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: AccountAddressByID returns account address based on account number.
      tags:
        - Query
  /cosmos/auth/v1beta1/bech32:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: Bech32Prefix
      responses:
        '200':
          description: A successful response.
          schema: *ref_214
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Bech32Prefix queries bech32Prefix
      tags:
        - Query
  /cosmos/auth/v1beta1/bech32/{address_bytes}:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: AddressBytesToString
      parameters:
        - format: byte
          in: path
          name: address_bytes
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_215
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: AddressBytesToString converts Account Address bytes to string
      tags:
        - Query
  /cosmos/auth/v1beta1/bech32/{address_string}:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: AddressStringToBytes
      parameters:
        - in: path
          name: address_string
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_216
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: AddressStringToBytes converts Address string to bytes
      tags:
        - Query
  /cosmos/auth/v1beta1/module_accounts:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: ModuleAccounts
      responses:
        '200':
          description: A successful response.
          schema: *ref_217
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: ModuleAccounts returns all the existing module accounts.
      tags:
        - Query
  /cosmos/auth/v1beta1/module_accounts/{name}:
    get:
      operationId: ModuleAccountByName
      parameters:
        - in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_218
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: ModuleAccountByName returns the module account info by module name
      tags:
        - Query
  /cosmos/auth/v1beta1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema: *ref_219
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Params queries all parameters.
      tags:
        - Query
  /cosmos/authz/v1beta1/grants:
    get:
      operationId: Grants
      parameters:
        - in: query
          name: granter
          required: false
          type: string
        - in: query
          name: grantee
          required: false
          type: string
        - description: >-
            Optional, msg_type_url, when set, will query only grants matching
            given msg type.
          in: query
          name: msg_type_url
          required: false
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_220
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Returns list of `Authorization`, granted to the grantee by the granter.
      tags:
        - Query
  /cosmos/authz/v1beta1/grants/grantee/{grantee}:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: GranteeGrants
      parameters:
        - in: path
          name: grantee
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_221
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: GranteeGrants returns a list of `GrantAuthorization` by grantee.
      tags:
        - Query
  /cosmos/authz/v1beta1/grants/granter/{granter}:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: GranterGrants
      parameters:
        - in: path
          name: granter
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_222
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: GranterGrants returns list of `GrantAuthorization`, granted by granter.
      tags:
        - Query
  /cosmos/bank/v1beta1/balances/{address}:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: AllBalances
      parameters:
        - description: address is the address to query balances for.
          in: path
          name: address
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
        - description: >-
            resolve_denom is the flag to resolve the denom into a human-readable
            form from the metadata.


            Since: cosmos-sdk 0.50
          in: query
          name: resolve_denom
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_223
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: AllBalances queries the balance of all coins for a single account.
      tags:
        - Query
  /cosmos/bank/v1beta1/balances/{address}/by_denom:
    get:
      operationId: Balance
      parameters:
        - description: address is the address to query balances for.
          in: path
          name: address
          required: true
          type: string
        - description: denom is the coin denom to query balances for.
          in: query
          name: denom
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_224
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Balance queries the balance of a single coin for a single account.
      tags:
        - Query
  /cosmos/bank/v1beta1/denom_owners/{denom}:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.


        Since: cosmos-sdk 0.46
      operationId: DenomOwners
      parameters:
        - description: >-
            denom defines the coin denomination to query all account holders
            for.
          in: path
          name: denom
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_225
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        DenomOwners queries for all account addresses that own a particular
        token

        denomination.
      tags:
        - Query
  /cosmos/bank/v1beta1/denom_owners_by_query:
    get:
      description: 'Since: cosmos-sdk 0.50.3'
      operationId: DenomOwnersByQuery
      parameters:
        - description: >-
            denom defines the coin denomination to query all account holders
            for.
          in: query
          name: denom
          required: false
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_226
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        DenomOwnersByQuery queries for all account addresses that own a
        particular token

        denomination.
      tags:
        - Query
  /cosmos/bank/v1beta1/denoms_metadata:
    get:
      operationId: DenomsMetadata
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_227
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        DenomsMetadata queries the client metadata for all registered coin
        denominations.
      tags:
        - Query
  /cosmos/bank/v1beta1/denoms_metadata/{denom}:
    get:
      operationId: DenomMetadata
      parameters:
        - description: denom is the coin denom to query the metadata for.
          in: path
          name: denom
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_228
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: DenomMetadata queries the client metadata of a given coin denomination.
      tags:
        - Query
  /cosmos/bank/v1beta1/denoms_metadata_by_query_string:
    get:
      operationId: DenomMetadataByQueryString
      parameters:
        - description: denom is the coin denom to query the metadata for.
          in: query
          name: denom
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_229
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        DenomMetadataByQueryString queries the client metadata of a given coin
        denomination.
      tags:
        - Query
  /cosmos/bank/v1beta1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema: *ref_230
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Params queries the parameters of x/bank module.
      tags:
        - Query
  /cosmos/bank/v1beta1/send_enabled:
    get:
      description: >-
        This query only returns denominations that have specific SendEnabled
        settings.

        Any denomination that does not have a specific setting will use the
        default

        params.default_send_enabled, and will not be returned by this query.


        Since: cosmos-sdk 0.47
      operationId: SendEnabled
      parameters:
        - collectionFormat: multi
          description: >-
            denoms is the specific denoms you want look up. Leave empty to get
            all entries.
          in: query
          items:
            type: string
          name: denoms
          required: false
          type: array
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_231
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: SendEnabled queries for SendEnabled entries.
      tags:
        - Query
  /cosmos/bank/v1beta1/spendable_balances/{address}:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.


        Since: cosmos-sdk 0.46
      operationId: SpendableBalances
      parameters:
        - description: address is the address to query spendable balances for.
          in: path
          name: address
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_232
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        SpendableBalances queries the spendable balance of all coins for a
        single

        account.
      tags:
        - Query
  /cosmos/bank/v1beta1/spendable_balances/{address}/by_denom:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.


        Since: cosmos-sdk 0.47
      operationId: SpendableBalanceByDenom
      parameters:
        - description: address is the address to query balances for.
          in: path
          name: address
          required: true
          type: string
        - description: denom is the coin denom to query balances for.
          in: query
          name: denom
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_233
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        SpendableBalanceByDenom queries the spendable balance of a single denom
        for

        a single account.
      tags:
        - Query
  /cosmos/bank/v1beta1/supply:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: TotalSupply
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_234
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: TotalSupply queries the total supply of all coins.
      tags:
        - Query
  /cosmos/bank/v1beta1/supply/by_denom:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: SupplyOf
      parameters:
        - description: denom is the coin denom to query balances for.
          in: query
          name: denom
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_235
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: SupplyOf queries the supply of a single coin.
      tags:
        - Query
  /cosmos/base/node/v1beta1/config:
    get:
      operationId: Config
      responses:
        '200':
          description: A successful response.
          schema: *ref_236
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Config queries for the operator configuration.
      tags:
        - Service
  /cosmos/base/node/v1beta1/status:
    get:
      operationId: Status
      responses:
        '200':
          description: A successful response.
          schema: *ref_237
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Status queries for the node status.
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/abci_query:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: ABCIQuery
      parameters:
        - format: byte
          in: query
          name: data
          required: false
          type: string
        - in: query
          name: path
          required: false
          type: string
        - format: int64
          in: query
          name: height
          required: false
          type: string
        - in: query
          name: prove
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_238
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        ABCIQuery defines a query handler that supports ABCI queries directly to
        the

        application, bypassing Tendermint completely. The ABCI query must
        contain

        a valid and supported path, including app, custom, p2p, and store.
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/blocks/latest:
    get:
      operationId: GetLatestBlock
      responses:
        '200':
          description: A successful response.
          schema: *ref_239
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: GetLatestBlock returns the latest block.
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/blocks/{height}:
    get:
      operationId: GetBlockByHeight
      parameters:
        - format: int64
          in: path
          name: height
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_240
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: GetBlockByHeight queries block for given height.
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/node_info:
    get:
      operationId: GetNodeInfo
      responses:
        '200':
          description: A successful response.
          schema: *ref_241
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: GetNodeInfo queries the current node info.
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/syncing:
    get:
      operationId: GetSyncing
      responses:
        '200':
          description: A successful response.
          schema: *ref_242
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: GetSyncing queries node syncing.
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/validatorsets/latest:
    get:
      operationId: GetLatestValidatorSet
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_243
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: GetLatestValidatorSet queries latest validator-set.
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/validatorsets/{height}:
    get:
      operationId: GetValidatorSetByHeight
      parameters:
        - format: int64
          in: path
          name: height
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_244
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: GetValidatorSetByHeight queries validator-set at a given height.
      tags:
        - Service
  /cosmos/consensus/v1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema: *ref_245
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Params queries the parameters of x/consensus module.
      tags:
        - Query
  /cosmos/distribution/v1beta1/community_pool:
    get:
      operationId: CommunityPool
      responses:
        '200':
          description: A successful response.
          schema: *ref_246
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: CommunityPool queries the community pool coins.
      tags:
        - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards:
    get:
      operationId: DelegationTotalRewards
      parameters:
        - description: delegator_address defines the delegator address to query for.
          in: path
          name: delegator_address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_247
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        DelegationTotalRewards queries the total rewards accrued by each
        validator.
      tags:
        - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}:
    get:
      operationId: DelegationRewards
      parameters:
        - description: delegator_address defines the delegator address to query for.
          in: path
          name: delegator_address
          required: true
          type: string
        - description: validator_address defines the validator address to query for.
          in: path
          name: validator_address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_248
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: DelegationRewards queries the total rewards accrued by a delegation.
      tags:
        - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/validators:
    get:
      operationId: DelegatorValidators
      parameters:
        - description: delegator_address defines the delegator address to query for.
          in: path
          name: delegator_address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_249
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: DelegatorValidators queries the validators of a delegator.
      tags:
        - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address:
    get:
      operationId: DelegatorWithdrawAddress
      parameters:
        - description: delegator_address defines the delegator address to query for.
          in: path
          name: delegator_address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_250
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: DelegatorWithdrawAddress queries withdraw address of a delegator.
      tags:
        - Query
  /cosmos/distribution/v1beta1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema: *ref_251
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Params queries params of the distribution module.
      tags:
        - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}:
    get:
      operationId: ValidatorDistributionInfo
      parameters:
        - description: validator_address defines the validator address to query for.
          in: path
          name: validator_address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_252
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        ValidatorDistributionInfo queries validator commission and
        self-delegation rewards for validator
      tags:
        - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/commission:
    get:
      operationId: ValidatorCommission
      parameters:
        - description: validator_address defines the validator address to query for.
          in: path
          name: validator_address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_253
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: ValidatorCommission queries accumulated commission for a validator.
      tags:
        - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards:
    get:
      operationId: ValidatorOutstandingRewards
      parameters:
        - description: validator_address defines the validator address to query for.
          in: path
          name: validator_address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_254
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: ValidatorOutstandingRewards queries rewards of a validator address.
      tags:
        - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/slashes:
    get:
      operationId: ValidatorSlashes
      parameters:
        - description: validator_address defines the validator address to query for.
          in: path
          name: validator_address
          required: true
          type: string
        - description: >-
            starting_height defines the optional starting height to query the
            slashes.
          format: uint64
          in: query
          name: starting_height
          required: false
          type: string
        - description: >-
            starting_height defines the optional ending height to query the
            slashes.
          format: uint64
          in: query
          name: ending_height
          required: false
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_255
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: ValidatorSlashes queries slash events of a validator.
      tags:
        - Query
  /cosmos/evidence/v1beta1/evidence:
    get:
      operationId: AllEvidence
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_256
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: AllEvidence queries all evidence.
      tags:
        - Query
  /cosmos/evidence/v1beta1/evidence/{hash}:
    get:
      operationId: Evidence
      parameters:
        - description: |-
            hash defines the evidence hash of the requested evidence.

            Since: cosmos-sdk 0.47
          in: path
          name: hash
          required: true
          type: string
        - description: |-
            evidence_hash defines the hash of the requested evidence.
            Deprecated: Use hash, a HEX encoded string, instead.
          format: byte
          in: query
          name: evidence_hash
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_257
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Evidence queries evidence based on evidence hash.
      tags:
        - Query
  /cosmos/evm/erc20/v1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema: *ref_258
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Params retrieves the erc20 module params
      tags:
        - Query
  /cosmos/evm/erc20/v1/token_pairs:
    get:
      operationId: TokenPairs
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_259
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: TokenPairs retrieves registered token pairs
      tags:
        - Query
  /cosmos/evm/erc20/v1/token_pairs/{token}:
    get:
      operationId: TokenPair
      parameters:
        - description: >-
            token identifier can be either the hex contract address of the ERC20
            or the

            Cosmos base denomination
          in: path
          name: token
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_260
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: TokenPair retrieves a registered token pair
      tags:
        - Query
  /cosmos/evm/feemarket/v1/base_fee:
    get:
      operationId: BaseFee
      responses:
        '200':
          description: A successful response.
          schema: *ref_261
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: BaseFee queries the base fee of the parent block of the current block.
      tags:
        - Query
  /cosmos/evm/feemarket/v1/block_gas:
    get:
      operationId: BlockGas
      responses:
        '200':
          description: A successful response.
          schema: *ref_262
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: BlockGas queries the gas used at a given block height
      tags:
        - Query
  /cosmos/evm/feemarket/v1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema: *ref_263
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Params queries the parameters of x/feemarket module.
      tags:
        - Query
  /cosmos/evm/vm/v1/account/{address}:
    get:
      operationId: Account
      parameters:
        - description: address is the ethereum hex address to query the account for.
          in: path
          name: address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_264
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Account queries an Ethereum account.
      tags:
        - Query
  /cosmos/evm/vm/v1/balances/{address}:
    get:
      operationId: Balance
      parameters:
        - description: address is the ethereum hex address to query the balance for.
          in: path
          name: address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_265
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        Balance queries the balance of a the EVM denomination for a single
        account.
      tags:
        - Query
  /cosmos/evm/vm/v1/base_fee:
    get:
      operationId: BaseFee
      responses:
        '200':
          description: A successful response.
          schema: *ref_266
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        BaseFee queries the base fee of the parent block of the current block,

        it's similar to feemarket module's method, but also checks london
        hardfork

        status.
      tags:
        - Query
  /cosmos/evm/vm/v1/codes/{address}:
    get:
      operationId: Code
      parameters:
        - description: address is the ethereum hex address to query the code for.
          in: path
          name: address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_267
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Code queries the balance of all coins for a single account.
      tags:
        - Query
  /cosmos/evm/vm/v1/config:
    get:
      operationId: Config
      responses:
        '200':
          description: A successful response.
          schema: *ref_268
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Config queries the EVM configuration
      tags:
        - Query
  /cosmos/evm/vm/v1/cosmos_account/{address}:
    get:
      operationId: CosmosAccount
      parameters:
        - description: address is the ethereum hex address to query the account for.
          in: path
          name: address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_269
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: CosmosAccount queries an Ethereum account's Cosmos Address.
      tags:
        - Query
  /cosmos/evm/vm/v1/estimate_gas:
    get:
      operationId: EstimateGas
      parameters:
        - description: args uses the same json format as the json rpc api.
          format: byte
          in: query
          name: args
          required: false
          type: string
        - description: gas_cap defines the default gas cap to be used.
          format: uint64
          in: query
          name: gas_cap
          required: false
          type: string
        - description: proposer_address of the requested block in hex format.
          format: byte
          in: query
          name: proposer_address
          required: false
          type: string
        - description: >-
            chain_id is the eip155 chain id parsed from the requested block
            header.
          format: int64
          in: query
          name: chain_id
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_270
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: EstimateGas implements the `eth_estimateGas` rpc api
      tags:
        - Query
  /cosmos/evm/vm/v1/eth_call:
    get:
      operationId: EthCall
      parameters:
        - description: args uses the same json format as the json rpc api.
          format: byte
          in: query
          name: args
          required: false
          type: string
        - description: gas_cap defines the default gas cap to be used.
          format: uint64
          in: query
          name: gas_cap
          required: false
          type: string
        - description: proposer_address of the requested block in hex format.
          format: byte
          in: query
          name: proposer_address
          required: false
          type: string
        - description: >-
            chain_id is the eip155 chain id parsed from the requested block
            header.
          format: int64
          in: query
          name: chain_id
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_271
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: EthCall implements the `eth_call` rpc api
      tags:
        - Query
  /cosmos/evm/vm/v1/min_gas_price:
    get:
      operationId: GlobalMinGasPrice
      responses:
        '200':
          description: A successful response.
          schema: *ref_272
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        GlobalMinGasPrice queries the MinGasPrice
        it's similar to feemarket module's method,
        but makes the conversion to 18 decimals
        when the evm denom is represented with a different precision.
      tags:
        - Query
  /cosmos/evm/vm/v1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema: *ref_273
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Params queries the parameters of x/vm module.
      tags:
        - Query
  /cosmos/evm/vm/v1/storage/{address}/{key}:
    get:
      operationId: Storage
      parameters:
        - description: address is the ethereum hex address to query the storage state for.
          in: path
          name: address
          required: true
          type: string
        - description: key defines the key of the storage state
          in: path
          name: key
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_274
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Storage queries the balance of all coins for a single account.
      tags:
        - Query
  /cosmos/evm/vm/v1/trace_block:
    get:
      operationId: TraceBlock
      parameters:
        - description: tracer is a custom javascript tracer.
          in: query
          name: trace_config.tracer
          required: false
          type: string
        - description: >-
            timeout overrides the default timeout of 5 seconds for
            JavaScript-based

            tracing calls.
          in: query
          name: trace_config.timeout
          required: false
          type: string
        - description: >-
            reexec defines the number of blocks the tracer is willing to go
            back.
          format: uint64
          in: query
          name: trace_config.reexec
          required: false
          type: string
        - description: disable_stack switches stack capture.
          in: query
          name: trace_config.disable_stack
          required: false
          type: boolean
        - description: disable_storage switches storage capture.
          in: query
          name: trace_config.disable_storage
          required: false
          type: boolean
        - description: debug can be used to print output during capture end.
          in: query
          name: trace_config.debug
          required: false
          type: boolean
        - description: >-
            limit defines the maximum length of output, but zero means
            unlimited.
          format: int32
          in: query
          name: trace_config.limit
          required: false
          type: integer
        - description: homestead_block switch (nil no fork, 0 = already homestead).
          in: query
          name: trace_config.overrides.homestead_block
          required: false
          type: string
        - description: >-
            dao_fork_block corresponds to TheDAO hard-fork switch block (nil no
            fork).
          in: query
          name: trace_config.overrides.dao_fork_block
          required: false
          type: string
        - description: >-
            dao_fork_support defines whether the nodes supports or opposes the
            DAO

            hard-fork.
          in: query
          name: trace_config.overrides.dao_fork_support
          required: false
          type: boolean
        - description: >-
            eip150_block: EIP150 implements the Gas price changes

            (https://github.com/ethereum/EIPs/issues/150) EIP150 HF block (nil
            no fork).
          in: query
          name: trace_config.overrides.eip150_block
          required: false
          type: string
        - description: >-
            eip150_hash: EIP150 HF hash (needed for header only clients as only
            gas

            pricing changed).
          in: query
          name: trace_config.overrides.eip150_hash
          required: false
          type: string
        - description: 'eip155_block: EIP155Block HF block.'
          in: query
          name: trace_config.overrides.eip155_block
          required: false
          type: string
        - description: 'eip158_block: EIP158 HF block.'
          in: query
          name: trace_config.overrides.eip158_block
          required: false
          type: string
        - description: |-
            byzantium_block: Byzantium switch block (nil no fork, 0 = already on
            byzantium).
          in: query
          name: trace_config.overrides.byzantium_block
          required: false
          type: string
        - description: >-
            constantinople_block: Constantinople switch block (nil no fork, 0 =
            already

            activated).
          in: query
          name: trace_config.overrides.constantinople_block
          required: false
          type: string
        - description: >-
            petersburg_block: Petersburg switch block (nil same as
            Constantinople).
          in: query
          name: trace_config.overrides.petersburg_block
          required: false
          type: string
        - description: |-
            istanbul_block: Istanbul switch block (nil no fork, 0 = already on
            istanbul).
          in: query
          name: trace_config.overrides.istanbul_block
          required: false
          type: string
        - description: >-
            muir_glacier_block: Eip-2384 (bomb delay) switch block (nil no fork,
            0 =

            already activated).
          in: query
          name: trace_config.overrides.muir_glacier_block
          required: false
          type: string
        - description: >-
            berlin_block: Berlin switch block (nil = no fork, 0 = already on
            berlin).
          in: query
          name: trace_config.overrides.berlin_block
          required: false
          type: string
        - description: >-
            london_block: London switch block (nil = no fork, 0 = already on
            london).
          in: query
          name: trace_config.overrides.london_block
          required: false
          type: string
        - description: >-
            arrow_glacier_block: Eip-4345 (bomb delay) switch block (nil = no
            fork, 0 =

            already activated).
          in: query
          name: trace_config.overrides.arrow_glacier_block
          required: false
          type: string
        - description: >-
            gray_glacier_block: EIP-5133 (bomb delay) switch block (nil = no
            fork, 0 =

            already activated).
          in: query
          name: trace_config.overrides.gray_glacier_block
          required: false
          type: string
        - description: >-
            merge_netsplit_block: Virtual fork after The Merge to use as a
            network

            splitter.
          in: query
          name: trace_config.overrides.merge_netsplit_block
          required: false
          type: string
        - description: >-
            shanghai_block switch block (nil = no fork, 0 = already on
            shanghai).
          in: query
          name: trace_config.overrides.shanghai_block
          required: false
          type: string
        - description: cancun_block switch block (nil = no fork, 0 = already on cancun).
          in: query
          name: trace_config.overrides.cancun_block
          required: false
          type: string
        - description: chain_id is the id of the chain (EIP-155).
          format: uint64
          in: query
          name: trace_config.overrides.chain_id
          required: false
          type: string
        - description: denom is the denomination used on the EVM.
          in: query
          name: trace_config.overrides.denom
          required: false
          type: string
        - description: >-
            decimals is the real decimal precision of the denomination used on
            the EVM.
          format: uint64
          in: query
          name: trace_config.overrides.decimals
          required: false
          type: string
        - description: enable_memory switches memory capture.
          in: query
          name: trace_config.enable_memory
          required: false
          type: boolean
        - description: enable_return_data switches the capture of return data.
          in: query
          name: trace_config.enable_return_data
          required: false
          type: boolean
        - description: tracer_json_config configures the tracer using a JSON string.
          in: query
          name: trace_config.tracer_json_config
          required: false
          type: string
        - description: block_number of the traced block.
          format: int64
          in: query
          name: block_number
          required: false
          type: string
        - description: block_hash (hex) of the traced block.
          in: query
          name: block_hash
          required: false
          type: string
        - description: block_time of the traced block.
          format: date-time
          in: query
          name: block_time
          required: false
          type: string
        - description: proposer_address is the address of the requested block.
          format: byte
          in: query
          name: proposer_address
          required: false
          type: string
        - description: >-
            chain_id is the eip155 chain id parsed from the requested block
            header.
          format: int64
          in: query
          name: chain_id
          required: false
          type: string
        - description: block_max_gas of the traced block.
          format: int64
          in: query
          name: block_max_gas
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_275
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        TraceBlock implements the `debug_traceBlockByNumber` and
        `debug_traceBlockByHash` rpc api
      tags:
        - Query
  /cosmos/evm/vm/v1/trace_tx:
    get:
      operationId: TraceTx
      parameters:
        - description: >-
            A URL/resource name that uniquely identifies the type of the
            serialized

            protocol buffer message. This string must contain at least

            one "/" character. The last segment of the URL's path must represent

            the fully qualified name of the type (as in

            `path/google.protobuf.Duration`). The name should be in a canonical
            form

            (e.g., leading "." is not accepted).


            In practice, teams usually precompile into the binary all types that
            they

            expect it to use in the context of Any. However, for URLs which use
            the

            scheme `http`, `https`, or no scheme, one can optionally set up a
            type

            server that maps type URLs to message definitions as follows:


            * If no scheme is provided, `https` is assumed.

            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official

            protobuf release, and it is not used for type URLs beginning with

            type.googleapis.com.


            Schemes other than `http`, `https` (or the empty scheme) might be

            used with implementation specific semantics.
          in: query
          name: msg.data.type_url
          required: false
          type: string
        - description: >-
            Must be a valid serialized protocol buffer of the above specified
            type.
          format: byte
          in: query
          name: msg.data.value
          required: false
          type: string
        - description: size is the encoded storage size of the transaction (DEPRECATED).
          format: double
          in: query
          name: msg.size
          required: false
          type: number
        - description: hash of the transaction in hex format.
          in: query
          name: msg.hash
          required: false
          type: string
        - description: >-
            from is the ethereum signer address in hex format. This address
            value is

            checked against the address derived from the signature (V, R, S)
            using the

            secp256k1 elliptic curve.
          in: query
          name: msg.from
          required: false
          type: string
        - description: tracer is a custom javascript tracer.
          in: query
          name: trace_config.tracer
          required: false
          type: string
        - description: >-
            timeout overrides the default timeout of 5 seconds for
            JavaScript-based

            tracing calls.
          in: query
          name: trace_config.timeout
          required: false
          type: string
        - description: >-
            reexec defines the number of blocks the tracer is willing to go
            back.
          format: uint64
          in: query
          name: trace_config.reexec
          required: false
          type: string
        - description: disable_stack switches stack capture.
          in: query
          name: trace_config.disable_stack
          required: false
          type: boolean
        - description: disable_storage switches storage capture.
          in: query
          name: trace_config.disable_storage
          required: false
          type: boolean
        - description: debug can be used to print output during capture end.
          in: query
          name: trace_config.debug
          required: false
          type: boolean
        - description: >-
            limit defines the maximum length of output, but zero means
            unlimited.
          format: int32
          in: query
          name: trace_config.limit
          required: false
          type: integer
        - description: homestead_block switch (nil no fork, 0 = already homestead).
          in: query
          name: trace_config.overrides.homestead_block
          required: false
          type: string
        - description: >-
            dao_fork_block corresponds to TheDAO hard-fork switch block (nil no
            fork).
          in: query
          name: trace_config.overrides.dao_fork_block
          required: false
          type: string
        - description: >-
            dao_fork_support defines whether the nodes supports or opposes the
            DAO

            hard-fork.
          in: query
          name: trace_config.overrides.dao_fork_support
          required: false
          type: boolean
        - description: >-
            eip150_block: EIP150 implements the Gas price changes

            (https://github.com/ethereum/EIPs/issues/150) EIP150 HF block (nil
            no fork).
          in: query
          name: trace_config.overrides.eip150_block
          required: false
          type: string
        - description: >-
            eip150_hash: EIP150 HF hash (needed for header only clients as only
            gas

            pricing changed).
          in: query
          name: trace_config.overrides.eip150_hash
          required: false
          type: string
        - description: 'eip155_block: EIP155Block HF block.'
          in: query
          name: trace_config.overrides.eip155_block
          required: false
          type: string
        - description: 'eip158_block: EIP158 HF block.'
          in: query
          name: trace_config.overrides.eip158_block
          required: false
          type: string
        - description: |-
            byzantium_block: Byzantium switch block (nil no fork, 0 = already on
            byzantium).
          in: query
          name: trace_config.overrides.byzantium_block
          required: false
          type: string
        - description: >-
            constantinople_block: Constantinople switch block (nil no fork, 0 =
            already

            activated).
          in: query
          name: trace_config.overrides.constantinople_block
          required: false
          type: string
        - description: >-
            petersburg_block: Petersburg switch block (nil same as
            Constantinople).
          in: query
          name: trace_config.overrides.petersburg_block
          required: false
          type: string
        - description: |-
            istanbul_block: Istanbul switch block (nil no fork, 0 = already on
            istanbul).
          in: query
          name: trace_config.overrides.istanbul_block
          required: false
          type: string
        - description: >-
            muir_glacier_block: Eip-2384 (bomb delay) switch block (nil no fork,
            0 =

            already activated).
          in: query
          name: trace_config.overrides.muir_glacier_block
          required: false
          type: string
        - description: >-
            berlin_block: Berlin switch block (nil = no fork, 0 = already on
            berlin).
          in: query
          name: trace_config.overrides.berlin_block
          required: false
          type: string
        - description: >-
            london_block: London switch block (nil = no fork, 0 = already on
            london).
          in: query
          name: trace_config.overrides.london_block
          required: false
          type: string
        - description: >-
            arrow_glacier_block: Eip-4345 (bomb delay) switch block (nil = no
            fork, 0 =

            already activated).
          in: query
          name: trace_config.overrides.arrow_glacier_block
          required: false
          type: string
        - description: >-
            gray_glacier_block: EIP-5133 (bomb delay) switch block (nil = no
            fork, 0 =

            already activated).
          in: query
          name: trace_config.overrides.gray_glacier_block
          required: false
          type: string
        - description: >-
            merge_netsplit_block: Virtual fork after The Merge to use as a
            network

            splitter.
          in: query
          name: trace_config.overrides.merge_netsplit_block
          required: false
          type: string
        - description: >-
            shanghai_block switch block (nil = no fork, 0 = already on
            shanghai).
          in: query
          name: trace_config.overrides.shanghai_block
          required: false
          type: string
        - description: cancun_block switch block (nil = no fork, 0 = already on cancun).
          in: query
          name: trace_config.overrides.cancun_block
          required: false
          type: string
        - description: chain_id is the id of the chain (EIP-155).
          format: uint64
          in: query
          name: trace_config.overrides.chain_id
          required: false
          type: string
        - description: denom is the denomination used on the EVM.
          in: query
          name: trace_config.overrides.denom
          required: false
          type: string
        - description: >-
            decimals is the real decimal precision of the denomination used on
            the EVM.
          format: uint64
          in: query
          name: trace_config.overrides.decimals
          required: false
          type: string
        - description: enable_memory switches memory capture.
          in: query
          name: trace_config.enable_memory
          required: false
          type: boolean
        - description: enable_return_data switches the capture of return data.
          in: query
          name: trace_config.enable_return_data
          required: false
          type: boolean
        - description: tracer_json_config configures the tracer using a JSON string.
          in: query
          name: trace_config.tracer_json_config
          required: false
          type: string
        - description: block_number of requested transaction.
          format: int64
          in: query
          name: block_number
          required: false
          type: string
        - description: block_hash of requested transaction.
          in: query
          name: block_hash
          required: false
          type: string
        - description: block_time of requested transaction.
          format: date-time
          in: query
          name: block_time
          required: false
          type: string
        - description: proposer_address is the proposer of the requested block.
          format: byte
          in: query
          name: proposer_address
          required: false
          type: string
        - description: >-
            chain_id is the eip155 chain id parsed from the requested block
            header.
          format: int64
          in: query
          name: chain_id
          required: false
          type: string
        - description: block_max_gas of the block of the requested transaction.
          format: int64
          in: query
          name: block_max_gas
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_276
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: TraceTx implements the `debug_traceTransaction` rpc api
      tags:
        - Query
  /cosmos/evm/vm/v1/validator_account/{cons_address}:
    get:
      operationId: ValidatorAccount
      parameters:
        - description: cons_address is the validator cons address to query the account for.
          in: path
          name: cons_address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_277
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        ValidatorAccount queries an Ethereum account's from a validator
        consensus

        Address.
      tags:
        - Query
  /cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}:
    get:
      operationId: Allowance
      parameters:
        - description: >-
            granter is the address of the user granting an allowance of their
            funds.
          in: path
          name: granter
          required: true
          type: string
        - description: >-
            grantee is the address of the user being granted an allowance of
            another user's funds.
          in: path
          name: grantee
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_278
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Allowance returns granted allwance to the grantee by the granter.
      tags:
        - Query
  /cosmos/feegrant/v1beta1/allowances/{grantee}:
    get:
      operationId: Allowances
      parameters:
        - in: path
          name: grantee
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_279
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Allowances returns all the grants for the given grantee address.
      tags:
        - Query
  /cosmos/feegrant/v1beta1/issued/{granter}:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: AllowancesByGranter
      parameters:
        - in: path
          name: granter
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_280
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: AllowancesByGranter returns all the grants given by an address
      tags:
        - Query
  /cosmos/gov/v1/constitution:
    get:
      operationId: Constitution
      responses:
        '200':
          description: A successful response.
          schema: *ref_281
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Constitution queries the chain's constitution.
      tags:
        - Query
  /cosmos/gov/v1/params/{params_type}:
    get:
      operationId: Params
      parameters:
        - description: >-
            params_type defines which parameters to query for, can be one of
            "voting",

            "tallying" or "deposit".
          in: path
          name: params_type
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_282
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Params queries all parameters of the gov module.
      tags:
        - Query
  /cosmos/gov/v1/proposals:
    get:
      operationId: Proposals
      parameters:
        - default: PROPOSAL_STATUS_UNSPECIFIED
          description: |-
            proposal_status defines the status of the proposals.

             - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
             - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
            period.
             - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
            period.
             - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
            passed.
             - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
            been rejected.
             - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
            failed.
          enum:
            - PROPOSAL_STATUS_UNSPECIFIED
            - PROPOSAL_STATUS_DEPOSIT_PERIOD
            - PROPOSAL_STATUS_VOTING_PERIOD
            - PROPOSAL_STATUS_PASSED
            - PROPOSAL_STATUS_REJECTED
            - PROPOSAL_STATUS_FAILED
          in: query
          name: proposal_status
          required: false
          type: string
        - description: voter defines the voter address for the proposals.
          in: query
          name: voter
          required: false
          type: string
        - description: depositor defines the deposit addresses from the proposals.
          in: query
          name: depositor
          required: false
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_283
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Proposals queries all proposals based on given status.
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}:
    get:
      operationId: Proposal
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          format: uint64
          in: path
          name: proposal_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_284
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Proposal queries proposal details based on ProposalID.
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}/deposits:
    get:
      operationId: Deposits
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          format: uint64
          in: path
          name: proposal_id
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_285
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Deposits queries all deposits of a single proposal.
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}/deposits/{depositor}:
    get:
      operationId: Deposit
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          format: uint64
          in: path
          name: proposal_id
          required: true
          type: string
        - description: depositor defines the deposit addresses from the proposals.
          in: path
          name: depositor
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_286
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        Deposit queries single deposit information based on proposalID,
        depositAddr.
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}/tally:
    get:
      operationId: TallyResult
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          format: uint64
          in: path
          name: proposal_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_287
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: TallyResult queries the tally of a proposal vote.
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}/votes:
    get:
      operationId: Votes
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          format: uint64
          in: path
          name: proposal_id
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_288
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Votes queries votes of a given proposal.
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}/votes/{voter}:
    get:
      operationId: Vote
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          format: uint64
          in: path
          name: proposal_id
          required: true
          type: string
        - description: voter defines the voter address for the proposals.
          in: path
          name: voter
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_289
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Vote queries voted information based on proposalID, voterAddr.
      tags:
        - Query
  /cosmos/gov/v1beta1/params/{params_type}:
    get:
      operationId: Params
      parameters:
        - description: >-
            params_type defines which parameters to query for, can be one of
            "voting",

            "tallying" or "deposit".
          in: path
          name: params_type
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_290
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Params queries all parameters of the gov module.
      tags:
        - Query
  /cosmos/gov/v1beta1/proposals:
    get:
      operationId: Proposals
      parameters:
        - default: PROPOSAL_STATUS_UNSPECIFIED
          description: |-
            proposal_status defines the status of the proposals.

             - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
             - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
            period.
             - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
            period.
             - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
            passed.
             - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
            been rejected.
             - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
            failed.
          enum:
            - PROPOSAL_STATUS_UNSPECIFIED
            - PROPOSAL_STATUS_DEPOSIT_PERIOD
            - PROPOSAL_STATUS_VOTING_PERIOD
            - PROPOSAL_STATUS_PASSED
            - PROPOSAL_STATUS_REJECTED
            - PROPOSAL_STATUS_FAILED
          in: query
          name: proposal_status
          required: false
          type: string
        - description: voter defines the voter address for the proposals.
          in: query
          name: voter
          required: false
          type: string
        - description: depositor defines the deposit addresses from the proposals.
          in: query
          name: depositor
          required: false
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_291
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Proposals queries all proposals based on given status.
      tags:
        - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}:
    get:
      operationId: Proposal
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          format: uint64
          in: path
          name: proposal_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_292
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Proposal queries proposal details based on ProposalID.
      tags:
        - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits:
    get:
      operationId: Deposits
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          format: uint64
          in: path
          name: proposal_id
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_293
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Deposits queries all deposits of a single proposal.
      tags:
        - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}:
    get:
      operationId: Deposit
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          format: uint64
          in: path
          name: proposal_id
          required: true
          type: string
        - description: depositor defines the deposit addresses from the proposals.
          in: path
          name: depositor
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_294
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        Deposit queries single deposit information based on proposalID,
        depositor address.
      tags:
        - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/tally:
    get:
      operationId: TallyResult
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          format: uint64
          in: path
          name: proposal_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_295
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: TallyResult queries the tally of a proposal vote.
      tags:
        - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/votes:
    get:
      operationId: Votes
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          format: uint64
          in: path
          name: proposal_id
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_296
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Votes queries votes of a given proposal.
      tags:
        - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}:
    get:
      operationId: Vote
      parameters:
        - description: proposal_id defines the unique id of the proposal.
          format: uint64
          in: path
          name: proposal_id
          required: true
          type: string
        - description: voter defines the voter address for the proposals.
          in: path
          name: voter
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_297
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Vote queries voted information based on proposalID, voterAddr.
      tags:
        - Query
  /cosmos/slashing/v1beta1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema: *ref_298
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Params queries the parameters of slashing module
      tags:
        - Query
  /cosmos/slashing/v1beta1/signing_infos:
    get:
      operationId: SigningInfos
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_299
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: SigningInfos queries signing info of all validators
      tags:
        - Query
  /cosmos/slashing/v1beta1/signing_infos/{cons_address}:
    get:
      operationId: SigningInfo
      parameters:
        - description: cons_address is the address to query signing info of
          in: path
          name: cons_address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_300
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: SigningInfo queries the signing info of given cons address
      tags:
        - Query
  /cosmos/staking/v1beta1/delegations/{delegator_addr}:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: DelegatorDelegations
      parameters:
        - description: delegator_addr defines the delegator address to query for.
          in: path
          name: delegator_addr
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_301
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        DelegatorDelegations queries all delegations of a given delegator
        address.
      tags:
        - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: Redelegations
      parameters:
        - description: delegator_addr defines the delegator address to query for.
          in: path
          name: delegator_addr
          required: true
          type: string
        - description: src_validator_addr defines the validator address to redelegate from.
          in: query
          name: src_validator_addr
          required: false
          type: string
        - description: dst_validator_addr defines the validator address to redelegate to.
          in: query
          name: dst_validator_addr
          required: false
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_302
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Redelegations queries redelegations of given address.
      tags:
        - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: DelegatorUnbondingDelegations
      parameters:
        - description: delegator_addr defines the delegator address to query for.
          in: path
          name: delegator_addr
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_303
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        DelegatorUnbondingDelegations queries all unbonding delegations of a
        given

        delegator address.
      tags:
        - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: DelegatorValidators
      parameters:
        - description: delegator_addr defines the delegator address to query for.
          in: path
          name: delegator_addr
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_304
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        DelegatorValidators queries all validators info for given delegator
        address.
      tags:
        - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}:
    get:
      operationId: DelegatorValidator
      parameters:
        - description: delegator_addr defines the delegator address to query for.
          in: path
          name: delegator_addr
          required: true
          type: string
        - description: validator_addr defines the validator address to query for.
          in: path
          name: validator_addr
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_305
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        DelegatorValidator queries validator info for given delegator validator
        pair.
      tags:
        - Query
  /cosmos/staking/v1beta1/historical_info/{height}:
    get:
      operationId: HistoricalInfo
      parameters:
        - description: height defines at which height to query the historical info.
          format: int64
          in: path
          name: height
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_306
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: HistoricalInfo queries the historical info for given height.
      tags:
        - Query
  /cosmos/staking/v1beta1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema: *ref_307
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Parameters queries the staking parameters.
      tags:
        - Query
  /cosmos/staking/v1beta1/pool:
    get:
      operationId: Pool
      responses:
        '200':
          description: A successful response.
          schema: *ref_308
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Pool queries the pool info.
      tags:
        - Query
  /cosmos/staking/v1beta1/validators:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: Validators
      parameters:
        - description: status enables to query for validators matching a given status.
          in: query
          name: status
          required: false
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_309
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Validators queries all validators that match the given status.
      tags:
        - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}:
    get:
      operationId: Validator
      parameters:
        - description: validator_addr defines the validator address to query for.
          in: path
          name: validator_addr
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_310
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Validator queries validator info for given validator address.
      tags:
        - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: ValidatorDelegations
      parameters:
        - description: validator_addr defines the validator address to query for.
          in: path
          name: validator_addr
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_311
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: ValidatorDelegations queries delegate info for given validator.
      tags:
        - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}:
    get:
      operationId: Delegation
      parameters:
        - description: validator_addr defines the validator address to query for.
          in: path
          name: validator_addr
          required: true
          type: string
        - description: delegator_addr defines the delegator address to query for.
          in: path
          name: delegator_addr
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_312
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Delegation queries delegate info for given validator delegator pair.
      tags:
        - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation:
    get:
      operationId: UnbondingDelegation
      parameters:
        - description: validator_addr defines the validator address to query for.
          in: path
          name: validator_addr
          required: true
          type: string
        - description: delegator_addr defines the delegator address to query for.
          in: path
          name: delegator_addr
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_313
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        UnbondingDelegation queries unbonding info for given validator delegator
        pair.
      tags:
        - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: ValidatorUnbondingDelegations
      parameters:
        - description: validator_addr defines the validator address to query for.
          in: path
          name: validator_addr
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_314
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        ValidatorUnbondingDelegations queries unbonding delegations of a
        validator.
      tags:
        - Query
  /cosmos/tx/v1beta1/decode:
    post:
      description: 'Since: cosmos-sdk 0.47'
      operationId: TxDecode
      parameters:
        - in: body
          name: body
          required: true
          schema: *ref_315
      responses:
        '200':
          description: A successful response.
          schema: *ref_316
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: TxDecode decodes the transaction.
      tags:
        - Service
  /cosmos/tx/v1beta1/decode/amino:
    post:
      description: 'Since: cosmos-sdk 0.47'
      operationId: TxDecodeAmino
      parameters:
        - in: body
          name: body
          required: true
          schema: *ref_317
      responses:
        '200':
          description: A successful response.
          schema: *ref_318
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: TxDecodeAmino decodes an Amino transaction from encoded bytes to JSON.
      tags:
        - Service
  /cosmos/tx/v1beta1/encode:
    post:
      description: 'Since: cosmos-sdk 0.47'
      operationId: TxEncode
      parameters:
        - in: body
          name: body
          required: true
          schema: *ref_319
      responses:
        '200':
          description: A successful response.
          schema: *ref_320
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: TxEncode encodes the transaction.
      tags:
        - Service
  /cosmos/tx/v1beta1/encode/amino:
    post:
      description: 'Since: cosmos-sdk 0.47'
      operationId: TxEncodeAmino
      parameters:
        - in: body
          name: body
          required: true
          schema: *ref_321
      responses:
        '200':
          description: A successful response.
          schema: *ref_322
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: TxEncodeAmino encodes an Amino transaction from JSON to encoded bytes.
      tags:
        - Service
  /cosmos/tx/v1beta1/simulate:
    post:
      operationId: Simulate
      parameters:
        - in: body
          name: body
          required: true
          schema: *ref_323
      responses:
        '200':
          description: A successful response.
          schema: *ref_324
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Simulate simulates executing a transaction for estimating gas usage.
      tags:
        - Service
  /cosmos/tx/v1beta1/txs:
    get:
      operationId: GetTxsEvent
      parameters:
        - collectionFormat: multi
          description: >-
            events is the list of transaction event type.

            Deprecated post v0.47.x: use query instead, which should contain a
            valid

            events query.
          in: query
          items:
            type: string
          name: events
          required: false
          type: array
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
        - default: ORDER_BY_UNSPECIFIED
          description: |2-
             - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults
            to ASC in this case.
             - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
             - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
          enum:
            - ORDER_BY_UNSPECIFIED
            - ORDER_BY_ASC
            - ORDER_BY_DESC
          in: query
          name: order_by
          required: false
          type: string
        - description: |-
            page is the page number to query, starts at 1. If not provided, will
            default to first page.
          format: uint64
          in: query
          name: page
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: limit
          required: false
          type: string
        - description: >-
            query defines the transaction event query that is proxied to
            Tendermint's

            TxSearch RPC method. The query must be valid.


            Since cosmos-sdk 0.50
          in: query
          name: query
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_325
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: GetTxsEvent fetches txs by event.
      tags:
        - Service
    post:
      operationId: BroadcastTx
      parameters:
        - in: body
          name: body
          required: true
          schema: *ref_326
      responses:
        '200':
          description: A successful response.
          schema: *ref_327
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: BroadcastTx broadcast transaction.
      tags:
        - Service
  /cosmos/tx/v1beta1/txs/block/{height}:
    get:
      description: 'Since: cosmos-sdk 0.45.2'
      operationId: GetBlockWithTxs
      parameters:
        - description: height is the height of the block to query.
          format: int64
          in: path
          name: height
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_328
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: GetBlockWithTxs fetches a block with decoded txs.
      tags:
        - Service
  /cosmos/tx/v1beta1/txs/{hash}:
    get:
      operationId: GetTx
      parameters:
        - description: hash is the tx hash to query, encoded as a hex string.
          in: path
          name: hash
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_329
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: GetTx fetches a tx by hash.
      tags:
        - Service
  /cosmos/upgrade/v1beta1/applied_plan/{name}:
    get:
      operationId: AppliedPlan
      parameters:
        - description: name is the name of the applied plan to query for.
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_330
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: AppliedPlan queries a previously applied upgrade plan by its name.
      tags:
        - Query
  /cosmos/upgrade/v1beta1/authority:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: Authority
      responses:
        '200':
          description: A successful response.
          schema: *ref_331
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Returns the account with authority to conduct upgrades
      tags:
        - Query
  /cosmos/upgrade/v1beta1/current_plan:
    get:
      operationId: CurrentPlan
      responses:
        '200':
          description: A successful response.
          schema: *ref_332
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: CurrentPlan queries the current upgrade plan.
      tags:
        - Query
  /cosmos/upgrade/v1beta1/module_versions:
    get:
      description: 'Since: cosmos-sdk 0.43'
      operationId: ModuleVersions
      parameters:
        - description: |-
            module_name is a field to query a specific module
            consensus version from state. Leaving this empty will
            fetch the full list of module versions from state.
          in: query
          name: module_name
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_333
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: ModuleVersions queries the list of module versions from state.
      tags:
        - Query
  /cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}:
    get:
      operationId: UpgradedConsensusState
      parameters:
        - description: |-
            last height of the current chain must be sent in request
            as this is the height under which next consensus state is stored
          format: int64
          in: path
          name: last_height
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_334
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        UpgradedConsensusState queries the consensus state that will serve

        as a trusted kernel for the next version of this chain. It will only be

        stored at the last height of this chain.

        UpgradedConsensusState RPC not supported with legacy querier

        This rpc is deprecated now that IBC has its own replacement

        (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
      tags:
        - Query
  /cosmwasm/wasm/v1/code:
    get:
      operationId: Codes
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_335
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Codes gets the metadata for all stored wasm codes
      tags:
        - Query
  /cosmwasm/wasm/v1/code/{code_id}:
    get:
      operationId: Code
      parameters:
        - format: uint64
          in: path
          name: code_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_336
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Code gets the binary code and metadata for a singe wasm code
      tags:
        - Query
  /cosmwasm/wasm/v1/code/{code_id}/contracts:
    get:
      operationId: ContractsByCode
      parameters:
        - format: uint64
          in: path
          name: code_id
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_337
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: ContractsByCode lists all smart contracts for a code id
      tags:
        - Query
  /cosmwasm/wasm/v1/codes/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema: *ref_338
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Params gets the module params
      tags:
        - Query
  /cosmwasm/wasm/v1/codes/pinned:
    get:
      operationId: PinnedCodes
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_339
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: PinnedCodes gets the pinned code ids
      tags:
        - Query
  /cosmwasm/wasm/v1/contract/build_address:
    get:
      operationId: BuildAddress
      parameters:
        - description: CodeHash is the hash of the code.
          in: query
          name: code_hash
          required: false
          type: string
        - description: CreatorAddress is the address of the contract instantiator.
          in: query
          name: creator_address
          required: false
          type: string
        - description: Salt is a hex encoded salt.
          in: query
          name: salt
          required: false
          type: string
        - description: >-
            InitArgs are optional json encoded init args to be used in contract
            address

            building if provided.
          format: byte
          in: query
          name: init_args
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_340
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: BuildAddress builds a contract address
      tags:
        - Query
  /cosmwasm/wasm/v1/contract/{address}:
    get:
      operationId: ContractInfo
      parameters:
        - description: address is the address of the contract to query
          in: path
          name: address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_341
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: ContractInfo gets the contract meta data
      tags:
        - Query
  /cosmwasm/wasm/v1/contract/{address}/history:
    get:
      operationId: ContractHistory
      parameters:
        - description: address is the address of the contract to query
          in: path
          name: address
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_342
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: ContractHistory gets the contract code history
      tags:
        - Query
  /cosmwasm/wasm/v1/contract/{address}/raw/{query_data}:
    get:
      operationId: RawContractState
      parameters:
        - description: address is the address of the contract
          in: path
          name: address
          required: true
          type: string
        - format: byte
          in: path
          name: query_data
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_343
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: RawContractState gets single key from the raw store data of a contract
      tags:
        - Query
  /cosmwasm/wasm/v1/contract/{address}/smart/{query_data}:
    get:
      operationId: SmartContractState
      parameters:
        - description: address is the address of the contract
          in: path
          name: address
          required: true
          type: string
        - description: QueryData contains the query data passed to the contract
          format: byte
          in: path
          name: query_data
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_344
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: SmartContractState get smart query result from the contract
      tags:
        - Query
  /cosmwasm/wasm/v1/contract/{address}/state:
    get:
      operationId: AllContractState
      parameters:
        - description: address is the address of the contract
          in: path
          name: address
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_345
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: AllContractState gets all raw store data for a single contract
      tags:
        - Query
  /cosmwasm/wasm/v1/contracts/creator/{creator_address}:
    get:
      operationId: ContractsByCreator
      parameters:
        - description: CreatorAddress is the address of contract creator
          in: path
          name: creator_address
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_346
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: ContractsByCreator gets the contracts by creator
      tags:
        - Query
  /ibc/apps/fee/v1/channels/{channel_id}/ports/{port_id}/fee_enabled:
    get:
      operationId: FeeEnabledChannel
      parameters:
        - description: unique channel identifier
          in: path
          name: channel_id
          required: true
          type: string
        - description: unique port identifier
          in: path
          name: port_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_347
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        FeeEnabledChannel returns true if the provided port and channel
        identifiers belong to a fee enabled channel
      tags:
        - Query
  /ibc/apps/fee/v1/channels/{channel_id}/ports/{port_id}/incentivized_packets:
    get:
      operationId: IncentivizedPacketsForChannel
      parameters:
        - in: path
          name: channel_id
          required: true
          type: string
        - in: path
          name: port_id
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
        - description: Height to query at.
          format: uint64
          in: query
          name: query_height
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_348
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Gets all incentivized packets for a specific channel
      tags:
        - Query
  /ibc/apps/fee/v1/channels/{channel_id}/relayers/{relayer}/counterparty_payee:
    get:
      operationId: CounterpartyPayee
      parameters:
        - description: unique channel identifier
          in: path
          name: channel_id
          required: true
          type: string
        - description: the relayer address to which the counterparty is registered
          in: path
          name: relayer
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_349
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        CounterpartyPayee returns the registered counterparty payee for forward
        relaying
      tags:
        - Query
  /ibc/apps/fee/v1/channels/{channel_id}/relayers/{relayer}/payee:
    get:
      operationId: Payee
      parameters:
        - description: unique channel identifier
          in: path
          name: channel_id
          required: true
          type: string
        - description: the relayer address to which the distribution address is registered
          in: path
          name: relayer
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_350
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        Payee returns the registered payee address for a specific channel given
        the relayer address
      tags:
        - Query
  /ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/incentivized_packet:
    get:
      operationId: IncentivizedPacket
      parameters:
        - description: channel unique identifier
          in: path
          name: packet_id.channel_id
          required: true
          type: string
        - description: channel port identifier
          in: path
          name: packet_id.port_id
          required: true
          type: string
        - description: packet sequence
          format: uint64
          in: path
          name: packet_id.sequence
          required: true
          type: string
        - description: block height at which to query.
          format: uint64
          in: query
          name: query_height
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_351
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        IncentivizedPacket returns all packet fees for a packet given its
        identifier
      tags:
        - Query
  /ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/total_ack_fees:
    get:
      operationId: TotalAckFees
      parameters:
        - description: channel unique identifier
          in: path
          name: packet_id.channel_id
          required: true
          type: string
        - description: channel port identifier
          in: path
          name: packet_id.port_id
          required: true
          type: string
        - description: packet sequence
          format: uint64
          in: path
          name: packet_id.sequence
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_352
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        TotalAckFees returns the total acknowledgement fees for a packet given
        its identifier
      tags:
        - Query
  /ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/total_recv_fees:
    get:
      operationId: TotalRecvFees
      parameters:
        - description: channel unique identifier
          in: path
          name: packet_id.channel_id
          required: true
          type: string
        - description: channel port identifier
          in: path
          name: packet_id.port_id
          required: true
          type: string
        - description: packet sequence
          format: uint64
          in: path
          name: packet_id.sequence
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_353
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        TotalRecvFees returns the total receive fees for a packet given its
        identifier
      tags:
        - Query
  /ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/total_timeout_fees:
    get:
      operationId: TotalTimeoutFees
      parameters:
        - description: channel unique identifier
          in: path
          name: packet_id.channel_id
          required: true
          type: string
        - description: channel port identifier
          in: path
          name: packet_id.port_id
          required: true
          type: string
        - description: packet sequence
          format: uint64
          in: path
          name: packet_id.sequence
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_354
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        TotalTimeoutFees returns the total timeout fees for a packet given its
        identifier
      tags:
        - Query
  /ibc/apps/fee/v1/fee_enabled:
    get:
      operationId: FeeEnabledChannels
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
        - description: block height at which to query.
          format: uint64
          in: query
          name: query_height
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_355
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: FeeEnabledChannels returns a list of all fee enabled channels
      tags:
        - Query
  /ibc/apps/fee/v1/incentivized_packets:
    get:
      operationId: IncentivizedPackets
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
        - description: block height at which to query.
          format: uint64
          in: query
          name: query_height
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_356
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        IncentivizedPackets returns all incentivized packets and their
        associated fees
      tags:
        - Query
  /ibc/apps/interchain_accounts/controller/v1/owners/{owner}/connections/{connection_id}:
    get:
      operationId: InterchainAccount
      parameters:
        - in: path
          name: owner
          required: true
          type: string
        - in: path
          name: connection_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_357
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        InterchainAccount returns the interchain account address for a given
        owner address on a given connection
      tags:
        - Query
  /ibc/apps/interchain_accounts/controller/v1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema: *ref_358
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Params queries all parameters of the ICA controller submodule.
      tags:
        - Query
  /ibc/apps/interchain_accounts/host/v1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema: *ref_359
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Params queries all parameters of the ICA host submodule.
      tags:
        - Query
  /ibc/apps/transfer/v1/channels/{channel_id}/ports/{port_id}/escrow_address:
    get:
      operationId: EscrowAddress
      parameters:
        - description: unique channel identifier
          in: path
          name: channel_id
          required: true
          type: string
        - description: unique port identifier
          in: path
          name: port_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_360
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        EscrowAddress returns the escrow address for a particular port and
        channel id.
      tags:
        - Query
  /ibc/apps/transfer/v1/denom_hashes/{trace}:
    get:
      operationId: DenomHash
      parameters:
        - description: The denomination trace ([port_id]/[channel_id])+/[denom]
          in: path
          name: trace
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_361
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: DenomHash queries a denomination hash information.
      tags:
        - Query
  /ibc/apps/transfer/v1/denom_traces:
    get:
      operationId: DenomTraces
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_362
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: DenomTraces queries all denomination traces.
      tags:
        - Query
  /ibc/apps/transfer/v1/denom_traces/{hash}:
    get:
      operationId: DenomTrace
      parameters:
        - description: >-
            hash (in hex format) or denom (full denom with ibc prefix) of the
            denomination trace information.
          in: path
          name: hash
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_363
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: DenomTrace queries a denomination trace information.
      tags:
        - Query
  /ibc/apps/transfer/v1/denoms/{denom}/total_escrow:
    get:
      operationId: TotalEscrowForDenom
      parameters:
        - in: path
          name: denom
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_364
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        TotalEscrowForDenom returns the total amount of tokens in escrow based
        on the denom.
      tags:
        - Query
  /ibc/apps/transfer/v1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema: *ref_365
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Params queries all parameters of the ibc-transfer module.
      tags:
        - Query
  /ibc/core/channel/v1/channels:
    get:
      operationId: Channels
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_366
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Channels queries all the IBC channels of a chain.
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}:
    get:
      operationId: Channel
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_367
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Channel queries an IBC Channel.
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/client_state:
    get:
      operationId: ChannelClientState
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_368
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        ChannelClientState queries for the client state for the channel
        associated

        with the provided channel identifiers.
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/consensus_state/revision/{revision_number}/height/{revision_height}:
    get:
      operationId: ChannelConsensusState
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          type: string
        - description: revision number of the consensus state
          format: uint64
          in: path
          name: revision_number
          required: true
          type: string
        - description: revision height of the consensus state
          format: uint64
          in: path
          name: revision_height
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_369
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        ChannelConsensusState queries for the consensus state for the channel
        associated with the provided channel identifiers.
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/next_sequence:
    get:
      operationId: NextSequenceReceive
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_370
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        NextSequenceReceive returns the next receive sequence for a given
        channel.
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/next_sequence_send:
    get:
      operationId: NextSequenceSend
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_371
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: NextSequenceSend returns the next send sequence for a given channel.
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acknowledgements:
    get:
      operationId: PacketAcknowledgements
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
        - collectionFormat: multi
          description: list of packet sequences.
          in: query
          items:
            format: uint64
            type: string
          name: packet_commitment_sequences
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema: *ref_372
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        PacketAcknowledgements returns all the packet acknowledgements
        associated

        with a channel.
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acks/{sequence}:
    get:
      operationId: PacketAcknowledgement
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          type: string
        - description: packet sequence
          format: uint64
          in: path
          name: sequence
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_373
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: PacketAcknowledgement queries a stored packet acknowledgement hash.
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments:
    get:
      operationId: PacketCommitments
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_374
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        PacketCommitments returns all the packet commitments hashes associated
        with a channel.
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_ack_sequences}/unreceived_acks:
    get:
      operationId: UnreceivedAcks
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          type: string
        - collectionFormat: csv
          description: list of acknowledgement sequences
          in: path
          items:
            format: uint64
            type: string
          minItems: 1
          name: packet_ack_sequences
          required: true
          type: array
      responses:
        '200':
          description: A successful response.
          schema: *ref_375
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        UnreceivedAcks returns all the unreceived IBC acknowledgements
        associated

        with a channel and sequences.
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_commitment_sequences}/unreceived_packets:
    get:
      operationId: UnreceivedPackets
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          type: string
        - collectionFormat: csv
          description: list of packet sequences
          in: path
          items:
            format: uint64
            type: string
          minItems: 1
          name: packet_commitment_sequences
          required: true
          type: array
      responses:
        '200':
          description: A successful response.
          schema: *ref_376
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        UnreceivedPackets returns all the unreceived IBC packets associated with
        a

        channel and sequences.
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{sequence}:
    get:
      operationId: PacketCommitment
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          type: string
        - description: packet sequence
          format: uint64
          in: path
          name: sequence
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_377
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: PacketCommitment queries a stored packet commitment hash.
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_receipts/{sequence}:
    get:
      operationId: PacketReceipt
      parameters:
        - description: channel unique identifier
          in: path
          name: channel_id
          required: true
          type: string
        - description: port unique identifier
          in: path
          name: port_id
          required: true
          type: string
        - description: packet sequence
          format: uint64
          in: path
          name: sequence
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_378
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        PacketReceipt queries if a given packet sequence has been received on
        the

        queried chain
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/upgrade:
    get:
      operationId: Upgrade
      parameters:
        - in: path
          name: channel_id
          required: true
          type: string
        - in: path
          name: port_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_379
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Upgrade returns the upgrade for a given port and channel id.
      tags:
        - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/upgrade_error:
    get:
      operationId: UpgradeError
      parameters:
        - in: path
          name: channel_id
          required: true
          type: string
        - in: path
          name: port_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_380
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: UpgradeError returns the error receipt if the upgrade handshake failed.
      tags:
        - Query
  /ibc/core/channel/v1/connections/{connection}/channels:
    get:
      operationId: ConnectionChannels
      parameters:
        - description: connection unique identifier
          in: path
          name: connection
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_381
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        ConnectionChannels queries all the channels associated with a connection
        end.
      tags:
        - Query
  /ibc/core/channel/v1/params:
    get:
      operationId: ChannelParams
      responses:
        '200':
          description: A successful response.
          schema: *ref_382
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: ChannelParams queries all parameters of the ibc channel submodule.
      tags:
        - Query
  /ibc/core/client/v1/client_states:
    get:
      operationId: ClientStates
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_383
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: ClientStates queries all the IBC light clients of a chain.
      tags:
        - Query
  /ibc/core/client/v1/client_states/{client_id}:
    get:
      operationId: ClientState
      parameters:
        - description: client state unique identifier
          in: path
          name: client_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_384
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: ClientState queries an IBC light client.
      tags:
        - Query
  /ibc/core/client/v1/client_status/{client_id}:
    get:
      operationId: ClientStatus
      parameters:
        - description: client unique identifier
          in: path
          name: client_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_385
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Status queries the status of an IBC client.
      tags:
        - Query
  /ibc/core/client/v1/consensus_states/{client_id}:
    get:
      operationId: ConsensusStates
      parameters:
        - description: client identifier
          in: path
          name: client_id
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_386
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        ConsensusStates queries all the consensus state associated with a given
        client.
      tags:
        - Query
  /ibc/core/client/v1/consensus_states/{client_id}/heights:
    get:
      operationId: ConsensusStateHeights
      parameters:
        - description: client identifier
          in: path
          name: client_id
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_387
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        ConsensusStateHeights queries the height of every consensus states
        associated with a given client.
      tags:
        - Query
  /ibc/core/client/v1/consensus_states/{client_id}/revision/{revision_number}/height/{revision_height}:
    get:
      operationId: ConsensusState
      parameters:
        - description: client identifier
          in: path
          name: client_id
          required: true
          type: string
        - description: consensus state revision number
          format: uint64
          in: path
          name: revision_number
          required: true
          type: string
        - description: consensus state revision height
          format: uint64
          in: path
          name: revision_height
          required: true
          type: string
        - description: >-
            latest_height overrrides the height field and queries the latest
            stored

            ConsensusState.
          in: query
          name: latest_height
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_388
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        ConsensusState queries a consensus state associated with a client state
        at

        a given height.
      tags:
        - Query
  /ibc/core/client/v1/params:
    get:
      operationId: ClientParams
      responses:
        '200':
          description: A successful response.
          schema: *ref_389
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: ClientParams queries all parameters of the ibc client submodule.
      tags:
        - Query
  /ibc/core/client/v1/upgraded_client_states:
    get:
      operationId: UpgradedClientState
      responses:
        '200':
          description: A successful response.
          schema: *ref_390
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: UpgradedClientState queries an Upgraded IBC light client.
      tags:
        - Query
  /ibc/core/client/v1/upgraded_consensus_states:
    get:
      operationId: UpgradedConsensusState
      responses:
        '200':
          description: A successful response.
          schema: *ref_391
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: UpgradedConsensusState queries an Upgraded IBC consensus state.
      tags:
        - Query
  /ibc/core/client/v1/verify_membership:
    post:
      operationId: VerifyMembership
      parameters:
        - in: body
          name: body
          required: true
          schema: *ref_392
      responses:
        '200':
          description: A successful response.
          schema: *ref_393
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        VerifyMembership queries an IBC light client for proof verification of a
        value at a given key path.
      tags:
        - Query
  /ibc/core/connection/v1/client_connections/{client_id}:
    get:
      operationId: ClientConnections
      parameters:
        - description: client identifier associated with a connection
          in: path
          name: client_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_394
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        ClientConnections queries the connection paths associated with a client
        state.
      tags:
        - Query
  /ibc/core/connection/v1/connections:
    get:
      operationId: Connections
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema: *ref_395
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Connections queries all the IBC connections of a chain.
      tags:
        - Query
  /ibc/core/connection/v1/connections/{connection_id}:
    get:
      operationId: Connection
      parameters:
        - description: connection unique identifier
          in: path
          name: connection_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_396
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: Connection queries an IBC connection end.
      tags:
        - Query
  /ibc/core/connection/v1/connections/{connection_id}/client_state:
    get:
      operationId: ConnectionClientState
      parameters:
        - description: connection identifier
          in: path
          name: connection_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_397
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        ConnectionClientState queries the client state associated with the
        connection.
      tags:
        - Query
  /ibc/core/connection/v1/connections/{connection_id}/consensus_state/revision/{revision_number}/height/{revision_height}:
    get:
      operationId: ConnectionConsensusState
      parameters:
        - description: connection identifier
          in: path
          name: connection_id
          required: true
          type: string
        - format: uint64
          in: path
          name: revision_number
          required: true
          type: string
        - format: uint64
          in: path
          name: revision_height
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_398
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        ConnectionConsensusState queries the consensus state associated with the
        connection.
      tags:
        - Query
  /ibc/core/connection/v1/params:
    get:
      operationId: ConnectionParams
      responses:
        '200':
          description: A successful response.
          schema: *ref_399
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: ConnectionParams queries all parameters of the ibc connection submodule.
      tags:
        - Query
  /kiichain/tokenfactory/v1beta1/denoms/{denom}/authority_metadata:
    get:
      operationId: DenomAuthorityMetadata
      parameters:
        - in: path
          name: denom
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_400
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        DenomAuthorityMetadata defines a gRPC query method for fetching
        DenomAuthorityMetadata for a particular denom.
      tags:
        - Query
  /kiichain/tokenfactory/v1beta1/denoms_from_admin/{admin}:
    get:
      operationId: DenomsFromAdmin
      parameters:
        - in: path
          name: admin
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_401
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        DenomsFromAdmin defines a gRPC query method for fetching all
        denominations owned by a specific admin.
      tags:
        - Query
  /kiichain/tokenfactory/v1beta1/denoms_from_creator/{creator}:
    get:
      operationId: DenomsFromCreator
      parameters:
        - in: path
          name: creator
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: *ref_402
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: |-
        DenomsFromCreator defines a gRPC query method for fetching all
        denominations created by a specific admin/creator.
      tags:
        - Query
  /kiichain/tokenfactory/v1beta1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema: *ref_403
        default:
          description: An unexpected error response.
          schema: *ref_204
      summary: >-
        Params defines a gRPC query method that returns the tokenfactory
        module's

        parameters.
      tags:
        - Query
produces:
  - application/json
swagger: '2.0'
